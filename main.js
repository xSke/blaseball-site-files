(this.webpackJsonpsite = this.webpackJsonpsite || []).push([
  [0],
  {
    11: function (e, t, a) {},
    119: function (e) {
      e.exports = {
        books: [
          {
            title: "Root",
            chapters: [
              { title: "| ||||", id: "b56d96ea-92e7-4895-8cb4-f8a9d9a03804", redacted: true },
              { title: "| |||||", id: "84ade43c-a724-40cc-9459-5b6340f9e528", redacted: true },
              { title: "| |||||||", id: "8a74b84b-233e-4128-a2ef-b8871b65525b", redacted: true },
            ],
          },
          {
            title: "Pre-History I",
            chapters: [
              { title: "The First Day, 1st Edition", id: "db89fdca-5f18-4ab2-8b1a-722274c24d0f", redacted: false },
              { title: "Season A", id: "424cf389-4be5-4def-bae7-7b04f58b885a", redacted: false },
              { title: "Postseason A", id: "41e0bf9a-1854-472c-b5be-ad485c05146e", redacted: false },
              { title: "|||||| |", id: "d35b3910-b294-4633-a5b6-f126d4fa66dc", redacted: true },
              { title: "|||||||| ||||", id: "016c0975-4806-4229-9a40-aba4a75a8382", redacted: true },
              { title: "||||| ||||| |||||||||", id: "12d3c673-b0d4-4c30-a0c6-e1894189e1c7", redacted: true },
              { title: "|||||||| |", id: "427ac722-6330-475f-98f7-08b44e4a27ed", redacted: true },
              { title: "|||||| |", id: "f313b2bf-c6e4-4f75-9fd7-863820265359", redacted: true },
              { title: "|||||| |||||||||", id: "739f16fc-6872-4d5b-a715-bff47071df65", redacted: true },
              { title: "|||||||| |", id: "ee43a14a-9b8c-43ed-9370-4eefcc8f5b3c", redacted: true },
              { title: "||| ||| || ||| |||||||||", id: "25de9318-c872-4d06-b019-9a7c7017aab5", redacted: true },
              { title: "|||||| |", id: "c54d6fc5-0899-415d-942d-36b82b2f66e6", redacted: true },
              { title: "|||||||| |", id: "b3efde45-073d-40a0-ba6b-62b4a5d09a38", redacted: true },
              { title: "||| ||||| |||||", id: "7403c4b2-f28f-4bc2-b2d1-b0e9ed13296a", redacted: true },
              { title: "|||| ||||||||", id: "4e37e27c-fa7f-4405-8732-bd4131e717a2", redacted: true },
              { title: "|||||| |", id: "829743bf-7531-4552-ad50-d9644a599486", redacted: true },
              { title: "| ||||", id: "3e51714c-6f8e-4725-8345-3f8a1e22a6e1", redacted: true },
              { title: "| ||||||||", id: "68e232dc-36fa-4e3f-aff4-c4f97e27e785", redacted: true },
              { title: "|||||||| |", id: "d44bfe59-e439-4ead-aaf1-233278103971", redacted: true },
              { title: "||| ||| ||||||", id: "4bc47bf2-db4d-48eb-bba8-f2754197ec50", redacted: true },
            ],
          },
          {
            title: "Pre-History II",
            chapters: [
              { title: "||| ||||| |||| ||| |||||||", id: "4de3649f-bbcf-4e09-b1b6-c9a35e4b817d", redacted: true },
              { title: "|||||| ||", id: "9757f352-1b33-4478-858d-9248bc4c7e5b", redacted: true },
              { title: "||| ||||| |||", id: "326cc41d-8bad-4bb6-b2ac-a0e9fe435b42", redacted: true },
              { title: "|||||||| ||", id: "420a9f1f-ce20-48c3-affc-3004aa4c0eba", redacted: true },
              { title: "| |||||| |||||||", id: "477f2379-db29-4af4-a5ba-6fe7d5744056", redacted: true },
              { title: "|||||| ||", id: "643c4519-41c8-4da4-bb7d-9f67bc6a7c1e", redacted: true },
              { title: "| ||||| |||||||", id: "14db5581-9a08-4a4d-a07d-fb1b1c1cc771", redacted: true },
              { title: "|||||||| ||", id: "4c4a1ae0-a2dc-424d-8da9-dbd564147559", redacted: true },
              { title: "|||||| ||", id: "2fcd13c2-5787-4de6-acba-a8eff59f1fe1", redacted: true },
              { title: "||| ||||||||| || ||||", id: "32730ddd-901e-4ded-a58e-3d46f6c7e1f0", redacted: true },
              { title: "|||||||| ||", id: "c0194626-23fc-4bf8-9425-118fab23e7fe", redacted: true },
              { title: "|||||| ||", id: "6a4cd5b0-cd95-421a-8ce9-3fcfc2b31f0e", redacted: true },
              { title: "|||||||| ||", id: "1e8491b2-a2c6-4c50-bbac-77d5d0ace25b", redacted: true },
              { title: "|||||||||| |||||||||||||", id: "77a880d9-1ff6-4c47-8cc3-453d5d1476e7", redacted: true },
              { title: "|||||| ||", id: "595c40f6-4da0-4ba3-a1b2-bc9169311abf", redacted: true },
              { title: "|||||||| ||", id: "6cd8a662-ef44-4b5f-b186-63a87d5a527b", redacted: true },
              { title: "||| |||||||||||| ||||||", id: "834e08fe-8228-47e7-8ee2-13b4143487fc", redacted: true },
              { title: "|||||| ||", id: "4286be18-3625-4595-8285-1e9111b3a143", redacted: true },
              { title: "|||||||| ||", id: "4a47f7a4-e9ae-42e8-9378-0dc77925a0f1", redacted: true },
              { title: "|||||| ||", id: "8b8697d7-7dc5-479b-bc20-9e8295c40dd0", redacted: true },
              { title: "| ||||| |||||||||", id: "a3de1ac4-87d5-4b94-8b64-268a4f64c13b", redacted: true },
              { title: "|||||||| ||", id: "0049de10-c07a-4d9a-83bc-f2b31098906c", redacted: true },
              { title: "| ||||| |||||||||||", id: "e5a0a130-8df1-43a1-9880-2a66ff087153", redacted: true },
              { title: "|||||| ||", id: "6c04ea46-617a-488e-b3bb-ce0277d76585", redacted: true },
              { title: "|||||||| ||", id: "0bcb144f-e000-4513-8163-fc048201afed", redacted: true },
              { title: "||||||| ||||||||||||", id: "5afe46bb-de89-4724-a7f6-fa1bfd5d96f7", redacted: true },
              { title: "|||||| ||", id: "ddcfd46d-1b62-4de7-b22b-5f51ad0050c2", redacted: true },
              { title: "|||||||| ||", id: "97f51687-21ff-43f3-ad70-ec7a49d12f35", redacted: true },
              { title: "| ||||||| || ||||", id: "54701884-7c10-4018-a3bd-5e45786cbfde", redacted: true },
              { title: "| ||||||||||||| || ||||||||||", id: "d884bf05-4680-4c80-881f-77ca29ec202a", redacted: true },
              { title: "||| ||| ||||||", id: "e6a1e840-aa52-4143-9d3f-7b6c8c4fc5a0", redacted: true },
              { title: "| ||||", id: "948c3b99-82d5-4850-bc5c-b64774dd18bd", redacted: true },
            ],
          },
          {
            title: "Bridge",
            chapters: [
              { title: "||| ||||| |||||||||", id: "d22a91ed-1611-47e9-97a5-0123aaf31776", redacted: true },
              { title: "||| ||||| |||| ||| |||||||", id: "6567eb7f-de92-442f-b0ee-41187411f997", redacted: true },
              { title: "|||||| |", id: "7ecc3aaa-421e-40f7-a30d-8ddddd87095d", redacted: true },
              { title: "||||||| |", id: "55ad6591-103e-47c3-b5b1-99f366b62b09", redacted: true },
              { title: "||| ||||| ||||||", id: "134e38d4-e1d3-4074-a24b-aadc96c1e168", redacted: true },
            ],
          },
          {
            title: "Discipline",
            chapters: [
              { title: "||| ||||| |||| ||| |||||||", id: "1d8a11e7-73c0-4234-ac33-7381007156d6", redacted: true },
              { title: "||| ||||||||| ||||", id: "d855fe19-dd24-495e-a52e-3921fcd5a517", redacted: true },
              { title: "|||||| |||||||||||||", id: "81b11619-7b2a-477f-a0ee-98b928d24adf", redacted: true },
              { title: "|||||| |||||", id: "84741e54-2c0f-4678-83b9-a0db5dfea8ff", redacted: true },
              { title: "||| ||||| ||||||", id: "62737500-6f94-464e-94dc-4a753c816ef9", redacted: true },
              { title: "||| ||||| ||||||||", id: "750a5ac7-c9f1-4e50-980b-559fcff194a0", redacted: true },
              { title: "||| ||||||| |||", id: "5282fe53-d90a-4700-85ab-a8e717370426", redacted: true },
              { title: "||| ||| |||||||||", id: "7a6f7a38-9a77-45a6-b73e-d1e7c3711453", redacted: true },
              { title: "|||||| |", id: "408c4a86-c135-4d13-914e-5dc285a67612", redacted: true },
              { title: "|||||||| |", id: "e57f4ff1-c460-41ae-a2c9-f77284199bb0", redacted: true },
              { title: "|||||| |", id: "cdefbb50-6d20-4228-b638-dd790dad6490", redacted: true },
              { title: "|||||||| |", id: "0db4aa83-9b1a-45dd-8123-f4464fe718f7", redacted: true },
              { title: "|||||| || |||||| ||||||", id: "2f7bb8cb-caec-4056-9571-27789d6ed1c7", redacted: true },
              { title: "|||||||| |", id: "128b6012-b173-402b-b6d1-f58b6cfaf6a4", redacted: true },
              { title: "|||||| || ||||||||", id: "cedad557-b71b-4905-b93d-16c8c9258eb1", redacted: true },
              { title: "|||||||| |", id: "19babc27-a5c0-43b0-9c4a-dbb7ba6cb1d5", redacted: true },
              { title: "|||||| || ||||||", id: "3ba824c9-af6f-4fcb-9874-c50f11ab1326", redacted: true },
              { title: "|||||||| |", id: "ca6a2ed1-4d10-4499-89a6-eeeee639efdf", redacted: true },
              { title: "|||||| || ||||", id: "ecd28e1a-f12a-4653-a74a-027bce64235a", redacted: true },
              { title: "|||||||| |", id: "ef4889da-313f-4959-93d8-40fac011c8be", redacted: true },
              { title: "|||||| || ||||||| |||||||", id: "645d22b6-696b-4630-a706-ef268172df6f", redacted: true },
              { title: "A Ruby Tuesday", id: "dcf7d279-1df0-47d0-a8c1-237a4ae98ebf" },
              { title: "|||||||| |", id: "c787f35e-0ab1-4730-af6f-3bd1f5cb68ec", redacted: true },
              { title: "|||||| || |||| || ||||||||", id: "727de905-481f-4d03-8f40-37675c56cbd3", redacted: true },
              { title: "|||||||| |", id: "55f23d02-86b5-44fa-8651-6b8dc88117b4", redacted: true },
              { title: "|||||| || ||||||||", id: "4ec7884a-39cc-48e0-a1ba-5c93abae9f52", redacted: true },
              { title: "|||||||| |", id: "8971475d-42b2-4235-90e5-72d02bd21388", redacted: true },
              { title: "|||||| ||| |||||||||", id: "f01be5dd-a587-46f0-9634-242b04fc991a", redacted: true },
              { title: "|||||||| ||", id: "e4c46a49-dd28-4a0b-9639-0c03bb3a91dc", redacted: true },
              { title: "|||||| ||| ||||| | ||||||||||", id: "12b1de05-d48e-4c63-89c0-7af5a7731dff", redacted: true },
              { title: "|||||||| ||", id: "92c84947-aee7-43a7-bdcb-6b20967aab94", redacted: true },
            ],
          },
        ],
      };
    },
    129: function (e, t, a) {},
    130: function (e, t, a) {},
    131: function (e, t, a) {},
    156: function (e) {
      e.exports = {
        collection: [
          "1291478969007702028",
          "1291492128997203969",
          "1291505998960746502",
          "1291515697357623298",
          "1291665712008790017",
          "1291701789088260098",
          "1291730406426005505",
          "1292616993619824640",
          "1298419425058541568",
          "1292602490282680321",
          "1292574327708286976",
          "1292563492772483074",
          "1292462456560914433",
          "1292374036228390914",
          "1292328924400082950",
          "1292321816355061761",
          "1291044656990609411",
          "1291966298486800384",
          "1298703697589891072",
          "1298692542297497601",
          "1298303094502039552",
          "1298718347463258112",
          "1298714979516858368",
          "1292283092791472128",
          "1299453598976311297",
          "1301201119625056262",
          "1293023263766061057",
          "1299351046695915521",
          "1299411827508613121",
          "1301388078389571584",
          "1300922824337641472",
          "1301495690120626176",
          "1301435147296931844",
          "1301423378104868864",
          "1301521375237201921",
          "1300993681260818432",
          "1298741844776562699",
          "1299493446529486849",
          "1299413592081661960",
          "1299493153393778703",
          "1298628448533921793",
          "1300535015923740672",
          "1299044128911699969",
          "1301222727269994499",
          "1300061234952273920",
          "1299861902760255488",
          "1300402900154421249",
          "1299860910027272192",
          "1299499164905041920",
          "1298677340067831809",
          "1298718347463258112",
          "1300948067718434816",
          "1300589084176453634",
          "1299510063204380672",
          "1299510298160902144",
          "1299624073836847104",
          "1299757653418283014",
          "1300870609870770185",
          "1300478649439719427",
          "1299126796202508289",
          "1299881460757749760",
          "1298709336269533186",
          "1299831144880328704",
          "1299472236374622210",
          "1300684985800839168",
          "1300987760493330432",
          "1299471924381257735",
          "1299493828311871494",
          "1298789856357670912",
          "1299199072952373256",
          "1300217872569053184",
          "1300601052639703041",
          "1300175697617584130",
          "1300919462955278338",
          "1300554477829787648",
          "1300587913831350272",
          "1299584920273080320",
          "1299509723532865537",
          "1298737802679640064",
          "1300325261657944064",
          "1301257733602041856",
          "1300695163342172160",
          "1299846070021824512",
          "1302040200630226945",
          "1299472236374622210",
          "1302009830228586498",
          "1301991653692104705",
          "1301944282593538049",
          "1301678120190111744",
          "1301934391141175296",
          "1301222727269994499",
          "1302045441870032898",
          "1302032563393957889",
          "1303765499336040448",
          "1303804265589215233",
          "1303763201281138688",
          "1303613177964507136",
          "1303502288854548480",
          "1303628330462183425",
          "1303701294842953729",
          "1303797332547379200",
          "1302808344890089474",
          "1303516517133357056",
          "1303540371176206336",
          "1302364387659792384",
          "1302749679751294976",
          "1301550548391522304",
          "1300695163342172160",
          "1302743704751529984",
          "1301596058137563139",
          "1302118449154535424",
          "1300987760493330432",
          "1301573253593407488",
          "1301967875071188992",
          "1303084010541912066",
          "1303078949610610688",
          "1301934391141175296",
          "1301756195338846208",
          "1301885517257113601",
          "1302774290069303296",
          "1301921715862339586",
          "1301698159454818305",
          "1302687658406293510",
          "1300919462955278338",
          "1302403041258172416",
          "1303602334103040001",
          "1303131324690116613",
          "1303842963420659712",
          "1303849451249901568",
          "1303609896160509952",
          "1303496006965829633",
          "1304057040847994880",
          "1303831026456813580",
          "1303935395588120580",
          "1304115698172530689",
          "1301934391141175296",
          "1302983188348907521",
          "1303045817285050368",
          "1303078949610610688",
          "1301967875071188992",
          "1303084010541912066",
          "1301698159454818305",
          "1302743704751529984",
          "1304159330917261313",
          "1304154409321070606",
          "1304134131375312896",
          "1303928989203853313",
          "1303231831425179648",
          "1303756679843131398",
          "1303418445849964545",
          "1303117063918170113",
          "1303375572299427846",
          "1302415667291811840",
          "1301154704949473292",
          "1302774290069303296",
          "1303534936067117056",
          "1302032563393957889",
          "1303301871231172609",
          "1303535236525981697",
          "1303057252564242440",
          "1301699888061743105",
          "1304181173959221255",
          "1304194230936465408",
          "1304158554098720769",
          "1300630070281875460",
          "1304204140516646912",
          "1301342212551249920",
          "1307365350556798979",
          "1310393076171579392",
          "1310979109938507778",
          "1310740877715877890",
          "1310576592477970432",
          "1310985568541696010",
          "1310040244381798401",
          "1309895614994558976",
          "1309294493460500480",
          "1308107530007175169",
          "1308549050556395525",
          "1308412474639683587",
          "1308096589525852162",
          "1308815478870224897",
          "1308466943620513792",
          "1308646114971668480",
          "1309157292965756933",
          "1308096150575046656",
          "1308135812995985409",
          "1307869936149245952",
          "1309133438604259328",
          "1308006394671628288",
          "1311051134233120781",
          "1311047308973408257",
          "1311219792553017346",
          "1311696431758020610",
          "1311798158687494145",
          "1311143909909692417",
          "1311762873450889216",
          "1310576592477970432",
          "1311520691028598784",
          "1311868433898893313",
          "1310104119063977986",
          "1309222342317412352",
          "1312131738198372352",
          "1307787379370061829",
          "1305250151284518913",
          "1302687658406293510",
          "1300217872569053184",
          "1312422914235396096",
          "1308246555007254528",
          "1307554446285721601",
          "1307869323126599680",
          "1308248246679035905",
          "1307723125782540290",
          "1307741595354226702",
          "1307754342196350978",
          "1307688970139111429",
          "1308440443143634944",
          "1308460757269360640",
          "1307554312004841473",
          "1307522077990281217",
          "1306666083387150337",
          "1308549050556395525",
          "1308152524990550016",
          "1306336245103157251",
          "1307422169891184640",
          "1314235849739886598",
          "1314003206737813504",
          "1314275838720909312",
          "1314105432651165696",
          "1314312205832257536",
          "1314210324392730624",
          "1311143909909692417",
          "1312629076725653504",
          "1311336714053484544",
          "1312286462985920513",
          "1312465844417388545",
          "1313514058763640832",
          "1315140797654732800",
          "1315198659852673024",
          "1315449525599830016",
          "1317133198833405952",
          "1317219992216035328",
          "1317265392314834945",
          "1317881825314938880",
          "1317888190628327425",
          "1317895057089863680",
          "1317897987021021184",
          "1318961309388591104",
          "1319231687730003968",
          "1319230762621730818",
          "1319046992052486148",
          "1319230298706640897",
          "1319106797341413376",
          "1319106797341413376",
          "1319205402370842624",
          "1319228815005130754",
          "1319228569747443712",
          "1319228256600625152",
          "1319227901284356096",
          "1319227080102600704",
          "1319226374666752000",
          "1319225389537951744",
          "1317683879310991360",
          "1317680380653105152",
          "1317219992216035328",
          "1318831840036229120",
          "1319311820113543171",
          "1319358404612313092",
          "1319652912558198792",
          "1320032308959784960",
          "1320108896095248387",
          "1320796335516258304",
          "1321835461762011138",
          "1321812473821933570",
          "1321810460509949955",
          "1321979679922774016",
          "1329836709249335300",
          "1329799612266405890",
          "1329169256051707905",
          "1329543361221566467",
          "1329328240092086273",
          "1329657002897805315",
          "1329546639997014022",
          "1329469495899869185",
          "1329255430321803264",
          "1329521593190649856",
          "1329532310597771264",
          "1329665375701594112",
          "1329883830560329729",
          "1329842114352406535",
          "1329724474267078658",
          "1329897044782280706",
          "1329897044782280706",
          "1329928251855302656",
          "1329897614117105665",
          "1329859454314024960",
          "1329677712567406599",
          "1329819993094189056",
          "1329834399274250242",
          "1329813446909636616",
          "1329840850021519360",
          "1329831873946664963",
          "1329647886825639942",
          "1329829997507452930",
          "1329796314029297665",
          "1329945454373531648",
          "1329850995220746240",
          "1329599702350794752",
          "1329598826924048385",
          "1329296601718800384",
          "1329527618073292800",
          "1327273127416635393",
          "1327371896288018432",
          "1328867769467633666",
          "1327794059700629504",
          "1327672148295634948",
          "1328833953432682497",
          "1327310737019187200",
          "1327430320711487488",
          "1327312969751990274",
          "1327312974780960769",
          "1327312980107726848",
          "1327312984394358784",
          "1327312989045788675",
          "1327312993785421827",
          "1327312998826987523",
          "1328552766269128704",
          "1327424599932477441",
          "1328385844705714176",
          "1328116317510127616",
          "1328116323348570115",
          "1327481453836337153",
          "1328816866731679744",
          "1329920525771042817",
          "1328931315706695681",
          "1327682385044000769",
          "1327304437354942466",
          "1327550032409731072",
          "1327617318118191104",
          "1328001783399124992",
          "1328010702347530241",
          "1328107496897179651",
          "1327682379243282433",
          "1328403803452837888",
          "1321917821929082880",
          "1320540502614298625",
          "1320488055250186240",
          "1320100992386539520",
          "1323687118183428096",
          "1324764734202269701",
          "1323168838083518464",
          "1320224610730860544",
          "1321215401573916672",
          "1323356683767336961",
          "1324879087081435136",
          "1321225069289496577",
          "1326324863498326031",
          "1320083938061078529",
          "1320057111557132288",
          "1322344712267771910",
          "1321244002658779137",
          "1320737317859037186",
          "1325706346163998720",
          "1319066172722237442",
          "1328851078306275328",
          "1329677712567406599",
          "1329620075020648448",
          "1329576835328274433",
          "1329409713050509313",
          "1329312162259505152",
          "1329611643395969026",
          "1328935466192818177",
          "1329628555186229248",
          "1329160012795678722",
          "1329424188550098944",
          "1328935466192818177",
          "1328461686504878088",
          "1328841561984159744",
          "1329469487196893185",
          "1328498633843511297",
          "1329242486255054848",
          "1328717848483667969",
          "1328805719085203456",
          "1329266117215285251",
          "1328805110902706178",
          "1327653444971360256",
          "1329897044782280706",
          "1328570834068312066",
          "1329233574474772481",
          "1329260257286111235",
          "1328882802088001536",
          "1328399564597055497",
          "1329240636676059137",
          "1328526614427262976",
          "1329107874694524933",
          "1328417977453203458",
          "1328842071302672386",
          "1329125824067342338",
          "1326780225745719304",
          "1328792667069640706",
          "1328805182390591488",
          "1328775976692707329",
          "1327826555901337601",
          "1327258301873184771",
          "1328747081595379712",
          "1328529786185113600",
          "1328465332948901889",
          "1328466930542518273",
          "1328782010479996931",
          "1327875851300454401",
          "1328442684038549506",
          "1329209090438938624",
          "1329079084891086849",
          "1328838292666769409",
          "1328471939367616518",
          "1328904897031516167",
          "1328729505431650305",
          "1328493104811319302",
          "1328493259870507008",
          "1328820501905502208",
          "1329201124268793856",
          "1328834436117491715",
          "1328229469845291009",
          "1327991775584157699",
          "1328548995728347136",
          "1328594937160536065",
          "1328407115707269120",
          "1328674149305253888",
          "1328555855055265792",
          "1328504559287885825",
          "1328986117782208513",
          "1328080805172830215",
          "1328181979594932225",
          "1328417888722591745",
          "1328101561831223298",
          "1326924113235959809",
          "1326737732874297344",
          "1327794142810869762",
          "1327000573980368899",
          "1328155071218143233",
          "1327711486110814214",
          "1326948668272828417",
          "1328410065712291840",
          "1327958932728532999",
          "1326743288624386049",
          "1327363142217773056",
          "1328156273246941194",
          "1327279925624070144",
          "1329542273126678529",
          "1327066264880156672",
          "1327067123034824705",
          "1326764991626752000",
          "1327298749018886144",
          "1327060993231319040",
          "1327338680369889280",
          "1327872813349429250",
          "1327366160224927745",
          "1326968777859330050",
          "1327756793334951937",
          "1327107608105410560",
          "1326734864473706496",
          "1329971531934429184",
          "1329530026744631296",
          "1329473273470480384",
          "1329534939969196033",
          "1320857841612124161",
          "1328425011959320576",
          "1329234763580919808",
          "1329575745522454530",
          "1328674149305253888",
          "1327168190120542210",
          "1320130443572891649",
          "1317691894508367872",
          "1319818545677496322",
          "1315141793239924736",
          "1309614827522801664",
          "1317306360783081472",
          "1318210295958020096",
          "1317826020398039045",
          "1319340658918903808",
          "1325987721064706048",
          "1323841135635300352",
          "1315789013257576449",
          "1324451834027634688",
          "1318283377460441089",
          "1330068042911539203",
          "1321511583529361408",
          "1318961309388591104",
          "1319062137579442177",
          "1319314974607630336",
          "1326021195934871557",
          "1318016470534729729",
          "1315683003901804548",
          "1317950376377688064",
          "1319065937656582152",
          "1317965308372475905",
          "1326640641430843392",
          "1329575745522454530",
          "1321114599987568641",
          "1318005771637002241",
          "1319698259976155137",
          "1328385113965682692",
          "1315346420149358592",
          "1319641217286561792",
          "1326652227948224512",
          "1316913479782178816",
          "1317895057089863680",
          "1317981243284328451",
          "1325160843961532416",
          "1324961655428558848",
          "1318248457602301953",
          "1320106256795926528",
          "1320950704161210368",
          "1325946508462727173",
          "1328882802088001536",
          "1318704625856307200",
          "1328729505431650305",
          "1328838292666769409",
          "1328821678059687937",
          "1329107874694524933",
          "1328805182390591488",
          "1329125824067342338",
          "1329620218985910272",
          "1330194263062290433",
          "1330228632925691904",
          "1330244955495919618",
          "1330234926462083075",
          "1330212883536486400",
          "1330256686465097729",
          "1328125518881853441",
          "1330630059154153475",
          "1330194263062290433",
          "1329527618073292800",
          "1330576853875175429",
          "1329703051460894720",
          "1330957025384173568",
          "1328125518881853441",
          "1330591749773942789",
          "1330879901466058755",
          "1330701926586003457",
          "1330677444790116354",
          "1330721730080481282",
          "1330748494194253825",
          "1330919042480287745",
          "1330915890108489733",
          "1328833953432682497",
          "1328841561984159744",
          "1331201071553925120",
          "1331017175428198413",
          "1331253834253963264",
          "1330665504655208453",
          "1330276912112001038",
          "1331284947827634177",
          "1331327590544633858",
          "1365342624748552194",
          "1365341089960493056",
          "1363254746191126530",
          "1362877559852122113",
          "1365346055672455170",
          "1362971321848582147",
          "1362862095776161793",
          "1363534456796180481",
          "1365109593307815936",
          "1364578673626603520",
          "1364259442548703232",
          "1365002779492823042",
          "1365375571555983361",
          "1364796075995987970",
          "1364934720795017220",
          "1365374295434620931",
          "1362809558704525317",
          "1364667573258907655",
          "1364663889863077888",
          "1364012584970690568",
          "1363903884125605888",
          "1362892980034543616",
          "1363145423674765319",
          "1363183933630865410",
          "1363896599106191360",
          "1363525904312406032",
          "1363269034217766913",
          "1363167887708594177",
          "1362897033330380800",
          "1363908663635681280",
          "1362859616686788610",
          "1362815121211465736",
          "1364688574784888834",
          "1363527149596991494",
          "1364630731817840641",
          "1362923492170227713",
          "1363194808890658818",
          "1362865267068440578",
          "1363157967059648514",
          "1363963705222787073",
          "1363614619621724162",
          "1363139069157339140",
          "1363879066588221446",
          "1365085781124087809",
          "1363516076588326914",
          "1365477370660937728",
          "1338525537556434946",
          "1341831727765970948",
          "1327312969751990274",
          "1355183925308473344",
          "1335776954428100612",
          "1326811781109440517",
          "1320488055250186240",
          "1339009538155040768",
          "1328403803452837888",
          "1339070792475144196",
          "1359903974074298375",
          "1339609561343246340",
          "1323687118183428096",
          "1345824260023934976",
          "1335443418433146882",
          "1358139477429022722",
          "1323841135635300352",
          "1346123617151700992",
          "1333622856035405824",
          "1334328942363172866",
          "1346129757038125058",
          "1327298749018886144",
          "1352651923648778240",
          "1326640641430843392",
          "1330677444790116354",
          "1353480680206950401",
          "1331110691399479296",
          "1340226759791235072",
          "1329611643395969026",
          "1348420028610146305",
          "1341884899058450432",
          "1326364437595348994",
          "1344418710061244416",
          "1362085484713934849",
          "1334622027181920258",
          "1358472216367816705",
          "1350494419317907463",
          "1344030222056886272",
          "1319766581065310208",
          "1328674149305253888",
          "1324146906885459969",
          "1361146752498286595",
          "1351605404078280706",
          "1328841561984159744",
          "1321835461762011138",
          "1362163036837052419",
          "1335261415398060035",
          "1335853646114934787",
          "1359684447994601472",
          "1334253762769276928",
          "1344504218950897666",
          "1355687829158944768",
          "1362512517029789697",
          "1333864615160262657",
          "1334013417250844672",
          "1340933934104928259",
          "1349115526807769090",
          "1344081453458452480",
          "1341868956609630208",
          "1361017540491665411",
          "1343685564210491392",
          "1350457534583242753",
          "1362447023836954627",
          "1347394324493963264",
          "1372963508996820999",
          "1375749312618070016",
          "1374879372037996546",
          "1375179309644574722",
          "1375847842560925696",
          "1375225484678664194",
          "1375845424121192461",
          "1375835884659089414",
          "1376146630722736130",
          "1376233391041970184",
          "1376555235196473349",
          "1376257784996634634",
          "1376572718208913415",
          "1372706557176078336",
          "1374099476609167360",
          "1375479950938152969",
          "1375478605141118976",
          "1375636173461323777",
          "1375257065145430020",
          "1374132533877559300",
          "1374850518196051968",
          "1373481738970746885",
          "1374075490651103234",
          "1375558371986833415",
          "1374425210686906374",
          "1375492066046713856",
          "1374757760689049607",
          "1368250910766415880",
          "1374411735235358721",
          "1324879087081435136",
          "1320224610730860544",
          "1374434848421466112",
          "1374789315708993538",
          "1374559867978010624",
          "1374747043202093059",
        ],
      };
    },
    157: function (e) {
      e.exports = {
        collection: [
          { name: "Palmero", description: "Settle in. Why go anywhere when you could stay home?" },
          { name: "Silverada", description: "The sleek lines and open space scream speed." },
          { name: "Douglas", description: "Keep your loved ones safe with the leader in home field security." },
          { name: "Hillcrest", description: "A high-energy space you'll want to sink into." },
          { name: "Twede", description: "Keep things in front of you in this minimalist dream." },
          { name: "Rodeo", description: "Everything's a long ball in this cozy space-saver." },
          { name: "Loge", description: "Open air and easy access make this the perfect event space." },
          { name: "Pine", description: "Pitchers will go absolutely wild over the view." },
          { name: "Boreal", description: "High ceilings, tons of natural light. You could get lost in your own home." },
        ],
      };
    },
    166: function (e, t, a) {},
    185: function (e, t, a) {},
    186: function (e, t, a) {},
    188: function (e, t, a) {},
    189: function (e, t, a) {},
    190: function (e, t, a) {},
    191: function (e, t, a) {},
    192: function (e, t, a) {},
    193: function (e, t, a) {},
    194: function (e, t, a) {},
    195: function (e, t, a) {},
    196: function (e, t, a) {},
    197: function (e, t, a) {},
    199: function (e, t, a) {},
    200: function (e, t, a) {},
    201: function (e, t, a) {},
    202: function (e, t, a) {},
    203: function (e, t, a) {},
    204: function (e, t, a) {},
    205: function (e, t, a) {},
    252: function (e, t, a) {},
    253: function (e, t, a) {},
    254: function (e, t, a) {},
    255: function (e, t, a) {
      "use strict";
      a.r(t);
      var n,
        r = a(1),
        l = a.n(r),
        i = a(26),
        o = a.n(i),
        s = (a(166), a(3)),
        c = a(16),
        u = (a(27), a(76), a(11), a(36)),
        m = a(8),
        A = function (e) {
          var t = e.path,
            a = e.className,
            n = e.background,
            r = e.params;
          return (
            <m.b to={{ pathname: t, state: { background: n, params: r } }} className={a}>
              {e.children}
            </m.b>
          );
        },
        d = a(2),
        f = a.n(d),
        h = a(5),
        g =
          (null ===
            (n = Object({
              NODE_ENV: "production",
              PUBLIC_URL: "https://d35iw2jmbg6ut8.cloudfront.net",
              WDS_SOCKET_HOST: void 0,
              WDS_SOCKET_PATH: void 0,
              WDS_SOCKET_PORT: void 0,
              FAST_REFRESH: !0,
            })) || void 0 === n
            ? void 0
            : n.REACT_APP_EVENT_URL) || "/events/",
        p = a(144),
        E = +(
          Object({
            NODE_ENV: "production",
            PUBLIC_URL: "https://d35iw2jmbg6ut8.cloudfront.net",
            WDS_SOCKET_HOST: void 0,
            WDS_SOCKET_PATH: void 0,
            WDS_SOCKET_PORT: void 0,
            FAST_REFRESH: !0,
          }).DATA_STREAM_LIFETIME || 4e4
        ),
        v = new p.SimpleEventDispatcher(),
        b = l.a.createContext({ games: void 0, leagues: void 0, temporal: void 0 });
      function w(e, t) {
        e.onmessage = function (e) {
          var a = JSON.parse(e.data).value,
            n = { games: a.games, leagues: a.leagues, temporal: a.temporal };
          t(n), v.dispatch(n);
        };
      }
      var y = function (e) {
        var t = e.children,
          a = Object(r.useState)({ games: void 0, leagues: void 0, temporal: void 0 }),
          n = Object(s.a)(a, 2),
          i = n[0],
          o = n[1];
        return (
          Object(r.useEffect)(function () {
            var e = new EventSource(g + "streamData");
            w(e, o),
              (e.onmessage = function (e) {
                var t = JSON.parse(e.data).value,
                  a = { games: t.games, leagues: t.leagues, temporal: t.temporal };
                o(a), v.dispatch(a);
              });
            setInterval(
              Object(h.a)(
                f.a.mark(function t() {
                  return f.a.wrap(function (t) {
                    for (;;)
                      switch ((t.prev = t.next)) {
                        case 0:
                          e.close(), w((e = new EventSource(g + "streamData")), o);
                        case 3:
                        case "end":
                          return t.stop();
                      }
                  }, t);
                })
              ),
              E
            );
            return function () {
              e.close();
            };
          }, []),
          (<b.Provider value={i}>{t}</b.Provider>)
        );
      };
      y.context = b;
      var B = y,
        O = l.a.createContext({
          sim: void 0,
          standings: void 0,
          season: void 0,
          tournament: void 0,
          schedule: void 0,
          tomorrowSchedule: void 0,
          postseasons: [
            {
              playoffs: void 0,
              allRounds: void 0,
              allMatchups: void 0,
              matchups: void 0,
              round: void 0,
              tomorrowMatchups: void 0,
              tomorrowRound: void 0,
            },
          ],
        }),
        I = function (e) {
          var t = e.children,
            a = Object(r.useState)({
              sim: void 0,
              standings: void 0,
              season: void 0,
              tournament: void 0,
              schedule: void 0,
              tomorrowSchedule: void 0,
              postseasons: [
                {
                  playoffs: void 0,
                  allRounds: void 0,
                  allMatchups: void 0,
                  matchups: void 0,
                  round: void 0,
                  tomorrowMatchups: void 0,
                  tomorrowRound: void 0,
                },
              ],
            }),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1];
          return (
            Object(r.useEffect)(function () {
              function e(e) {
                e.games && (e.games, o(e.games));
              }
              return (
                v.subscribe(e),
                function () {
                  v.unsub(e);
                }
              );
            }, []),
            (<O.Provider value={i}>{t}</O.Provider>)
          );
        };
      I.context = O;
      var S = I,
        C = a(6),
        k = {
          id: "",
          email: "",
          isSignedIn: !1,
          coins: 0,
          isFetching: !0,
          favoriteTeam: null,
          lastActive: Date.now(),
          unlockedShop: !1,
          unlockedElection: !1,
          squirrels: 0,
          idol: null,
          packSize: 8,
          snacks: { Votes: 1 },
          motion: !1,
          lightMode: !1,
          spread: [],
          snackOrder: ["Votes", "E", "E", "E", "E", "E", "E"],
          favNumber: -1,
          coffee: -1,
          trackers: { BETS: 0, VOTES_CAST: 0, SNACKS_BOUGHT: 0, SNACK_UPGRADES: 0, BEGS: 0 },
          verified: !1,
          facebookId: null,
          googleId: null,
          appleId: null,
        },
        N = { user: k, clearUser: function () {}, initUser: function () {}, setUser: function () {} },
        T = Object(r.createContext)(N),
        x = function (e) {
          var t = Object(C.a)(Object(C.a)({}, e), {}, { id: e.id, isFetching: !1, isSignedIn: !(!e || !e.email) });
          return (
            void 0 === t.unlockedElection && (t.unlockedElection = !1),
            void 0 === t.unlockedShop && (t.unlockedShop = !1),
            void 0 === t.squirrels && (t.squirrels = 0),
            t
          );
        },
        P = function (e) {
          var t = e.children,
            a = Object(r.useState)(k),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1],
            c = Object(r.useCallback)(
              Object(h.a)(
                f.a.mark(function e() {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (
                            (e.next = 2),
                            fetch("/api/getUser", { credentials: "include" })
                              .then(function (e) {
                                return e.json();
                              })
                              .then(
                                (function () {
                                  var e = Object(h.a)(
                                    f.a.mark(function e(t) {
                                      var a;
                                      return f.a.wrap(function (e) {
                                        for (;;)
                                          switch ((e.prev = e.next)) {
                                            case 0:
                                              ((a = x(t)).isFetching = !1), o(Object(C.a)({}, a));
                                            case 3:
                                            case "end":
                                              return e.stop();
                                          }
                                      }, e);
                                    })
                                  );
                                  return function (t) {
                                    return e.apply(this, arguments);
                                  };
                                })()
                              )
                              .catch(function (e) {
                                (i.isFetching = !1), o(Object(C.a)({}, i));
                              })
                          );
                        case 2:
                          return e.abrupt("return", null);
                        case 3:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              ),
              []
            );
          Object(r.useEffect)(
            function () {
              c();
            },
            [c]
          );
          var u = {
            user: i,
            initUser: c,
            setUser: o,
            clearUser: function () {
              o(Object(C.a)({}, k));
            },
          };
          return <T.Provider value={u}>{t}</T.Provider>;
        };
      P.context = T;
      var M = P,
        L = l.a.createContext([]),
        R = function (e) {
          var t = e.children,
            a = Object(c.g)().pathname,
            n = Object(r.useState)({}),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1],
            m = Object(r.useState)(!1),
            A = Object(s.a)(m, 2),
            d = A[0],
            g = A[1],
            p = Object(r.useCallback)(
              Object(h.a)(
                f.a.mark(function e() {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (
                            fetch("/api/getActiveBets", { credentials: "include" })
                              .then(function (e) {
                                return e.json();
                              })
                              .then(function (e) {
                                var t = {};
                                e &&
                                  e.length &&
                                  e.forEach(function (e) {
                                    var a = e.targets;
                                    a[1] && (t[a[1]] || (t[a[1]] = []), t[a[1]].push(e));
                                  }),
                                  u(t);
                              })
                              .catch(function (e) {
                                console.log(e);
                              }),
                            e.abrupt("return", null)
                          );
                        case 2:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              ),
              []
            );
          return (
            Object(r.useEffect)(
              function () {
                d || ("/upcoming" !== a && "/league" !== a) || (p(), g(!0));
              },
              [a]
            ),
            (<L.Provider value={{ activeBets: o, setActiveBets: u }}>{t}</L.Provider>)
          );
        };
      R.context = L;
      var D,
        F,
        Q,
        j,
        V,
        W,
        U,
        G,
        H,
        Y = R,
        z = a(30);
      !(function (e) {
        (e[(e.Rest = 0)] = "Rest"),
          (e[(e.Preseason = 1)] = "Preseason"),
          (e[(e.Earlseason = 2)] = "Earlseason"),
          (e[(e.EarlySiesta = 3)] = "EarlySiesta"),
          (e[(e.Midseason = 4)] = "Midseason"),
          (e[(e.LateSiesta = 5)] = "LateSiesta"),
          (e[(e.Lateseason = 6)] = "Lateseason"),
          (e[(e.SeasonEnd = 7)] = "SeasonEnd"),
          (e[(e.PrePostseason = 8)] = "PrePostseason"),
          (e[(e.EarlyPostseason = 9)] = "EarlyPostseason"),
          (e[(e.EarlyPostseasonEnd = 10)] = "EarlyPostseasonEnd"),
          (e[(e.Postseason = 11)] = "Postseason"),
          (e[(e.PostseasonEnd = 12)] = "PostseasonEnd"),
          (e[(e.Election = 13)] = "Election");
      })(D || (D = {})),
        (function (e) {
          (e[(e.Game = 0)] = "Game"),
            (e[(e.Changes = 1)] = "Changes"),
            (e[(e.Abilities = 2)] = "Abilities"),
            (e[(e.Outcomes = 3)] = "Outcomes"),
            (e[(e.Narrative = 4)] = "Narrative");
        })(F || (F = {})),
        (function (e) {
          (e[(e.ShopTransactions = 0)] = "ShopTransactions"),
            (e[(e.OtherTransactions = 1)] = "OtherTransactions"),
            (e[(e.Rewards = 2)] = "Rewards"),
            (e[(e.Contributions = 3)] = "Contributions");
        })(Q || (Q = {})),
        (function (e) {
          (e[(e.Player = 0)] = "Player"), (e[(e.Team = 1)] = "Team"), (e[(e.Game = 2)] = "Game");
        })(j || (j = {})),
        (function (e) {
          (e[(e.DECREE = 0)] = "DECREE"), (e[(e.BONUS = 1)] = "BONUS"), (e[(e.WILL = 2)] = "WILL");
        })(V || (V = {})),
        (function (e) {
          (e[(e.GameEnd = 0)] = "GameEnd"),
            (e[(e.PlayerStrikeout = 1)] = "PlayerStrikeout"),
            (e[(e.PlayerShutout = 2)] = "PlayerShutout"),
            (e[(e.PlayerHomer = 3)] = "PlayerHomer"),
            (e[(e.PlayerHit = 4)] = "PlayerHit"),
            (e[(e.TeamWin = 5)] = "TeamWin"),
            (e[(e.TeamLoss = 6)] = "TeamLoss");
        })(W || (W = {})),
        (function (e) {
          (e[(e.Steal = 0)] = "Steal"),
            (e[(e.HomeSteal = 1)] = "HomeSteal"),
            (e[(e.Run = 2)] = "Run"),
            (e[(e.HomeRun = 3)] = "HomeRun"),
            (e[(e.Strike = 4)] = "Strike"),
            (e[(e.FoulBall = 5)] = "FoulBall"),
            (e[(e.StrikeOut = 6)] = "StrikeOut"),
            (e[(e.FlyOut = 7)] = "FlyOut"),
            (e[(e.GroundOut = 8)] = "GroundOut"),
            (e[(e.Single = 9)] = "Single"),
            (e[(e.Double = 10)] = "Double"),
            (e[(e.Triple = 11)] = "Triple"),
            (e[(e.Quadruple = 12)] = "Quadruple"),
            (e[(e.Walk = 13)] = "Walk"),
            (e[(e.CaughtStealing = 14)] = "CaughtStealing"),
            (e[(e.Ball = 15)] = "Ball"),
            (e[(e.SacrificeFly = 16)] = "SacrificeFly"),
            (e[(e.Out = 17)] = "Out"),
            (e[(e.CurseOfCrows = 18)] = "CurseOfCrows"),
            (e[(e.GiveSpirit = 19)] = "GiveSpirit"),
            (e[(e.BigPeanut = 20)] = "BigPeanut"),
            (e[(e.BloodDrain = 21)] = "BloodDrain"),
            (e[(e.PeanutSwallowed = 22)] = "PeanutSwallowed"),
            (e[(e.Incineration = 23)] = "Incineration"),
            (e[(e.Feedback = 24)] = "Feedback"),
            (e[(e.Reverb = 25)] = "Reverb"),
            (e[(e.Unshelled = 26)] = "Unshelled"),
            (e[(e.Partying = 27)] = "Partying"),
            (e[(e.LoveSpell = 28)] = "LoveSpell"),
            (e[(e.PeanutYummy = 29)] = "PeanutYummy"),
            (e[(e.SuperPeanutYummy = 30)] = "SuperPeanutYummy"),
            (e[(e.SuperPeanutAllergic = 31)] = "SuperPeanutAllergic"),
            (e[(e.Rebirth = 32)] = "Rebirth");
        })(U || (U = {})),
        (function (e) {
          (e[(e.Fool = -1)] = "Fool"),
            (e[(e.Magician = 0)] = "Magician"),
            (e[(e.HighPriestess = 1)] = "HighPriestess"),
            (e[(e.Empress = 2)] = "Empress"),
            (e[(e.Emperor = 3)] = "Emperor"),
            (e[(e.Heirophant = 4)] = "Heirophant"),
            (e[(e.Lover = 5)] = "Lover"),
            (e[(e.Chariot = 6)] = "Chariot"),
            (e[(e.Justice = 7)] = "Justice"),
            (e[(e.Hermit = 8)] = "Hermit"),
            (e[(e.Fortune = 9)] = "Fortune"),
            (e[(e.Strength = 10)] = "Strength"),
            (e[(e.HangedMan = 11)] = "HangedMan"),
            (e[(e.XIII = 12)] = "XIII"),
            (e[(e.Temperance = 13)] = "Temperance"),
            (e[(e.Devil = 14)] = "Devil"),
            (e[(e.Tower = 15)] = "Tower"),
            (e[(e.Star = 16)] = "Star"),
            (e[(e.Moon = 17)] = "Moon"),
            (e[(e.Sun = 18)] = "Sun"),
            (e[(e.Judgment = 19)] = "Judgment");
        })(G || (G = {})),
        (function (e) {
          (e[(e.ZEROD = 0)] = "ZEROD"),
            (e[(e.ONED = 1)] = "ONED"),
            (e[(e.TWOD = 2)] = "TWOD"),
            (e[(e.THREED = 3)] = "THREED"),
            (e[(e.C = 4)] = "C"),
            (e[(e.LOWA = 5)] = "LOWA"),
            (e[(e.HIGHA = 6)] = "HIGHA"),
            (e[(e.AA = 7)] = "AA"),
            (e[(e.AAA = 8)] = "AAA"),
            (e[(e.AAAA = 9)] = "AAAA"),
            (e[(e.AAAAA = 10)] = "AAAAA");
        })(H || (H = {}));
      var X = a(17),
        J = a(23),
        Z = a(28),
        q = a(10),
        K = a(150),
        _ = a(44),
        $ = a(261),
        ee = a(21),
        te = (function () {
          function e() {
            Object(X.a)(this, e);
          }
          return (
            Object(Z.a)(e, null, [
              {
                key: "GetSellValue",
                value: function (e, t, a, n) {
                  switch (e) {
                    case this.VOTES:
                      return Math.round((100 * a) / 4);
                    case this.PEANUTS:
                      return Math.round(a / 4);
                    case this.FLUTES:
                      return Math.round((2e3 * a) / 4);
                    case this.STADIUM:
                    case this.WILLS:
                    case this.FORBIDDEN_KNOWLEDGE:
                    case this.BEG:
                    case this.TAROT:
                    case this.RED_HERRING:
                      return 0;
                    default:
                      return Math.round(this.GetCombinedTierCost(e, t, n, a) / 4);
                  }
                  return -1;
                },
              },
              {
                key: "GetCombinedTierCost",
                value: function (e, t, a, n) {
                  if (t < 0) return 0;
                  var r = this.GetTiers(e, a);
                  if (!r) return -1;
                  var l = 0;
                  n && n - 1 < t && (l = t - (n - 1));
                  for (var i = 0, o = t; o >= l; o--) i += r[o].price;
                  return i;
                },
              },
              {
                key: "GetTiers",
                value: function (t, a) {
                  switch (t) {
                    case e.IDOL_HITS:
                      return a.idolHitsTiers;
                    case e.IDOL_HOMERS:
                      return a.idolHomersTiers;
                    case e.IDOL_STRIKEOUTS:
                      return a.idolStrikeoutsTiers;
                    case e.IDOL_SHUTOUTS:
                      return a.idolShutoutsTiers;
                    case e.TEAM_WIN:
                      return a.teamWinCoinTiers;
                    case e.MAX_BET:
                      return a.maxBetTiers;
                    case e.TEAM_LOSS:
                      return a.teamLossCoinTiers;
                    case e.SLUSH_FUND:
                      return a.floodClearTiers;
                    case e.BLACK_HOLE:
                      return a.blackHoleTiers;
                    case e.IDOL_STEAL:
                      return a.idolStealTiers;
                    case e.IDOL_PITCHER_WIN:
                      return a.idolPitcherWinTiers;
                    case e.IDOL_PITCHER_LOSS:
                      return a.idolPitcherLoseTiers;
                    case e.IDOL_HOMER_ALLOW:
                      return a.idolHomerAllowedTiers;
                    case e.TEAM_SHAMED:
                      return a.teamShamedTiers;
                    case e.TEAM_SHAMING:
                      return a.teamShamingTiers;
                    case e.BREAKFAST:
                      return a.timeOffTiers;
                    case e.SUN_2:
                      return a.sunTwoTiers;
                    case e.INCINERATION:
                      return a.incinerationTiers;
                    case e.CONSUMER:
                      return a.consumerTiers;
                    case e.VOTES:
                    case e.FLUTES:
                    case e.STADIUM:
                    case e.WILLS:
                    case e.FORBIDDEN_KNOWLEDGE:
                    case e.BEG:
                    case e.PEANUTS:
                    case e.TAROT:
                    case e.RED_HERRING:
                      return;
                  }
                  throw new Error("Tiers for ".concat(t, " do not exist"));
                },
              },
              {
                key: "GetName",
                value: function (t) {
                  switch (t) {
                    case e.IDOL_HITS:
                      return "Sunflower Seeds";
                    case e.IDOL_HOMERS:
                      return "Hot Dog";
                    case e.IDOL_STRIKEOUTS:
                      return "Chips";
                    case e.IDOL_SHUTOUTS:
                      return "Burger";
                    case e.IDOL_STEAL:
                      return "Pickles";
                    case e.TEAM_LOSS:
                      return "Stale Popcorn";
                    case e.TEAM_WIN:
                      return "Popcorn";
                    case e.BLACK_HOLE:
                      return "Wet Pretzel";
                    case e.SLUSH_FUND:
                      return "Slushie";
                    case e.MAX_BET:
                      return "Snake Oil";
                    case e.VOTES:
                      return "Votes";
                    case e.FLUTES:
                      return "Flute";
                    case e.STADIUM:
                      return "Pizza";
                    case e.WILLS:
                      return "Cheese Board";
                    case e.FORBIDDEN_KNOWLEDGE:
                      return "Apple";
                    case e.PEANUTS:
                      return "Peanuts";
                    case e.BEG:
                      return "Bread Crumbs";
                    case this.TAROT:
                      return "Tarot Spread";
                    case this.SUN_2:
                      return "Doughnut";
                    case this.BREAKFAST:
                      return "Breakfast";
                    case this.TEAM_SHAMING:
                      return "Taffy";
                    case this.TEAM_SHAMED:
                      return "Lemonade";
                    case this.IDOL_HOMER_ALLOW:
                      return "Meatball";
                    case this.IDOL_PITCHER_WIN:
                      return "Hot Fries";
                    case this.IDOL_PITCHER_LOSS:
                      return "Cold Fries";
                    case this.INCINERATION:
                      return "Sundae";
                    case this.SLOT:
                      return "Slot";
                    case this.RED_HERRING:
                      return "Red Herring";
                    case this.CONSUMER:
                      return "Chum";
                  }
                  throw new Error("Name for ".concat(t, " does not exist"));
                },
              },
              {
                key: "InsertIntoSnackOrder",
                value: function (e, t) {
                  var a = Object(J.a)(t);
                  if (!a.includes(e)) {
                    var n = a.findIndex(function (e) {
                      return "E" === e;
                    });
                    a.splice(n, 1, e);
                  }
                  return a;
                },
              },
              {
                key: "RemoveFromSnackOrder",
                value: function (e, t) {
                  var a = Object(J.a)(t);
                  if (a.includes(e)) {
                    var n = a.findIndex(function (t) {
                      return t === e;
                    });
                    a.splice(n, 1, "E");
                  }
                  return a;
                },
              },
              {
                key: "GetPackMultiplier",
                value: function (e) {
                  var t = e.packSize;
                  return t < 1 || t > 24 ? 0 : this.packMultipliers[e.packSize - 1];
                },
              },
              {
                key: "GetNextPackMultiplier",
                value: function (e) {
                  var t = e.packSize;
                  return t < 1 || t > 24 ? 0 : this.packMultipliers[e.packSize];
                },
              },
              {
                key: "GetPrevPackMultiplier",
                value: function (e) {
                  var t = e.packSize;
                  return t < 1 || t > 24 ? 0 : this.packMultipliers[e.packSize - 2];
                },
              },
            ]),
            e
          );
        })();
      (te.AD = "Ad"),
        (te.IDOL_HITS = "Idol_Hits"),
        (te.IDOL_HOMERS = "Idol_Homers"),
        (te.IDOL_STRIKEOUTS = "Idol_Strikeouts"),
        (te.IDOL_SHUTOUTS = "Idol_Shutouts"),
        (te.VOTES = "Votes"),
        (te.MAX_BET = "Max_Bet"),
        (te.TEAM_WIN = "Team_Win"),
        (te.TEAM_LOSS = "Team_Loss"),
        (te.TEAM_TAROT = "Team_Tarot"),
        (te.STADIUM = "Stadium_Access"),
        (te.WILLS = "Wills_Access"),
        (te.FORBIDDEN_KNOWLEDGE = "Forbidden_Knowledge_Access"),
        (te.FLUTES = "Flutes"),
        (te.PEANUTS = "Peanuts"),
        (te.BEG = "Beg"),
        (te.TAROT = "Tarot_Reroll"),
        (te.SLUSH_FUND = "Team_Slush"),
        (te.BLACK_HOLE = "Black_Hole"),
        (te.INCINERATION = "Incineration"),
        (te.IDOL_STEAL = "Idol_Steal"),
        (te.IDOL_PITCHER_WIN = "Idol_Pitcher_Win"),
        (te.IDOL_PITCHER_LOSS = "Idol_Pitcher_Loss"),
        (te.IDOL_HOMER_ALLOW = "Idol_Homer_Allowed"),
        (te.TEAM_SHAMING = "Team_Shaming"),
        (te.TEAM_SHAMED = "Team_Shamed"),
        (te.SUN_2 = "Sun_2"),
        (te.BREAKFAST = "Breakfast"),
        (te.SLOT = "Slot"),
        (te.CONSUMER = "Consumer_Attacks"),
        (te.RED_HERRING = "Red_Herring"),
        (te.packMultipliers = [
          6.5,
          3.5,
          2.5,
          1.9,
          1.5,
          1.25,
          1.1,
          1,
          0.9,
          0.8,
          0.7,
          0.63,
          0.57,
          0.5,
          0.45,
          0.39,
          0.34,
          0.3,
          0.25,
          0.21,
          0.17,
          0.13,
          0.09,
          0.05,
        ]);
      var ae,
        ne = te,
        re = (a(94), a(37)),
        le = a(117);
      !(function (e) {
        (e[(e.Lineup = 0)] = "Lineup"),
          (e[(e.Rotation = 1)] = "Rotation"),
          (e[(e.ShadowLineup = 2)] = "ShadowLineup"),
          (e[(e.ShadowRotation = 3)] = "ShadowRotation");
      })(ae || (ae = {}));
      var ie,
        oe = function e() {
          Object(X.a)(this, e), (this.wins = 0), (this.losses = 0), (this.games = 0), (this.nonlosses = 0);
        },
        se = a(259),
        ce = a(260),
        ue = a(38),
        me = a(52),
        Ae = ["title", "titleId"];
      function de() {
        return (de =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function fe(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function he(e, t) {
        var a = e.title,
          n = e.titleId,
          l = fe(e, Ae);
        return (
          <svg
            {...de(
              {
                id: "All_You_Can_Eat",
                "data-name": "All You Can Eat",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ie || (ie = <image x={85} y={128} width={1330} height={1245} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ge,
        pe = r.forwardRef(he),
        Ee = (a.p, ["title", "titleId"]);
      function ve() {
        return (ve =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function be(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function we(e, t) {
        var a = e.title,
          n = e.titleId,
          l = be(e, Ee);
        return (
          <svg
            {...ve(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ge ||
              (ge = (
                <image
                  id="_02-BasedEvolution"
                  data-name="02-BasedEvolution"
                  x={38.5}
                  y={7.5}
                  width={179}
                  height={241}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ye,
        Be = r.forwardRef(we),
        Oe = (a.p, ["title", "titleId"]);
      function Ie() {
        return (Ie =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Se(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ce(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Se(e, Oe);
        return (
          <svg
            {...Ie(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ye ||
              (ye = (
                <image
                  id="_06-FreeWill"
                  data-name="06-FreeWill"
                  x={32}
                  y={13}
                  width={192}
                  height={230}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ke,
        Ne = r.forwardRef(Ce),
        Te = (a.p, ["title", "titleId"]);
      function xe() {
        return (xe =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Pe(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Me(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Pe(e, Te);
        return (
          <svg
            {...xe(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ke || (ke = <image x={9} y={11} width={132} height={128} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Le,
        Re = r.forwardRef(Me),
        De = (a.p, ["title", "titleId"]);
      function Fe() {
        return (Fe =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Qe(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function je(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Qe(e, De);
        return (
          <svg
            {...Fe(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Le || (Le = <image x={15} y={11} width={121} height={129} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Ve,
        We = r.forwardRef(je),
        Ue = (a.p, ["title", "titleId"]);
      function Ge() {
        return (Ge =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function He(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ye(e, t) {
        var a = e.title,
          n = e.titleId,
          l = He(e, Ue);
        return (
          <svg
            {...Ge(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ve || (Ve = <image x={7} y={16} width={136} height={124} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ze,
        Xe = r.forwardRef(Ye),
        Je = (a.p, ["title", "titleId"]);
      function Ze() {
        return (Ze =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function qe(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ke(e, t) {
        var a = e.title,
          n = e.titleId,
          l = qe(e, Je);
        return (
          <svg
            {...Ze(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ze || (ze = <image x={3} y={3} width={145} height={142} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var _e,
        $e = r.forwardRef(Ke),
        et = (a.p, ["title", "titleId"]);
      function tt() {
        return (tt =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function at(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function nt(e, t) {
        var a = e.title,
          n = e.titleId,
          l = at(e, et);
        return (
          <svg
            {...tt(
              {
                id: "Turntables",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {_e ||
              (_e = (
                <image
                  id="Group_2"
                  data-name="Group 2"
                  x={63}
                  y={319}
                  width={1374}
                  height={862}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var rt,
        lt = r.forwardRef(nt),
        it = (a.p, ["title", "titleId"]);
      function ot() {
        return (ot =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function st(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ct(e, t) {
        var a = e.title,
          n = e.titleId,
          l = st(e, it);
        return (
          <svg
            {...ot(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {rt || (rt = <image x={24} y={24} width={102} height={102} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ut,
        mt = r.forwardRef(ct),
        At = (a.p, ["title", "titleId"]);
      function dt() {
        return (dt =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ft(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ht(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ft(e, At);
        return (
          <svg
            {...dt(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ut || (ut = <image x={12} y={9} width={126} height={132} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var gt,
        pt = r.forwardRef(ht),
        Et = (a.p, ["title", "titleId"]);
      function vt() {
        return (vt =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function bt(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function wt(e, t) {
        var a = e.title,
          n = e.titleId,
          l = bt(e, Et);
        return (
          <svg
            {...vt(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {gt || (gt = <image x={8} y={40} width={136} height={82} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var yt = r.forwardRef(wt);
      a.p;
      function Bt(e) {
        var t = e.id,
          a = e.x,
          n = e.y,
          r = e.className,
          i = e.style;
        switch (t) {
          case "EXTRA_STRIKE":
          case "EXTRA_OUT":
            return <_.Zb />;
          case "SHAME_PIT":
            return <_.f />;
          case "HOME_FIELD":
            return <_.Lb />;
          case "FIREPROOF":
            return <_.jb />;
          case "ALTERNATE":
            return <_.Pb />;
          case "SHELLED":
          case "SUPERALLERGIC":
          case "SUPERYUMMY":
            return <_.oc />;
          case "SOUNDPROOF":
            return <_.Mb />;
          case "REVERBERATING":
            return <_.q />;
          case "RETURNED":
            return <_.i />;
          case "DEBT_ZERO":
          case "DEBT":
          case "DEBT_TWO":
          case "DEBT_THREE":
            return <_.j />;
          case "MARKED":
            return <_.Bd />;
          case "PARTY_TIME":
          case "AFTER_PARTY":
          case "SIM_PARTY_TIME":
            return <_.mc />;
          case "LIFE_OF_PARTY":
            return <_.xb />;
          case "INVERTED":
            return <_.Qb />;
          case "FIRST_BORN":
          case "HARD_BOILED":
          case "CUSTOM_HATCHED":
            return <_.db />;
          case "HONEY_ROASTED":
            return <_.S />;
          case "EXTRA_BASE":
            return <_.Hb />;
          case "BLESS_OFF":
            return <_.Db />;
          case "NON_IDOLIZED":
            return <_.Ub />;
          case "GRAVITY":
            return <_.v />;
          case "SPICY":
            return <_.J />;
          case "ELECTRIC":
            return <_.eb />;
          case "DOUBLE_PAYOUTS":
            return <_.pd />;
          case "FIRE_PROTECTOR":
            return <_.kb />;
          case "ON_FIRE":
            return <_.Tc />;
          case "HEATING_UP":
            return <_.Fb />;
          case "RECEIVER":
            return <_.bc />;
          case "FLICKERING":
          case "FLIICKERRRIIING":
            return <_.F />;
          case "AFFINITY_FOR_CROWS":
          case "CURSE_OF_CROWS":
          case "FRIEND_OF_CROWS":
            return <_.s />;
          case "BASE_INSTINCTS":
            return <_.Nc />;
          case "STABLE":
            return <_.id />;
          case "GROWTH":
            return <_.Ib />;
          case "REPEATING":
            return <_.T />;
          case "CRUNCHY":
            return <_.K />;
          case "SQUIDDISH":
          case "SQUIDDEST":
            return <_.wb />;
          case "SUBJECTION":
            return <_.hd />;
          case "LIBERATED":
            return <_.Lc />;
          case "FIRE_EATER":
            return <_.hb />;
          case "MAGMATIC":
            return <_.Bc />;
          case "LOYALTY":
            return <_.Mc />;
          case "SABOTEUR":
            return <_.cd />;
          case "PITY":
            return <_.vb />;
          case "GOD":
            return <_.kc />;
          case "PEANUT_RAIN":
            return <_.sb />;
          case "DESTRUCTION":
            return <_.ab />;
          case "FLINCH":
            return <_.md />;
          case "WILD":
            return <_.Rc />;
          case "LOVE":
            return <_.V />;
          case "SIPHON":
            return <_.Tb />;
          case "CREDIT_TO_THE_TEAM":
            return <_.Yb />;
          case "WALK_IN_THE_PARK":
            return <_.zd />;
          case "BIRD_SEED":
            return <_.zb />;
          case "HAUNTED":
            return <_.ad />;
          case "TRAVELING":
            return <_.Ec />;
          case "BLASERUNNING":
            return <_.ib x={a} y={n} className={r} style={i} />;
          case "SEALANT":
            return <_.bd />;
          case "O_NO":
            return <_.Jc />;
          case "FAIRNESS":
            return <_.Ic />;
          case "TRIBUTE":
            return <_.ic />;
          case "UNFLAMED":
            return <_.yd />;
          case "ESCAPE":
            return <_.M />;
          case "RETIRED":
            return <_.p />;
          case "CONTAINMENT":
            return <_.Eb />;
          case "INHABITING":
            return <_.cc />;
          case "WIRED":
            return <_.N className={r + " ModalItem-Icons-Wired"} x={a} y={n} style={i} />;
          case "TIRED":
            return <_.N className={r + " ModalItem-Icons-Tired"} x={a} y={n} style={i} />;
          case "COFFEE_SHADOWS":
            return <_.fc />;
          case "COFFEE_PERIL":
            return <_.gc />;
          case "COFFEE_EXIT":
            return <_.qb />;
          case "COFFEE_RALLY":
            return <_.N x={a} y={n} className={r} style={i} />;
          case "TRIPLE_THREAT":
          case "SWEETENER":
            return <_.N />;
          case "PERK":
            return <_.Vc />;
          case "OVERPERFORMING":
            return <_.jc />;
          case "UNDERPERFORMING":
            return <_.jc className="ModalItem-Icons-Flipped" />;
          case "WANDERER":
          case "SUPERWANDERER":
            return <_.H />;
          case "NEWADVENTURE":
            return <_.Q />;
          case "EGO1":
          case "EGO2":
          case "EGO3":
          case "EGO4":
            return <_.Kb />;
          case "LEGENDARY":
            return <_.d />;
          case "STUCK":
            return <_.c />;
          case "ELSEWHERE":
            return <_.rb />;
          case "OVERUNDER":
            return <_.g />;
          case "UNDEROVER":
            return <_.g className="ModalItem-Icons-Flipped" />;
          case "CARCINIZATION":
            return <_.L />;
          case "BOTTOM_DWELLER":
            return <_.W />;
          case "UNDERSEA":
            return <_.ac />;
          case "SWIM_BLADDER":
            return <_.od />;
          case "AMBUSH":
            return <_.Gb />;
          case "KILLER_PIES":
            return <_.rc />;
          case "EARLBIRDS":
            return <_.Nb />;
          case "LATE_TO_PARTY":
            return <_.k />;
          case "SHAME_GIVER":
            return <_.w />;
          case "MAINTENANCE_MODE":
            return <_.h />;
          case "REDACTED":
            return <_.hc />;
          case "PENANCE":
            return <_.Cc />;
          case "SINKING_SHIP":
            return <_.Pc />;
          case "BASE_DEALING":
            return <_.C />;
          case "FLOOD_PUMPS":
            return <_.Ad />;
          case "EVENT_HORIZON":
            return <_.ob />;
          case "FIRE_INSURANCE":
            return <_.Vb />;
          case "PEANUT_MISTER":
            return <_.b />;
          case "BIG_BUCKET":
            return <_.tb />;
          case "BIG_RED_BUTTON":
            return <_.x />;
          case "SMOOTH":
          case "CHUNKY":
            return <_.Sc />;
          case "SUN_KISSED":
            return <_.ld />;
          case "UNHOLEY":
            return <_.Jb />;
          case "SUPERCHARGED":
            return <_.G />;
          case "HIGH_PRESSURE":
            return <_.gd />;
          case "SCATTERED":
            return <_.nc />;
          case "PATIENT":
            return <_.Z />;
          case "ECHO":
            return <_.cb />;
          case "UNCERTAIN":
            return <_.qc />;
          case "FREE_WILL":
            return <_.sd />;
          case "FREE_GIFT":
            return <_.yc />;
          case "PSYCHOACOUSTICS":
            return <_.zc />;
          case "SOLAR_PANELS":
            return <_.Wc />;
          case "GRIND_RAIL":
            return <_.Ob />;
          case "BIRDHOUSES":
            return <_.Ab />;
          case "MAXIMALIST":
            return <_.Xb />;
          case "MINIMALIST":
            return <se.d />;
          case "BLACKHOLE_PAYOUTS":
          case "SUN2_PAYOUTS":
            return <_.X />;
          case "STALEPOPCORN_PAYOUTS":
          case "POPCORN_PAYOUTS":
            return <_.wc />;
          case "HOMEBODY":
            return <_.mb />;
          case "STATIC":
            return <ce.e />;
          case "CRIME_SCENE":
            return <_.P />;
          case "MIDDLING":
            return <_.Oc />;
          case "0":
            return <se.a />;
          case "H20":
            return <_.ud />;
          case "HALL_EXIT_BOOST":
            return <_.vd />;
          case "PARASITE":
            return <_.dc />;
          case "SECRET_BASE":
            return <_.Kc />;
          case "ECHO_CHAMBER":
            return <_.ec />;
          case "SOUNDSYSTEM":
            return <_.tc />;
          case "ATTRACTOR":
            return <_.pc />;
          case "SCRAMBLED":
            return <_.Zc />;
          case "CAREFUL":
            return <_.td />;
          case "AMBITIOUS":
            return <_.vc />;
          case "PRO_SKATER":
            return <_.B />;
          case "PSYCHIC":
            return <_.qd />;
          case "FIERY":
            return <_.lb />;
          case "AAA":
          case "AA":
            return <_.o />;
          case "UNAMBITIOUS":
            return <_.uc />;
          case "COASTING":
            return <_.Hc />;
          case "EAT_THE_RICH":
            return <_.bb />;
          case "WILD_CARDS":
            return <_.D />;
          case "SIM_ALL_YOU_CAN_EAT":
            return <pe />;
          case "SIM_BASED_EVOLUTION":
            return <Be />;
          case "SIM_FREE_WILL":
            return <Ne />;
          case "SALMON_CANNONS":
            return <_.A />;
          case "SIM_COMMUNITY_CHEST":
            return <Re />;
          case "SIM_FAIRGROUNDS":
            return <We />;
          case "FORCE":
            return <_.E />;
          case "ENTANGLED":
            return <_.l />;
          case "FAX_MACHINE":
            return <_.xc />;
          case "HOTEL_MOTEL":
            return <ue.g />;
          case "SMITHY":
            return <_.e />;
          case "REPLICA":
            return <_.Ac />;
          case "DUST":
            return <me.c />;
          case "OFFWORLD":
            return <_.Xc />;
          case "ACIDIC":
            return <_.nb />;
          case "COVERUP":
            return <_.Y />;
          case "PATIENT":
            return <_.Yc />;
          case "RALLY":
            return <_.ed />;
          case "FLOOD_BATH":
            return <_.pb />;
          case "SLIPPERY":
            return <_.yb />;
          case "NIGHT_VISION":
            return <_.fd />;
          case "TEMP_STOLEN":
            return <_.I />;
          case "DEFECTOR":
            return <_.dd />;
          case "FUGITIVE":
            return <_.Gc />;
          case "NEGATIVE":
            return <_.Rb />;
          case "OPEN_FLOOR_PLAN":
            return <_.xd />;
          case "TURNTABLES":
            return <lt />;
          case "UNDEFINED":
            return <se.c />;
          case "INTUITIVE":
            return <_.Uc />;
          case "SLOW_BUILD":
            return <_.O />;
          case "A":
            return <_.u />;
          case "GOOD_RIDDANCE":
            return <_.fb />;
          case "GRAPHENE":
            return <_.t />;
          case "HOOPS":
            return <_.n />;
          case "SIM_RATIFICATION":
            return <Xe />;
          case "SIM_ON_THE_HOUSE":
            return <$e />;
          case "UNDERTAKER":
            return <_.nd />;
          case "SEEKER":
            return <_.Wb />;
          case "UNDERHANDED":
            return <_.Cb />;
          case "UNDERACHIEVER":
            return <_.a />;
          case "SUBTRACTOR":
            return <_.kd />;
          case "MODERATION":
            return <_.Dc />;
          case "YOLKED":
            return <_.jd />;
          case "SUNSUN":
            return <mt />;
          case "SIM_UNDERBRACKET":
            return <pt />;
          case "SIM_HYPE_TRAIN":
            return <yt />;
          case "OUTDOORSY":
            return <_.z />;
          case "GUARDED":
            return <_.U />;
          case "GAUDY":
            return <_.ub />;
          case "CLUTTERED":
            return <_.gb />;
        }
        return null;
      }
      var Ot,
        It,
        St = a(18),
        Ct = a(19);
      !(function (e) {
        (e[(e.Permanent = 0)] = "Permanent"),
          (e[(e.Season = 1)] = "Season"),
          (e[(e.Weekly = 2)] = "Weekly"),
          (e[(e.Game = 3)] = "Game"),
          (e[(e.Item = 4)] = "Item"),
          (e[(e.League = 5)] = "League");
      })(Ot || (Ot = {})),
        (function (e) {
          (e[(e.Neutral = 0)] = "Neutral"),
            (e[(e.Player = 1)] = "Player"),
            (e[(e.Team = 2)] = "Team"),
            (e[(e.Ballpark = 3)] = "Ballpark"),
            (e[(e.League = 4)] = "League");
        })(It || (It = {}));
      var kt,
        Nt = {
          id: "????",
          color: "#FFFFFF",
          background: "#FFFFFF",
          textColor: "#FFFFFF",
          title: "????",
          description: "This Modification is unknown.",
        };
      function Tt(e) {
        var t = e.id,
          a = e.type,
          n = Object(r.useContext)(M.context).user,
          i = void 0 !== e.context ? e.context : It.Neutral,
          o = u.collection.find(function (e) {
            return e.id === t;
          });
        void 0 === o && (o = Nt);
        var s = (function (e) {
          switch (e) {
            case Ot.Permanent:
            case Ot.League:
              return {
                color: "#dbbc0b",
                title: "Permanent",
                description: "Permanent Modifications are never removed automatically.",
              };
            case Ot.Season:
              return {
                color: "#c2157a",
                title: "Season",
                description: "Season Modifications are removed after the Internet Series finishes.",
              };
            case Ot.Weekly:
              return {
                color: "#0a78a3",
                title: "Weekly",
                description: "Weekly Modifications are removed after every 9th game of the season.",
              };
            case Ot.Game:
              return {
                color: "#639e47",
                title: "Game",
                description: "Game Modifications are removed at the end of every game.",
              };
            case Ot.Item:
              return {
                color: "#bababa",
                title: "Item",
                description: "Item Modifications are removed when the Item is lost or broken.",
              };
          }
          return { color: "#ffffff", title: "Um", description: "Ummmmmm" };
        })(a);
        if (a === Ot.League && o === Nt) return null;
        var c = o.description;
        return (
          o.descriptions &&
            (i === It.Player && void 0 !== o.descriptions.player && (c = o.descriptions.player),
            i === It.Team && void 0 !== o.descriptions.team && (c = o.descriptions.team),
            i === It.Ballpark && void 0 !== o.descriptions.ballpark && (c = o.descriptions.ballpark),
            i === It.League && void 0 !== o.descriptions.league && (c = o.descriptions.league)),
          (
            <div className="AttributeIcon">
              <Ct.a
                key="bottom-1"
                placement="bottom-start"
                overlay={
                  <St.a id="tooltip" className="AttributeTooltip">
                    <div className="AttributeTooltip-Container">
                      <div
                        className="AttributeTooltip-Header"
                        style={{
                          color: n.lightMode ? "#000000" : o.textColor,
                          backgroundColor: n.lightMode ? o.textColor : "none",
                        }}
                      >
                        {o.title}
                      </div>
                      <div className="AttributeTooltip-Description">{c}</div>
                      <div className="AttributeTooltip-Divider" />
                      <div
                        className="AttributeTooltip-Header"
                        style={{
                          color: n.lightMode ? "#000000" : s.color,
                          backgroundColor: n.lightMode ? s.color : "none",
                        }}
                      >
                        {s.title}
                      </div>
                      <div className="AttributeTooltip-Description">{s.description}</div>
                    </div>
                  </St.a>
                }
              >
                <div
                  className="AttributeIcon"
                  style={{ color: o.color, background: o.background, border: "2px solid ".concat(s.color) }}
                >
                  <Bt id={t} />
                </div>
              </Ct.a>
            </div>
          )
        );
      }
      function xt(e) {
        var t = e.id,
          a = u.collection.find(function (e) {
            return e.id === t;
          });
        return (
          void 0 === a && (a = Nt),
          (
            <div className="AttributeIcon" style={{ color: a.color, background: a.background }}>
              <Bt id={t} />
            </div>
          )
        );
      }
      function Pt(e) {
        var t = u.collection.find(function (t) {
          return t.id === e;
        });
        return void 0 === t && (t = Nt), t.title;
      }
      function Mt(e) {
        var t = e.id;
        if (null === t || "" === t) return null;
        var a = u.collection.find(function (e) {
          return e.id === t;
        });
        return void 0 === a && (a = Nt), (<span className="AttributeTooltip-Mod">({a.title})</span>);
      }
      function Lt(e) {
        var t = e.id,
          a = Object(r.useContext)(M.context).user;
        if ("" === t) return null;
        var n = u.collection.find(function (e) {
          return e.id === t;
        });
        return (
          void 0 === n && (n = Nt),
          (
            <div className="AttributeIcon-AtBat">
              <Ct.a
                key="bottom-1"
                placement="bottom-start"
                overlay={
                  <St.a id="tooltip" className="AttributeTooltip">
                    <div className="AttributeTooltip-Container">
                      <div
                        className="AttributeTooltip-Header"
                        style={{
                          color: a.lightMode ? "#000000" : n.textColor,
                          backgroundColor: a.lightMode ? n.textColor : "none",
                        }}
                      >
                        {n.title}
                      </div>
                      <div className="AttributeTooltip-Description">{n.description}</div>
                    </div>
                  </St.a>
                }
              >
                <div className="AttributeIcon-AtBat" style={{ color: n.color, background: n.background }}>
                  <Bt id={t} />
                </div>
              </Ct.a>
            </div>
          )
        );
      }
      var Rt = ["title", "titleId"];
      function Dt() {
        return (Dt =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Ft(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Qt(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Ft(e, Rt);
        return (
          <svg
            {...Dt(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {kt ||
              (kt = (
                <image
                  id="_01-Popcorn"
                  data-name="01-Popcorn"
                  x={35.5}
                  y={9.5}
                  width={185}
                  height={237}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var jt,
        Vt = r.forwardRef(Qt),
        Wt = (a.p, ["title", "titleId"]);
      function Ut() {
        return (Ut =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Gt(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ht(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Gt(e, Wt);
        return (
          <svg
            {...Ut(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {jt ||
              (jt = (
                <image
                  id="_02-SnakeOil"
                  data-name="02-SnakeOil"
                  x={51}
                  y={14}
                  width={154}
                  height={228}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Yt,
        zt = r.forwardRef(Ht),
        Xt = (a.p, ["title", "titleId"]);
      function Jt() {
        return (Jt =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Zt(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function qt(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Zt(e, Xt);
        return (
          <svg
            {...Jt(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Yt ||
              (Yt = (
                <image
                  id="_03-SunflowerSeeds"
                  data-name="03-SunflowerSeeds"
                  x={34}
                  y={13}
                  width={188}
                  height={230}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Kt,
        _t = r.forwardRef(qt),
        $t = (a.p, ["title", "titleId"]);
      function ea() {
        return (ea =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ta(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function aa(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ta(e, $t);
        return (
          <svg
            {...ea(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Kt ||
              (Kt = (
                <image
                  id="_04-Hotdog"
                  data-name="04-Hotdog"
                  x={8}
                  y={20}
                  width={240}
                  height={216}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var na,
        ra = r.forwardRef(aa),
        la = (a.p, ["title", "titleId"]);
      function ia() {
        return (ia =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function oa(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function sa(e, t) {
        var a = e.title,
          n = e.titleId,
          l = oa(e, la);
        return (
          <svg
            {...ia(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {na ||
              (na = (
                <image
                  id="_05-Chips"
                  data-name="05-Chips"
                  x={27}
                  y={11}
                  width={202}
                  height={234}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ca,
        ua = r.forwardRef(sa),
        ma = (a.p, ["title", "titleId"]);
      function Aa() {
        return (Aa =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function da(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function fa(e, t) {
        var a = e.title,
          n = e.titleId,
          l = da(e, ma);
        return (
          <svg
            {...Aa(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ca ||
              (ca = (
                <image
                  id="_06-Burger"
                  data-name="06-Burger"
                  x={14}
                  y={35}
                  width={228}
                  height={186}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ha,
        ga = r.forwardRef(fa),
        pa = (a.p, ["title", "titleId"]);
      function Ea() {
        return (Ea =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function va(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ba(e, t) {
        var a = e.title,
          n = e.titleId,
          l = va(e, pa);
        return (
          <svg
            {...Ea(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ha ||
              (ha = (
                <image
                  id="_07-Votes"
                  data-name="07-Votes"
                  x={5}
                  y={10}
                  width={246}
                  height={236}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var wa,
        ya = r.forwardRef(ba),
        Ba = (a.p, ["title", "titleId"]);
      function Oa() {
        return (Oa =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Ia(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Sa(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Ia(e, Ba);
        return (
          <svg
            {...Oa(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {wa ||
              (wa = (
                <image
                  id="_08-Flute"
                  data-name="08-Flute"
                  x={91}
                  y={10}
                  width={74}
                  height={236}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Ca,
        ka = r.forwardRef(Sa),
        Na = (a.p, ["title", "titleId"]);
      function Ta() {
        return (Ta =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function xa(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Pa(e, t) {
        var a = e.title,
          n = e.titleId,
          l = xa(e, Na);
        return (
          <svg
            {...Ta(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ca ||
              (Ca = (
                <image
                  id="_09-StalePopcorn"
                  data-name="09-StalePopcorn"
                  x={9}
                  y={42.5}
                  width={238}
                  height={171}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Ma,
        La = r.forwardRef(Pa),
        Ra = (a.p, ["title", "titleId"]);
      function Da() {
        return (Da =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Fa(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Qa(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Fa(e, Ra);
        return (
          <svg
            {...Da(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ma ||
              (Ma = (
                <image
                  id="_10-Pizza"
                  data-name="10-Pizza"
                  x={21}
                  y={10}
                  width={214}
                  height={236}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ja,
        Va = r.forwardRef(Qa),
        Wa = (a.p, ["title", "titleId"]);
      function Ua() {
        return (Ua =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Ga(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ha(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Ga(e, Wa);
        return (
          <svg
            {...Ua(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ja ||
              (ja = (
                <image
                  id="_11-CheeseBoard"
                  data-name="11-CheeseBoard"
                  x={5.5}
                  y={36}
                  width={245}
                  height={184}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Ya,
        za = r.forwardRef(Ha),
        Xa = (a.p, ["title", "titleId"]);
      function Ja() {
        return (Ja =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Za(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function qa(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Za(e, Xa);
        return (
          <svg
            {...Ja(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ya ||
              (Ya = (
                <image
                  id="_12-Apple"
                  data-name="12-Apple"
                  x={22}
                  y={19}
                  width={212}
                  height={218}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Ka,
        _a = r.forwardRef(qa),
        $a = (a.p, ["title", "titleId"]);
      function en() {
        return (en =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function tn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function an(e, t) {
        var a = e.title,
          n = e.titleId,
          l = tn(e, $a);
        return (
          <svg
            {...en(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ka ||
              (Ka = (
                <image
                  id="_35-BreadCrumbs"
                  data-name="35-BreadCrumbs"
                  x={10}
                  y={28}
                  width={236}
                  height={200}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var nn,
        rn = r.forwardRef(an),
        ln = (a.p, ["title", "titleId"]);
      function on() {
        return (on =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function sn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function cn(e, t) {
        var a = e.title,
          n = e.titleId,
          l = sn(e, ln);
        return (
          <svg
            {...on(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {nn ||
              (nn = (
                <image
                  id="_36-Peanuts"
                  data-name="36-Peanuts"
                  x={53.5}
                  y={13}
                  width={149}
                  height={230}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var un,
        mn = r.forwardRef(cn),
        An = (a.p, ["title", "titleId"]);
      function dn() {
        return (dn =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function fn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function hn(e, t) {
        var a = e.title,
          n = e.titleId,
          l = fn(e, An);
        return (
          <svg
            {...dn(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {un ||
              (un = (
                <image
                  id="_37-TarotSpread"
                  data-name="37-TarotSpread"
                  x={61}
                  y={21}
                  width={134}
                  height={214}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var gn,
        pn = r.forwardRef(hn),
        En = (a.p, ["title", "titleId"]);
      function vn() {
        return (vn =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function bn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function wn(e, t) {
        var a = e.title,
          n = e.titleId,
          l = bn(e, En);
        return (
          <svg
            {...vn(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {gn ||
              (gn = (
                <image
                  id="_13-Slushie"
                  data-name="13-Slushie"
                  x={62}
                  y={9}
                  width={132}
                  height={238}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var yn,
        Bn = r.forwardRef(wn),
        On = (a.p, ["title", "titleId"]);
      function In() {
        return (In =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Sn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Cn(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Sn(e, On);
        return (
          <svg
            {...In(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {yn ||
              (yn = (
                <image
                  id="_27-WetPretzel"
                  data-name="27-WetPretzel"
                  x={13}
                  y={37}
                  width={230}
                  height={182}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var kn,
        Nn = r.forwardRef(Cn),
        Tn = (a.p, ["title", "titleId"]);
      function xn() {
        return (xn =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Pn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Mn(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Pn(e, Tn);
        return (
          <svg
            {...xn(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {kn ||
              (kn = (
                <image
                  id="_21-Pickles"
                  data-name="21-Pickles"
                  x={11}
                  y={26}
                  width={234}
                  height={204}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Ln,
        Rn = r.forwardRef(Mn),
        Dn = (a.p, ["title", "titleId"]);
      function Fn() {
        return (Fn =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Qn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function jn(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Qn(e, Dn);
        return (
          <svg
            {...Fn(
              {
                id: "SNACKS_BASE_",
                "data-name": "SNACKS (BASE)",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 2500 2500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ln ||
              (Ln = (
                <g id="Meatballs">
                  <image id="l" x={407} y={376} width={1687} height={1687} xlinkHref="<img/png blob>" />
                </g>
              ))}
          </svg>
        );
      }
      var Vn,
        Wn = r.forwardRef(jn),
        Un = (a.p, ["title", "titleId"]);
      function Gn() {
        return (Gn =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Hn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Yn(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Hn(e, Un);
        return (
          <svg
            {...Gn(
              {
                id: "SNACKS_BASE_",
                "data-name": "SNACKS (BASE)",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 2500 2500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Vn ||
              (Vn = (
                <g id="Breakfast">
                  <image id="l" x={213} y={294} width={2017} height={1912} xlinkHref="<img/png blob>" />
                </g>
              ))}
          </svg>
        );
      }
      var zn,
        Xn = r.forwardRef(Yn),
        Jn = (a.p, ["title", "titleId"]);
      function Zn() {
        return (Zn =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function qn(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Kn(e, t) {
        var a = e.title,
          n = e.titleId,
          l = qn(e, Jn);
        return (
          <svg
            {...Zn(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {zn ||
              (zn = (
                <image
                  id="_24-SaltwaterTaffy"
                  data-name="24-SaltwaterTaffy"
                  x={10.5}
                  y={28}
                  width={235}
                  height={200}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var _n,
        $n = r.forwardRef(Kn),
        er = (a.p, ["title", "titleId"]);
      function tr() {
        return (tr =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ar(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function nr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ar(e, er);
        return (
          <svg
            {...tr(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {_n ||
              (_n = (
                <image
                  id="_25-Lemonade"
                  data-name="25-Lemonade"
                  x={78.5}
                  y={12.5}
                  width={99}
                  height={231}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var rr,
        lr = r.forwardRef(nr),
        ir = (a.p, ["title", "titleId"]);
      function or() {
        return (or =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function sr(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function cr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = sr(e, ir);
        return (
          <svg
            {...or(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {rr ||
              (rr = (
                <image
                  id="_26-Doughnut"
                  data-name="26-Doughnut"
                  x={13}
                  y={37}
                  width={230}
                  height={182}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ur,
        mr = r.forwardRef(cr),
        Ar = (a.p, ["title", "titleId"]);
      function dr() {
        return (dr =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function fr(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function hr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = fr(e, Ar);
        return (
          <svg
            {...dr(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ur ||
              (ur = (
                <image
                  id="_20-Sundae"
                  data-name="20-Sundae"
                  x={10}
                  y={30.5}
                  width={236}
                  height={195}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var gr,
        pr = r.forwardRef(hr),
        Er = (a.p, ["title", "titleId"]);
      function vr() {
        return (vr =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function br(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function wr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = br(e, Er);
        return (
          <svg
            {...vr(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {gr ||
              (gr = (
                <image
                  id="_18-Chum"
                  data-name="18-Chum"
                  x={24}
                  y={15}
                  width={208}
                  height={226}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var yr,
        Br = r.forwardRef(wr),
        Or = (a.p, ["title", "titleId"]);
      function Ir() {
        return (Ir =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Sr(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Cr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Sr(e, Or);
        return (
          <svg
            {...Ir(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {yr ||
              (yr = (
                <image
                  id="_23-ColdFries"
                  data-name="23-ColdFries"
                  x={33.5}
                  y={22}
                  width={189}
                  height={212}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var kr,
        Nr = r.forwardRef(Cr),
        Tr = (a.p, ["title", "titleId"]);
      function xr() {
        return (xr =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Pr(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Mr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Pr(e, Tr);
        return (
          <svg
            {...xr(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {kr ||
              (kr = (
                <image
                  id="_22-HotFries"
                  data-name="22-HotFries"
                  x={46.5}
                  y={10.5}
                  width={163}
                  height={235}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Lr,
        Rr = r.forwardRef(Mr),
        Dr = (a.p, ["title", "titleId"]);
      function Fr() {
        return (Fr =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Qr(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function jr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Qr(e, Dr);
        return (
          <svg
            {...Fr(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Lr || (Lr = <image x={9} y={21} width={131} height={105} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Vr,
        Wr = r.forwardRef(jr),
        Ur = (a.p, ["title", "titleId"]);
      function Gr() {
        return (Gr =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Hr(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Yr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Hr(e, Ur);
        return (
          <svg
            {...Gr(
              {
                id: "Bat",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Vr || (Vr = <image id="l" x={103} y={88} width={793} height={823} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var zr,
        Xr = r.forwardRef(Yr),
        Jr = (a.p, ["title", "titleId"]);
      function Zr() {
        return (Zr =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function qr(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Kr(e, t) {
        var a = e.title,
          n = e.titleId,
          l = qr(e, Jr);
        return (
          <svg
            {...Zr(
              {
                id: "cap",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {zr || (zr = <image id="l" x={98} y={226} width={821} height={552} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var _r,
        $r = r.forwardRef(Kr),
        el = (a.p, ["title", "titleId"]);
      function tl() {
        return (tl =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function al(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function nl(e, t) {
        var a = e.title,
          n = e.titleId,
          l = al(e, el);
        return (
          <svg
            {...tl(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {_r || (_r = <image x={16} y={13} width={117} height={123} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var rl,
        ll = r.forwardRef(nl),
        il = (a.p, ["title", "titleId"]);
      function ol() {
        return (ol =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function sl(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function cl(e, t) {
        var a = e.title,
          n = e.titleId,
          l = sl(e, il);
        return (
          <svg
            {...ol(
              {
                id: "Glove",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {rl || (rl = <image id="l" x={172} y={129} width={623} height={764} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ul,
        ml = r.forwardRef(cl),
        Al = (a.p, ["title", "titleId"]);
      function dl() {
        return (dl =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function fl(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function hl(e, t) {
        var a = e.title,
          n = e.titleId,
          l = fl(e, Al);
        return (
          <svg
            {...dl(
              {
                id: "jersey",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ul || (ul = <image id="l" x={166} y={78} width={677} height={865} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var gl,
        pl = r.forwardRef(hl),
        El = (a.p, ["title", "titleId"]);
      function vl() {
        return (vl =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function bl(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function wl(e, t) {
        var a = e.title,
          n = e.titleId,
          l = bl(e, El);
        return (
          <svg
            {...vl(
              {
                id: "shoe",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {gl || (gl = <image id="l" x={77} y={202} width={850} height={604} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var yl,
        Bl = r.forwardRef(wl),
        Ol = (a.p, ["title", "titleId"]);
      function Il() {
        return (Il =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Sl(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Cl(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Sl(e, Ol);
        return (
          <svg
            {...Il(
              {
                id: "ring",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {yl || (yl = <image id="l" x={115} y={217} width={768} height={573} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var kl,
        Nl = r.forwardRef(Cl),
        Tl = (a.p, ["title", "titleId"]);
      function xl() {
        return (xl =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Pl(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ml(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Pl(e, Tl);
        return (
          <svg
            {...xl(
              {
                id: "socks",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {kl || (kl = <image id="l" x={135} y={61} width={734} height={878} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Ll,
        Rl = r.forwardRef(Ml),
        Dl = (a.p, ["title", "titleId"]);
      function Fl() {
        return (Fl =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Ql(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function jl(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Ql(e, Dl);
        return (
          <svg
            {...Fl(
              {
                id: "sunglasses",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ll || (Ll = <image id="l" x={97} y={120} width={807} height={790} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Vl,
        Wl = r.forwardRef(jl),
        Ul = (a.p, ["title", "titleId"]);
      function Gl() {
        return (Gl =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Hl(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Yl(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Hl(e, Ul);
        return (
          <svg
            {...Gl(
              {
                id: "Misc",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Vl || (Vl = <image id="l" x={97} y={156} width={805} height={680} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var zl,
        Xl = r.forwardRef(Yl),
        Jl = (a.p, ["title", "titleId"]);
      function Zl() {
        return (Zl =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ql(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Kl(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ql(e, Jl);
        return (
          <svg
            {...Zl(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {zl || (zl = <image x={10} y={9} width={128} height={134} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var _l,
        $l = r.forwardRef(Kl),
        ei = (a.p, ["title", "titleId"]);
      function ti() {
        return (ti =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ai(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ni(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ai(e, ei);
        return (
          <svg
            {...ti(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {_l || (_l = <image x={11} y={20} width={128} height={115} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ri,
        li = r.forwardRef(ni),
        ii = (a.p, ["title", "titleId"]);
      function oi() {
        return (oi =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function si(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ci(e, t) {
        var a = e.title,
          n = e.titleId,
          l = si(e, ii);
        return (
          <svg
            {...oi(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ri || (ri = <image x={7} y={31} width={138} height={97} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ui,
        mi = r.forwardRef(ci),
        Ai = (a.p, ["title", "titleId"]);
      function di() {
        return (di =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function fi(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function hi(e, t) {
        var a = e.title,
          n = e.titleId,
          l = fi(e, Ai);
        return (
          <svg
            {...di(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ui || (ui = <image x={9} y={21} width={128} height={106} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var gi,
        pi = r.forwardRef(hi),
        Ei = (a.p, ["title", "titleId"]);
      function vi() {
        return (vi =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function bi(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function wi(e, t) {
        var a = e.title,
          n = e.titleId,
          l = bi(e, Ei);
        return (
          <svg
            {...vi(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {gi || (gi = <image x={13} y={8} width={124} height={135} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var yi,
        Bi = r.forwardRef(wi),
        Oi = (a.p, ["title", "titleId"]);
      function Ii() {
        return (Ii =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Si(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ci(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Si(e, Oi);
        return (
          <svg
            {...Ii(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {yi || (yi = <image x={34} y={10} width={83} height={126} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ki,
        Ni = r.forwardRef(Ci),
        Ti = (a.p, ["title", "titleId"]);
      function xi() {
        return (xi =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Pi(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Mi(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Pi(e, Ti);
        return (
          <svg
            {...xi(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ki || (ki = <image x={20} y={6} width={110} height={137} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Li,
        Ri = r.forwardRef(Mi),
        Di = (a.p, ["title", "titleId"]);
      function Fi() {
        return (Fi =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Qi(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ji(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Qi(e, Di);
        return (
          <svg
            {...Fi(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Li || (Li = <image x={10} y={20} width={130} height={110} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Vi,
        Wi = r.forwardRef(ji),
        Ui = (a.p, ["title", "titleId"]);
      function Gi() {
        return (Gi =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Hi(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Yi(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Hi(e, Ui);
        return (
          <svg
            {...Gi(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Vi || (Vi = <image x={9} y={33} width={132} height={84} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var zi,
        Xi = r.forwardRef(Yi),
        Ji = (a.p, ["title", "titleId"]);
      function Zi() {
        return (Zi =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function qi(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ki(e, t) {
        var a = e.title,
          n = e.titleId,
          l = qi(e, Ji);
        return (
          <svg
            {...Zi(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {zi || (zi = <image x={25} y={8} width={100} height={135} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var _i,
        $i = r.forwardRef(Ki),
        eo = (a.p, ["title", "titleId"]);
      function to() {
        return (to =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ao(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function no(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ao(e, eo);
        return (
          <svg
            {...to(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {_i || (_i = <image x={11} y={26} width={129} height={99} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ro = r.forwardRef(no);
      a.p;
      function lo(e, t) {
        var a = new oe();
        if (void 0 !== t) {
          for (var n in t.wins)
            if (n === e) {
              a.wins = t.wins[n];
              break;
            }
          for (var r in t.losses)
            if (r === e) {
              a.losses = t.losses[r];
              break;
            }
          for (var l in t.gamesPlayed)
            if (l === e) {
              a.games = t.gamesPlayed[l];
              break;
            }
        }
        return (a.nonlosses = a.games < a.losses ? a.wins : a.games - a.losses), a;
      }
      function io(e) {
        var t = e.wins >= 0 ? e.wins : <span className="Record-Negative">{"(".concat(-e.wins, ")")}</span>;
        return <span>{t}</span>;
      }
      function oo(e) {
        var t =
            e.nonlosses >= 0 ? e.nonlosses : <span className="Record-Negative">{"(".concat(-e.nonlosses, ")")}</span>,
          a = e.losses >= 0 ? e.losses : <span className="Record-Negative">{"(".concat(-e.losses, ")")}</span>;
        return (
          <span>
            {t}-{a}
          </span>
        );
      }
      function so(e) {
        var t = e.str.split(" ");
        return (
          <span className="TheBook-RedactGroup" aria-label="Redacted" role="text">
            {t.map(function (e) {
              return (
                <div className="TheBook-Redacted">
                  {e.split("").map(function () {
                    return <span>  </span>;
                  })}
                </div>
              );
            })}
          </span>
        );
      }
      function co(e) {
        if (e.str.length > 1)
          return (
            <ol className="TheBook-Glossary-Definition-List">
              {e.str.map(function (e) {
                var t = e.split(" "),
                  a = -1;
                return (
                  <li className="TheBook-Glossary-Definition-Bullet" role="text">
                    {t.map(function (e, t) {
                      if (e.includes("|")) {
                        var n = a === t - 1 && -1 !== a;
                        return (
                          (a = t),
                          (
                            <span className="TheBook-Redacted" role="text" aria-label={n ? "" : "Redacted"}>
                              {e.split("").map(function () {
                                return (
                                  <span aria-hidden={n} key={t}>
                                      
                                  </span>
                                );
                              })}
                            </span>
                          )
                        );
                      }
                      return " " + e + " ";
                    })}
                  </li>
                );
              })}
            </ol>
          );
        var t = e.str[0].split(" "),
          a = -1;
        return (
          <span className="TheBook-Glossary-Definition" role="text">
            {t.map(function (e, t) {
              if (e.includes("|")) {
                var n = a === t - 1 && -1 !== a;
                return (
                  (a = t),
                  (
                    <span className="TheBook-Redacted" role="text" aria-label={n ? "" : "Redacted"} key={t}>
                      {e.split("").map(function (e, t) {
                        return (
                          <span aria-hidden={n} key={t}>
                              
                          </span>
                        );
                      })}
                    </span>
                  )
                );
              }
              return " " + e + " ";
            })}
          </span>
        );
      }
      function uo(e) {
        switch (e) {
          case ne.IDOL_HITS:
            return <_t />;
          case ne.IDOL_HOMERS:
            return <ra />;
          case ne.IDOL_STRIKEOUTS:
            return <ua />;
          case ne.IDOL_SHUTOUTS:
            return <ga />;
          case ne.TEAM_WIN:
            return <Vt />;
          case ne.MAX_BET:
            return <zt />;
          case ne.VOTES:
            return <ya />;
          case ne.FLUTES:
            return <ka />;
          case ne.TEAM_LOSS:
            return <La />;
          case ne.STADIUM:
            return <Va />;
          case ne.WILLS:
            return <za />;
          case ne.FORBIDDEN_KNOWLEDGE:
            return <_a />;
          case ne.PEANUTS:
            return <mn />;
          case ne.BEG:
            return <rn />;
          case ne.TAROT:
            return <pn />;
          case ne.SLUSH_FUND:
            return <Bn />;
          case ne.IDOL_STEAL:
            return <Rn />;
          case ne.BLACK_HOLE:
            return <Nn />;
          case ne.INCINERATION:
            return <pr />;
          case ne.IDOL_HOMER_ALLOW:
            return <Wn />;
          case ne.TEAM_SHAMED:
            return <lr />;
          case ne.TEAM_SHAMING:
            return <$n />;
          case ne.SUN_2:
            return <mr />;
          case ne.BREAKFAST:
            return <Xn />;
          case ne.IDOL_PITCHER_WIN:
            return <Rr />;
          case ne.IDOL_PITCHER_LOSS:
            return <Nr />;
          case ne.CONSUMER:
            return <Br />;
          case ne.RED_HERRING:
            return <Wr />;
        }
      }
      function mo(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
          a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "\n",
          n = e.split(a);
        return (
          <ul>
            {n.map(function (e) {
              return <li className={t}>{e}</li>;
            })}
          </ul>
        );
      }
      function Ao(e, t) {
        return {
          color: e.lightMode ? NA(t.secondaryColor) : t.secondaryColor,
          background: e.lightMode ? t.secondaryColor : "none",
          padding: e.lightMode ? "0 8px" : "initial",
          borderRadius: e.lightMode ? "10px" : 0,
        };
      }
      function fo(e, t, a, n) {
        var i = PA(Object(r.useContext)(S.context).sim, "SIM_EVOLUTION_CONCEPTUALIZED"),
          o = Math.abs(a),
          s = 1 === Math.sign(a),
          c = -1 === Math.sign(a),
          u = KA(e) + (s ? a : 0),
          m = Math.floor(u),
          A = Math.ceil(u),
          d = Number((u - m).toFixed(2)),
          f = 18 * Math.max(d, 0.31),
          h = Math.max(f - o * f, f - 0.69 * f),
          g = Number((o - d).toFixed(2)),
          p = Number((Number(u.toFixed(2)) - Number(o.toFixed(2))).toFixed(2)),
          E = "";
        s && !c ? (E = "-Blue") : !s && c && (E = "-Red");
        for (var v = [], b = 0; b < m; b++)
          if (b < t && t > 0 && i) v.push(<re.a className="Player-Stars-Gilded" key={b} />);
          else if (o > d && b >= Math.floor(p)) {
            var w = Number((g - Math.floor(g)).toFixed(1));
            (m === A && w > 0) || (d > 0 && w > 0)
              ? (v.push(
                  <div className="Player-Stars-Temp-Wrapper" key={b}>
                    <div style={{ width: "18px", position: "absolute" }} className="Player-Stars-Fractional-Wrapper">
                      <re.a className={"Player-Stars-Temp" + E} />
                    </div>
                    {!s && c ? <div className="Player-Stars-Red-Line" /> : null}
                    <div
                      style={{
                        width: "".concat(Math.max(18 - 18 * Math.max(w, 0.31), 18 - 0.69 * 18), "px"),
                        position: "absolute",
                      }}
                      className="Player-Stars-Fractional-Wrapper"
                    >
                      <re.a className="Player-Stars-Temp-White" />
                    </div>
                  </div>
                ),
                (g = Number((g - w).toFixed(2))))
              : ((m === A && 0 === w) || (d > 0 && Math.floor(g) > 0)) &&
                (v.push(
                  <div className="Player-Stars-Temp-Wrapper" key={b}>
                    <re.a className={"Player-Stars-Temp" + E} />
                    {!s && c ? <div className="Player-Stars-Red-Line" /> : null}
                  </div>
                ),
                (g -= 1));
          } else v.push(<re.a key={b} />);
        d > 0 &&
          (o < d && (s || c)
            ? v.push(
                <div className="Player-Stars-Temp-Wrapper" key={-1}>
                  <div
                    style={{ width: "".concat(f, "px"), position: "absolute" }}
                    className="Player-Stars-Fractional-Wrapper"
                  >
                    <re.a className={"Player-Stars-Temp" + E} />
                    {!s && c ? <div className="Player-Stars-Red-Line" /> : null}
                  </div>
                  <div
                    style={{ width: "".concat(h, "px"), position: "absolute" }}
                    className="Player-Stars-Fractional-Wrapper"
                  >
                    <re.a className="Player-Stars-Temp-White" />
                  </div>
                </div>
              )
            : v.push(
                <div style={{ width: "".concat(f, "px") }} className="Player-Stars-Fractional-Wrapper" key={-1}>
                  <re.a className={"Player-Stars-Fractional" + (o >= d ? " Player-Stars" + E : "")} />
                  {!s && c ? <div className="Player-Stars-Red-Line" /> : null}
                </div>
              ));
        var y = "".concat(u, " Stars");
        return (
          o > 0 && t > 0 && s && (y += ", including ".concat(a, " temporarily added and ").concat(t, " gilded.")),
          o > 0 && t > 0 && c
            ? (y += ", including ".concat(a, " temporarily removed and ").concat(t, " gilded."))
            : o > 0 && s
            ? (y += ", including ".concat(a, " temporarily added."))
            : o > 0 && c
            ? (y += ", including ".concat(a, " temporarily removed."))
            : t > 0 && (y += ", including ".concat(t, " gilded.")),
          n ? (
            <span style={{ display: "flex" }} aria-label={y}>
              {v}
            </span>
          ) : (
            <l.a.Fragment>
              <span style={{ display: "flex" }} aria-label={y}>
                {v}{" "}
                <span className="Player-Stars-Num">
                  ({KA(e).toFixed(1)}
                  {o > 0 ? (
                    <l.a.Fragment>
                      {" "}
                      {s && !c ? "+" : "-"} <span className={"Player-Stars" + E}> {o.toFixed(1)}</span>
                    </l.a.Fragment>
                  ) : (
                    <l.a.Fragment />
                  )}
                  )
                </span>
              </span>
            </l.a.Fragment>
          )
        );
      }
      function ho(e) {
        var t = TA(5 * (e.hittingRating + e.pitchingRating + e.baserunningRating + e.defenseRating), 1),
          a = ZA(4, e.items);
        return (
          <div className="Player-Stars-Combined">
            {t}
            {Math.abs(a) > 0 ? (
              <l.a.Fragment>
                {" "}
                {1 === Math.sign(a) ? "+" : "-"}{" "}
                <span className={"Player-Stars" + (1 === Math.sign(a) ? "-Blue" : "-Red")}>
                   {Math.abs(a).toFixed(1)}
                </span>
              </l.a.Fragment>
            ) : (
              <l.a.Fragment />
            )}{" "}
            <re.a />
          </div>
        );
      }
      function go(e) {
        for (var t = [], a = 0; a < e.length; a++)
          "-" === e[a]
            ? t.push(<span aria-label="dash">{e[a]}</span>)
            : " " === e[a]
            ? t.push(<l.a.Fragment> </l.a.Fragment>)
            : t.push(<l.a.Fragment>{e[a]}</l.a.Fragment>);
        return t;
      }
      function po(e) {
        for (var t = e.length - 1; t > 0; t--) {
          var a = Math.floor(Math.random() * (t + 1)),
            n = e[t];
          (e[t] = e[a]), (e[a] = n);
        }
        return e;
      }
      function Eo() {
        return (
          <div className="BlinkingRedLight-Wrapper">
            <div className="BlinkingRedLight" />
          </div>
        );
      }
      function vo(e, t) {
        var a = [];
        if (-1 === t)
          return (
            <div className="Player-Info-Items-Durability" aria-label="Unbreakable.">
              <div className="Player-Info-Items-Durability-Unbreakable">∞</div>
            </div>
          );
        for (var n = 0; n < t; n++)
          0 === e && t > 0
            ? a.push(<le.d className="Player-Info-Items-Durability-Broken" />)
            : n < e
            ? a.push(<div className="Player-Info-Items-Durability-Dot">●</div>)
            : a.push(<div className="Player-Info-Items-Durability-Dot">○</div>);
        return (
          <div
            className="Player-Info-Items-Durability"
            aria-label={e + " out of " + t + " durability." + (0 === e ? " Broken." : "")}
          >
            {a}
          </div>
        );
      }
      function bo(e) {
        switch (e) {
          case "Bat":
            return <Xr className="Item-Icon" />;
          case "Glove":
            return <ml className="Item-Icon" />;
          case "Necklace":
            return <ll className="Item-Icon" />;
          case "Jersey":
            return <pl className="Item-Icon" />;
          case "Ring":
            return <Nl className="Item-Icon" />;
          case "Shoes":
            return <Bl className="Item-Icon" />;
          case "Cap":
            return <$r className="Item-Icon" />;
          case "Sunglasses":
            return <Wl className="Item-Icon" />;
          case "Socks":
            return <Rl className="Item-Icon" />;
          case "Board":
            return <$l className="Item-Icon" />;
          case "Field":
            return <li className="Item-Icon" />;
          case "Cannon":
            return <mi className="Item-Icon" />;
          case "Broom":
            return <Bi className="Item-Icon" />;
          case "Cape":
            return <Ri className="Item-Icon" />;
          case "Potion":
            return <Ni className="Item-Icon" />;
          case "Helmet":
            return <pi className="Item-Icon" />;
          case "Pillow":
            return <Wi className="Item-Icon" />;
          case "Base":
            return <Xi className="Item-Icon" />;
          case "Quill":
            return <$i className="Item-Icon" />;
          case "Phone":
            return <ro className="Item-Icon" />;
          default:
            return <Xl className="Item-Icon" />;
        }
      }
      function wo(e, t, a, n) {
        var r = (a / n) * 100;
        return (
          <div className={t}>
            {e}
            <div className="Team-Stadium-Progress-Bar progress">
              <div
                className="progress-bar"
                role="progressbar"
                aria-valuenow={r}
                aria-valuemin={0}
                aria-valuemax={100}
                style={{ width: "".concat(r, "%") }}
              />
              <div className="Team-Stadium-Progress-Text" style={{ color: "#000" }}>
                <div
                  style={{
                    height: "12px",
                    display: "flex",
                    justifyContent: "center",
                    alignItems: "center",
                    background: "#fff",
                    padding: "0 4px",
                    borderRadius: "5px",
                  }}
                >
                  {a} / {n}
                </div>
              </div>
            </div>
            <le.e />
          </div>
        );
      }
      function yo(e, t) {
        var a = [],
          n = 0;
        return (
          e.permAttr.map(function (e, r) {
            a.push(<Tt id={e} type={Ot.Permanent} key={n} context={t} />), n++;
          }),
          e.seasAttr.map(function (e, r) {
            a.push(<Tt id={e} type={Ot.Season} key={n} context={t} />), n++;
          }),
          e.weekAttr.map(function (e, r) {
            a.push(<Tt id={e} type={Ot.Weekly} key={n} context={t} />), n++;
          }),
          e.gameAttr.map(function (e, r) {
            a.push(<Tt id={e} type={Ot.Game} key={n} context={t} />), n++;
          }),
          e.itemAttr &&
            e.itemAttr.map(function (e, r) {
              a.push(<Tt id={e} type={Ot.Item} key={n} context={t} />), n++;
            }),
          a
        );
      }
      var Bo = function (e) {
          var t = e.event;
          if (t.metadata && t.metadata.redacted) {
            var a = t.description.split("\n");
            return (
              <l.a.Fragment>
                <ul className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                  {a.map(function (e) {
                    if (e.length > 0)
                      return (
                        <li>
                          <so str={e} />
                        </li>
                      );
                  })}
                </ul>
              </l.a.Fragment>
            );
          }
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                {mo(t.description)}
              </div>
            </l.a.Fragment>
          );
        },
        Oo = function (e) {
          var t = e.event,
            a = e.entity,
            n = e.source,
            r = Object(c.g)(),
            i = t.gameTags[0];
          if (a === i && n === cm.Game) return <Bo entity={a} event={t} source={n} />;
          if (n !== cm.Team)
            return (
              <l.a.Fragment>
                {void 0 !== i ? (
                  <A
                    background={r}
                    path={"/game/".concat(t.gameTags[0])}
                    className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}
                  >
                    {t.description}
                  </A>
                ) : (
                  <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                    {t.description}
                  </div>
                )}
              </l.a.Fragment>
            );
          var o = t.metadata.winner === a;
          return (
            <l.a.Fragment>
              <A
                background={r}
                path={"/game/".concat(t.gameTags[0])}
                className={
                  "Events-List-Desc Events-List-Background-Standard" +
                  (o ? " Events-List-Desc-Win" : " Events-List-Desc-Loss")
                }
              >
                {t.description}
              </A>
            </l.a.Fragment>
          );
        };
      function Io(e, t, a) {
        return (
          <div className="Events-List-Row Events-List-Minor">
            <span className={a ? "Events-List-PositiveText" : "Events-List-NegativeText"}>{a ? "+" : "-"}</span>
            <span className="Events-List-Mod Events-List-Row-Group">
              <Tt id={e} type={t} />
            </span>
            <span className="Events-List-Row-Group">{Pt(e)}</span>
          </div>
        );
      }
      var So,
        Co = function (e) {
          var t = e.event,
            a = t.metadata,
            n = 106 === t.type || 146 === t.type || 210 === t.type;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Row">{t.description}</div>
                {Io(a.mod, a.type, n)}
              </div>
            </l.a.Fragment>
          );
        },
        ko = l.a.createContext({
          leagues: [],
          subleagues: [],
          divisions: [],
          teams: [],
          stadiums: [],
          players: [],
          tiebreakers: [],
          stats: {},
        }),
        No = function (e) {
          var t = e.children,
            a = Object(r.useState)({
              leagues: [],
              subleagues: [],
              divisions: [],
              teams: [],
              stadiums: [],
              players: [],
              tiebreakers: [],
              stats: {},
            }),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1];
          return (
            Object(r.useEffect)(function () {
              function e(e) {
                e.leagues && ((So = e.leagues), o(e.leagues));
              }
              return (
                v.subscribe(e),
                function () {
                  v.unsub(e);
                }
              );
            }, []),
            (<ko.Provider value={i}>{t}</ko.Provider>)
          );
        };
      No.context = ko;
      var To,
        xo = No,
        Po = function (e) {
          var t = Object(r.useContext)(xo.context),
            a = Object(c.g)(),
            n = e.event,
            i = e.entity,
            o = n.metadata,
            s = t.teams.find(function (e) {
              return e.id === o.aTeamId;
            }),
            u = t.teams.find(function (e) {
              return e.id === o.bTeamId;
            });
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(n.category)}>
                <div className="Events-List-Column">
                  <div className="Events-List-Row">{n.description}</div>
                  <div className="Events-List-Row Events-List-Minor">
                    {DA(s)}
                    <div className="Events-List-Row-Group">
                      <span className="Events-List-NegativeText">-</span>{" "}
                      {o.aPlayerId === i ? (
                        <span>{o.aPlayerName}</span>
                      ) : (
                        <A background={a} path={"/player/".concat(o.aPlayerId)}>
                          {o.aPlayerName}
                        </A>
                      )}
                    </div>
                    <div className="Events-List-Row-Group">
                      <span className="Events-List-PositiveText">+</span>{" "}
                      {o.bPlayerId === i ? (
                        <span>{o.bPlayerName}</span>
                      ) : (
                        <A background={a} path={"/player/".concat(o.bPlayerId)}>
                          {o.bPlayerName}
                        </A>
                      )}
                    </div>
                  </div>
                  <div className="Events-List-Row Events-List-Minor">
                    {DA(u)}
                    <div className="Events-List-Row-Group">
                      <span className="Events-List-NegativeText">-</span>{" "}
                      {o.bPlayerId === i ? (
                        <span>{o.bPlayerName}</span>
                      ) : (
                        <A background={a} path={"/player/".concat(o.bPlayerId)}>
                          {o.bPlayerName}
                        </A>
                      )}
                    </div>
                    <div className="Events-List-Row-Group">
                      <span className="Events-List-PositiveText">+</span>{" "}
                      {o.aPlayerId === i ? (
                        <span>{o.aPlayerName}</span>
                      ) : (
                        <A background={a} path={"/player/".concat(o.aPlayerId)}>
                          {o.aPlayerName}
                        </A>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </l.a.Fragment>
          );
        };
      !(function (e) {
        (e[(e.tragicness = 0)] = "tragicness"),
          (e[(e.buoyancy = 1)] = "buoyancy"),
          (e[(e.thwackability = 2)] = "thwackability"),
          (e[(e.moxie = 3)] = "moxie"),
          (e[(e.divinity = 4)] = "divinity"),
          (e[(e.musclitude = 5)] = "musclitude"),
          (e[(e.patheticism = 6)] = "patheticism"),
          (e[(e.martyrdom = 7)] = "martyrdom"),
          (e[(e.cinnamon = 8)] = "cinnamon"),
          (e[(e.baseThirst = 9)] = "baseThirst"),
          (e[(e.laserlikeness = 10)] = "laserlikeness"),
          (e[(e.continuation = 11)] = "continuation"),
          (e[(e.indulgence = 12)] = "indulgence"),
          (e[(e.groundFriction = 13)] = "groundFriction"),
          (e[(e.shakespearianism = 14)] = "shakespearianism"),
          (e[(e.suppression = 15)] = "suppression"),
          (e[(e.unthwackability = 16)] = "unthwackability"),
          (e[(e.coldness = 17)] = "coldness"),
          (e[(e.overpowerment = 18)] = "overpowerment"),
          (e[(e.ruthlessness = 19)] = "ruthlessness"),
          (e[(e.pressurization = 20)] = "pressurization"),
          (e[(e.omniscience = 21)] = "omniscience"),
          (e[(e.tenaciousness = 22)] = "tenaciousness"),
          (e[(e.watchfulness = 23)] = "watchfulness"),
          (e[(e.anticapitalism = 24)] = "anticapitalism"),
          (e[(e.chasiness = 25)] = "chasiness");
      })(To || (To = {}));
      function Mo(e) {
        return TA(5 * e, 1);
      }
      var Lo = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                {mo(t.description)}
                {(function (e, t) {
                  var a = t.after > t.before;
                  return (
                    <div className="Events-List-Row Events-List-Minor">
                      <span>
                        {(function (e) {
                          switch (e) {
                            case To.anticapitalism:
                              return "Anticapitalism";
                            case To.baseThirst:
                              return "Base Thirst";
                            case To.buoyancy:
                              return "Buoyancy";
                            case To.chasiness:
                              return "Chasiness";
                            case To.cinnamon:
                              return "Cinnamon";
                            case To.coldness:
                              return "Coldness";
                            case To.continuation:
                              return "Continuation";
                            case To.divinity:
                              return "Divinity";
                            case To.groundFriction:
                              return "Ground Friction";
                            case To.indulgence:
                              return "Indulgence";
                            case To.laserlikeness:
                              return "Laserlikeness";
                            case To.martyrdom:
                              return "Martyrdom";
                            case To.moxie:
                              return "Moxie";
                            case To.musclitude:
                              return "Musclitude";
                            case To.omniscience:
                              return "Omniscience";
                            case To.overpowerment:
                              return "Overpowerment";
                            case To.patheticism:
                              return "Patheticism";
                            case To.pressurization:
                              return "Pressurization";
                            case To.ruthlessness:
                              return "Ruthlessness";
                            case To.shakespearianism:
                              return "Shakespearianism";
                            case To.suppression:
                              return "Suppression";
                            case To.tenaciousness:
                              return "Tenaciousness";
                            case To.thwackability:
                              return "Thwackability";
                            case To.tragicness:
                              return "Tragicness";
                            case To.unthwackability:
                              return "Unthwackability";
                            case To.watchfulness:
                              return "Watchfulness";
                          }
                        })(t.type)}
                      </span>
                      <span className="Events-List-Row Events-List-Row-Group">
                        {199 === e.type ? (
                          <span className="Events-List-Row Events-List-Row-Group">{t.before}</span>
                        ) : (
                          <span className="Events-List-Row Events-List-Row-Group">
                            {Mo(t.before)}
                            <re.a />
                          </span>
                        )}
                        <ce.b className="Events-List-Row-Group" />
                        {199 === e.type ? (
                          <span
                            className={
                              "Events-List-Row Events-List-Row-Group " +
                              (a ? "Events-List-PositiveText" : "Events-List-NegativeText")
                            }
                          >
                            {t.after}
                          </span>
                        ) : (
                          <span
                            className={
                              "Events-List-Row Events-List-Row-Group " +
                              (a ? "Events-List-PositiveText" : "Events-List-NegativeText")
                            }
                          >
                            {Mo(t.after)}
                            <re.a />
                          </span>
                        )}
                      </span>
                    </div>
                  );
                })(t, a)}
              </div>
            </l.a.Fragment>
          );
        },
        Ro = function (e) {
          var t = Object(r.useContext)(xo.context),
            a = Object(c.g)(),
            n = e.event,
            i = e.entity,
            o = n.metadata,
            s = t.teams.find(function (e) {
              return e.id === o.teamId;
            });
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(n.category)}>
                <div className="Events-List-Column">
                  <div className="Events-List-Row">{n.description}</div>
                  <div className="Events-List-Row Events-List-Minor">
                    {DA(s)}
                    <div className="Events-List-Row Events-List-Row-Group">
                      {o.aPlayerId === i ? (
                        <span>{o.aPlayerName}</span>
                      ) : (
                        <A background={a} path={"/player/".concat(o.aPlayerId)}>
                          {o.aPlayerName}
                        </A>
                      )}
                      <ce.b className="Events-List-Row-Group" />
                      <span className="Events-List-Row Events-List-Row-Group">{om(o.bLocation)}</span>
                    </div>
                  </div>
                  <div className="Events-List-Row Events-List-Minor">
                    {DA(s)}
                    <div className="Events-List-Row Events-List-Row-Group">
                      {o.bPlayerId === i ? (
                        <span>{o.bPlayerName}</span>
                      ) : (
                        <A background={a} path={"/player/".concat(o.bPlayerId)}>
                          {o.bPlayerName}
                        </A>
                      )}
                      <ce.b className="Events-List-Row-Group" />
                      <span className="Events-List-Row Events-List-Row-Group">{om(o.aLocation)}</span>
                    </div>
                  </div>
                </div>
              </div>
            </l.a.Fragment>
          );
        };
      function Do(e, t, a, n, i) {
        var o = Object(r.useContext)(xo.context),
          s = Object(c.g)(),
          u = o.teams.find(function (t) {
            return t.id === e;
          });
        return (
          <div className="Events-List-Row Events-List-Minor">
            {DA(u)}
            <div className="Events-List-Row-Group">
              <span className="Events-List-PositiveText">+</span>{" "}
              {t === i ? (
                <span>{a}</span>
              ) : (
                <A background={s} path={"/player/".concat(t)}>
                  {a}
                </A>
              )}
              ,
            </div>
            <div className="Events-List-Row-Group">{om(n)}</div>
          </div>
        );
      }
      var Fo = function (e) {
        var t = e.event,
          a = e.entity,
          n = t.metadata;
        return (
          <l.a.Fragment>
            <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
              <div className="Events-List-Column">
                <div className="Events-List-Row">{t.description}</div>
                {Do(n.teamId, n.playerId, n.playerName, n.location, a)}
              </div>
            </div>
          </l.a.Fragment>
        );
      };
      function Qo(e, t, a, n, i) {
        var o = Object(r.useContext)(xo.context),
          s = Object(c.g)(),
          u = o.teams.find(function (t) {
            return t.id === e;
          });
        return (
          <div className="Events-List-Row Events-List-Minor">
            {DA(u)}
            <div className="Events-List-Row-Group">
              <span className="Events-List-NegativeText">-</span>{" "}
              {t === i ? (
                <span>{a}</span>
              ) : (
                <A background={s} path={"/player/".concat(t)}>
                  {a}
                </A>
              )}
              ,
            </div>
            <div className="Events-List-Row-Group">{om(n)}</div>
          </div>
        );
      }
      var jo,
        Vo = function (e) {
          var t = e.event,
            a = e.entity,
            n = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Column">
                  <div className="Events-List-Row">{t.description}</div>
                  {Qo(n.teamId, n.playerId, n.playerName, n.location, a)}
                </div>
              </div>
            </l.a.Fragment>
          );
        },
        Wo = function (e) {
          var t = e.event,
            a = e.entity,
            n = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Column">
                  <div className="Events-List-Row">{t.description}</div>
                  {Qo(n.sendTeamId, n.playerId, n.playerName, n.location, a)}
                  {Do(
                    n.receiveTeamId,
                    n.playerId,
                    n.playerName,
                    void 0 !== n.receiveLocation ? n.receiveLocation : n.location,
                    a
                  )}
                </div>
              </div>
            </l.a.Fragment>
          );
        };
      !(function (e) {
        (e[(e.Batting = 0)] = "Batting"),
          (e[(e.Pitching = 1)] = "Pitching"),
          (e[(e.Defense = 2)] = "Defense"),
          (e[(e.Baserunning = 3)] = "Baserunning"),
          (e[(e.Combined = 4)] = "Combined"),
          (e[(e.Overall = 5)] = "Overall");
      })(jo || (jo = {}));
      function Uo(e) {
        var t = e.after > e.before;
        return (
          <div className="Events-List-Row Events-List-Minor">
            <span>
              {(function (e) {
                switch (e) {
                  case jo.Batting:
                    return "Batting";
                  case jo.Pitching:
                    return "Pitching";
                  case jo.Defense:
                    return "Defense";
                  case jo.Baserunning:
                    return "Baserunning";
                  case jo.Combined:
                    return "Combined";
                  case jo.Overall:
                    return "Overall";
                }
              })(e.type)}
            </span>
            <span className="Events-List-Row Events-List-Row-Group">
              <span className="Events-List-Row Events-List-Row-Group">
                {Go(e.before)}
                <re.a />
              </span>
              <ce.b className="Events-List-Row-Group" />
              <span
                className={
                  "Events-List-Row Events-List-Row-Group " +
                  (t ? "Events-List-PositiveText" : "Events-List-NegativeText")
                }
              >
                {Go(e.after)}
                <re.a />
              </span>
            </span>
          </div>
        );
      }
      function Go(e) {
        return TA(5 * e, 1);
      }
      var Ho,
        Yo = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                {mo(t.description)}
                {Uo(a)}
              </div>
            </l.a.Fragment>
          );
        },
        zo = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Row">{t.description}</div>
                {Io("ALTERNATE", 0, !0)}
                {Uo(a)}
              </div>
            </l.a.Fragment>
          );
        },
        Xo = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Row">{t.description}</div>
                {a.mods.map(function (e) {
                  return Io(e, a.type, !1);
                })}
              </div>
            </l.a.Fragment>
          );
        },
        Jo = function (e) {
          var t = e.event,
            a = e.entity,
            n = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Column">
                  <div className="Events-List-Row">{t.description}</div>
                  {Qo(n.teamId, n.outPlayerId, n.outPlayerName, n.location, a)}
                  {Do(n.teamId, n.inPlayerId, n.inPlayerName, n.location, a)}
                </div>
              </div>
            </l.a.Fragment>
          );
        },
        Zo = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Row">{t.description}</div>
                <div className="Events-List-Row Events-List-Minor">
                  <span className="Events-List-Mod Events-List-Row-Group">
                    <Tt id={a.from} type={a.type} />
                  </span>
                  <span className="Events-List-Row-Group">{Pt(a.from)}</span>
                  <ce.b className="Events-List-Row-Group" />
                  <span className="Events-List-Mod Events-List-Row-Group">
                    <Tt id={a.to} type={a.type} />
                  </span>
                  <span className="Events-List-Row-Group">{Pt(a.to)}</span>
                </div>
              </div>
            </l.a.Fragment>
          );
        },
        qo = (a(54), ["title", "titleId"]);
      function Ko() {
        return (Ko =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function _o(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function $o(e, t) {
        var a = e.title,
          n = e.titleId,
          l = _o(e, qo);
        return (
          <svg
            {...Ko(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ho ||
              (Ho = (
                <image
                  id="_02-Feedback"
                  data-name="02-Feedback"
                  x={29}
                  y={29}
                  width={198}
                  height={198}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var es,
        ts = r.forwardRef($o),
        as = (a.p, ["title", "titleId"]);
      function ns() {
        return (ns =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function rs(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ls(e, t) {
        var a = e.title,
          n = e.titleId,
          l = rs(e, as);
        return (
          <svg
            {...ns(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 1e3,
                height: 1e3,
                viewBox: "0 0 1000 1000",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {es || (es = <image x={49} y={39} width={902} height={907} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var is,
        os = r.forwardRef(ls),
        ss = (a.p, ["title", "titleId"]);
      function cs() {
        return (cs =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function us(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ms(e, t) {
        var a = e.title,
          n = e.titleId,
          l = us(e, ss);
        return (
          <svg
            {...cs(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 500,
                height: 500,
                viewBox: "0 0 500 500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {is || (is = <image x={40} y={55} width={420} height={390} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var As = r.forwardRef(ms),
        ds = (a.p, l.a.createContext({ doc: void 0 })),
        fs = function (e) {
          var t = e.children,
            a = Object(r.useState)({ doc: void 0 }),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1];
          return (
            Object(r.useEffect)(function () {
              function e(e) {
                e.temporal && o(e.temporal);
              }
              return (
                v.has(e) || v.subscribe(e),
                function () {
                  v.unsub(e);
                }
              );
            }, []),
            (<ds.Provider value={i}>{t}</ds.Provider>)
          );
        };
      fs.context = ds;
      var hs = fs;
      function gs() {
        var e = Object(r.useContext)(hs.context),
          t = (null === e || void 0 === e ? void 0 : e.doc) ? e.doc.gamma : -1,
          a = bs(t),
          n =
            5 === t
              ? (function () {
                  for (var e = [], t = ["#9578f1", "#e65cc9", "#f4daf1", "#872579", "#f44ec9"], a = 0; a < 250; a++) {
                    var n = Math.floor(6 * Math.random()),
                      r = Math.floor(1e3 * Math.random()),
                      i = Math.floor(500 * Math.random()),
                      o = t[Math.floor(Math.random() * t.length)];
                    e.push(
                      <div
                        className="BigDeal-Glitter-Dot"
                        style={{
                          width: n,
                          height: n,
                          top: i,
                          left: r,
                          background: o,
                          animationDuration: "".concat(Math.floor(5 * Math.random()) + 2, "s"),
                        }}
                      />
                    );
                  }
                  return <l.a.Fragment>{e}</l.a.Fragment>;
                })()
              : null,
          i = e && e.doc ? e.doc.zeta : "";
        return (
          <div className="BigDeal-All">
            {null !== a ? (
              <div className={"BigDeal-Icon " + ps(t)}>
                {n}
                {a}
              </div>
            ) : null}
            <div className="BigDeal-Body">
              <div className={"BigDeal-Message-Style-FullScreen ".concat(vs(t), " ").concat(Es(t))}>{mo(i)}</div>
            </div>
          </div>
        );
      }
      function ps(e) {
        return "BigDeal-Icon-".concat(e);
      }
      function Es(e) {
        return "BigDeal-Message-Size-".concat(e);
      }
      function vs(e) {
        return "BigDeal-Message-Style-".concat(e);
      }
      function bs(e) {
        var t = Object(r.useContext)(M.context).user;
        switch (e) {
          case 0:
            return <_.oc />;
          case 1:
            return <os style={{ filter: t.lightMode ? "invert(1)" : "none" }} />;
          case 2:
            return <div className="BigDeal-Equity" />;
          case 4:
            return <ts />;
          case 5:
            return <As />;
        }
        return null;
      }
      var ws,
        ys = function (e) {
          var t,
            a = e.event,
            n = a.metadata.being ? parseInt(a.metadata.being) : -1;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard Events-List-Desc-Book " + vs(n)}>
                <div className={"Events-List-Category " + ((t = n), "BigDeal-Message-Icon-".concat(t))}>{bs(n)}</div>{" "}
                {mo(a.description)}
              </div>
            </l.a.Fragment>
          );
        },
        Bs = function (e) {
          var t = e.event,
            a = t.metadata,
            n = 172 === t.type,
            r = n ? a.adds : a.removes;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Row">{t.description}</div>
                {r
                  ? r.map(function (e) {
                      return Io(e.mod, e.type, n);
                    })
                  : null}
              </div>
            </l.a.Fragment>
          );
        };
      !(function (e) {
        (e[(e.Batting = 0)] = "Batting"),
          (e[(e.Pitching = 1)] = "Pitching"),
          (e[(e.Defense = 2)] = "Defense"),
          (e[(e.Baserunning = 3)] = "Baserunning"),
          (e[(e.Combined = 4)] = "Combined"),
          (e[(e.Overall = 5)] = "Overall");
      })(ws || (ws = {}));
      function Os(e, t, a) {
        return (
          <div className="Events-List-Row Events-List-Minor">
            <span className={a ? "Events-List-PositiveText" : "Events-List-NegativeText"}>{a ? "+" : "-"}</span>
            <span className="Events-List-Mod Events-List-Row-Group">
              <Tt id={e} type={Ot.Item} />
            </span>
            <span className="Events-List-Row-Group">{Pt(e)}</span>
          </div>
        );
      }
      function Is(e) {
        return TA(5 * e, 1);
      }
      var Ss = function (e) {
          var t = e.event,
            a = t.metadata,
            n = 127 === t.type || 187 === t.type;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                {mo(t.description)}
                {(function (e, t) {
                  if (![127, 128].includes(e.type)) return;
                  var a = 127 === e.type;
                  return (
                    <div className="Events-List-Row Events-List-Minor">
                      <span className={a ? "Events-List-PositiveText" : "Events-List-NegativeText"}>
                        {a ? "+" : "-"}
                      </span>
                      <span className="Events-List-Row-Group">{t.itemName}</span>
                    </div>
                  );
                })(t, a)}
                {(function (e, t) {
                  if (![185, 186, 187, 188].includes(e.type)) return;
                  if (void 0 === t.itemHealthBefore || void 0 === t.itemHealthAfter || void 0 == t.itemDurability)
                    return;
                  if (t.itemHealthBefore === t.itemHealthAfter) return;
                  var a = Math.round(t.itemHealthBefore),
                    n = Math.round(t.itemHealthAfter),
                    r = n > a;
                  return (
                    <div className="Events-List-Row Events-List-Minor-SpaceBetween ">
                      <span className="Events-List-Row Events-List-Minor-SpaceBetween">
                        <span className="Events-List-Row Events-List-Row-Group">
                          {a}
                          {vo(a, t.itemDurability)}
                        </span>
                        <ce.b className="Events-List-Row-Group" />
                        <span
                          className={
                            "Events-List-Row Events-List-Row-Group " +
                            (r ? "Events-List-PositiveText" : "Events-List-NegativeText")
                          }
                        >
                          {n}
                          {vo(n, t.itemDurability)}
                        </span>
                      </span>
                    </div>
                  );
                })(t, a)}
                {(function (e, t) {
                  if (void 0 === e) return;
                  for (var a = [], n = 0; n < e.length; n++) a.push(Os(e[n], 3, t));
                  return a;
                })(a.mods, n)}
                {(function (e) {
                  e.playerItemRatingAfter, e.playerItemRatingBefore;
                  var t = +Math.abs(Is(e.playerItemRatingBefore)).toFixed(2),
                    a = +Math.abs(Is(e.playerItemRatingAfter)).toFixed(2);
                  if (t === a) return;
                  return (
                    <span className="Events-List-Row Events-List-Minor">
                      <span>Overall</span>
                      <span className="Events-List-Row Events-List-Row-Group">
                        <span className="Events-List-Row Events-List-Row-Group">
                          {Is(e.playerRating) + (0 === t ? "" : e.playerItemRatingBefore >= 0 ? " + " : " - ")}
                          <span className={e.playerItemRatingAfter >= 0 ? "Player-Stars-Blue" : "Player-Stars-Red"}>
                            {0 === t ? "" : <l.a.Fragment> {t}</l.a.Fragment>}
                          </span>
                           <re.a />
                        </span>
                        <ce.b className="Events-List-Row-Group" />
                        <span className="Events-List-Row Events-List-Row-Group ">
                          {Is(e.playerRating) + (0 === a ? "" : e.playerItemRatingAfter >= 0 ? " + " : " - ")}
                          <span className={e.playerItemRatingAfter >= 0 ? "Player-Stars-Blue" : "Player-Stars-Red"}>
                            {0 === a ? "" : <l.a.Fragment> {a}</l.a.Fragment>}
                          </span>
                           <re.a />
                        </span>
                      </span>
                    </span>
                  );
                })(a)}
              </div>
            </l.a.Fragment>
          );
        },
        Cs = function (e) {
          var t = e.event;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                {mo(t.description)}
              </div>
            </l.a.Fragment>
          );
        },
        ks = a(12);
      var Ns,
        Ts = function (e) {
          var t,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(r.useState)(!1),
            u = Object(s.a)(o, 2),
            m = u[0],
            d = u[1],
            g = Object(r.useState)(null !== (t = e.nuts) && void 0 !== t ? t : 0),
            p = Object(s.a)(g, 2),
            E = p[0],
            v = p[1],
            b = Object(r.useState)(!1),
            w = Object(s.a)(b, 2),
            y = w[0],
            B = w[1],
            O = Object(ks.useToasts)().addToast,
            I = Object(c.g)();
          Object(r.useEffect)(
            function () {
              var t,
                a,
                n,
                r,
                l = null === (t = e.event.metadata) || void 0 === t ? void 0 : t.redacted;
              v(
                l
                  ? null !== (a = null === (n = e.event.metadata) || void 0 === n ? void 0 : n.scales) && void 0 !== a
                    ? a
                    : 0
                  : null !== (r = e.nuts) && void 0 !== r
                  ? r
                  : 0
              ),
                !0 === e.upnut && B(!1);
            },
            [e]
          );
          var S = (function () {
              var t = Object(h.a)(
                f.a.mark(function t() {
                  var a, r, l;
                  return f.a.wrap(function (t) {
                    for (;;)
                      switch ((t.prev = t.next)) {
                        case 0:
                          if (
                            ((r = null === (a = e.event.metadata) || void 0 === a ? void 0 : a.redacted),
                            (l = r ? ne.RED_HERRING : ne.PEANUTS),
                            !(void 0 === n.snacks[l] || n.snacks[l] < 1))
                          ) {
                            t.next = 6;
                            break;
                          }
                          return (t.next = 5), O("Insufficient ".concat(ne.GetName(l)), { appearance: "error" });
                        case 5:
                          return t.abrupt("return");
                        case 6:
                          if (e.event.id) {
                            t.next = 10;
                            break;
                          }
                          return (t.next = 9), O("Invalid event", { appearance: "error" });
                        case 9:
                          return t.abrupt("return");
                        case 10:
                          return (
                            d(!0),
                            B(!0),
                            (t.next = 14),
                            km(r ? "/api/upScale" : "/api/upNut", JSON.stringify({ eventId: e.event.id }))
                              .then(
                                (function () {
                                  var t = Object(h.a)(
                                    f.a.mark(function t(a) {
                                      var r, o, s, c;
                                      return f.a.wrap(function (t) {
                                        for (;;)
                                          switch ((t.prev = t.next)) {
                                            case 0:
                                              if (!a.ok || !a.status || 200 !== a.status) {
                                                t.next = 16;
                                                break;
                                              }
                                              return (
                                                (r = JSON.parse(JSON.stringify(n.snacks))),
                                                (o = JSON.parse(JSON.stringify(n.snackOrder))),
                                                r[l] - 1 <= 0
                                                  ? (delete r[l],
                                                    o.includes(l) &&
                                                      ((s = o.findIndex(function (e) {
                                                        return e === l;
                                                      })),
                                                      o.splice(s, 1, "E")))
                                                  : (r[l] -= 1),
                                                175 === e.event.type &&
                                                  (r[ne.RED_HERRING] ||
                                                    ((r[ne.RED_HERRING] = 0),
                                                    o.includes("E")
                                                      ? ((c = o.findIndex(function (e) {
                                                          return "E" === e;
                                                        })),
                                                        o.splice(c, 1, ne.RED_HERRING))
                                                      : (o.push(ne.RED_HERRING), n.packSize++)),
                                                  r[ne.RED_HERRING]++),
                                                (n.snacks = r),
                                                (n.snackOrder = o),
                                                i(Object(C.a)({}, n)),
                                                (t.t0 = O),
                                                (t.next = 11),
                                                a.json()
                                              );
                                            case 11:
                                              (t.t1 = t.sent.message),
                                                (t.t2 = { appearance: "warning" }),
                                                (0, t.t0)(t.t1, t.t2),
                                                (t.next = 17);
                                              break;
                                            case 16:
                                              a.json().then(function (e) {
                                                O(e.error || "Error", { appearance: "error" }), d(!1), B(!1);
                                              });
                                            case 17:
                                            case "end":
                                              return t.stop();
                                          }
                                      }, t);
                                    })
                                  );
                                  return function (e) {
                                    return t.apply(this, arguments);
                                  };
                                })()
                              )
                              .finally(function () {
                                d(!0);
                              })
                          );
                        case 14:
                        case "end":
                          return t.stop();
                      }
                  }, t);
                })
              );
              return function () {
                return t.apply(this, arguments);
              };
            })(),
            k = <mn className="Events-Feed-Peanut" />,
            N = e.event.metadata && e.event.metadata.redacted,
            T = "";
          175 === e.event.type
            ? ((k = <mn className="Events-Feed-Peanut Events-Feed-Peanut-Special" />), (T = "-Special"))
            : N && ((k = <Wr className="Events-Feed-Peanut" />), (T = "-Herring"));
          var x = (function (e) {
            return e / 1e6 > 10
              ? Math.floor(e / 1e6)
                  .toFixed(0)
                  .toString() + "m"
              : e / 1e6 > 1
              ? Math.floor(e / 1e6)
                  .toFixed(1)
                  .toString() + "m"
              : e / 1e3 > 10
              ? Math.floor(e / 1e3)
                  .toFixed(0)
                  .toString() + "k"
              : e / 1e3 > 1
              ? Math.floor(e / 1e3)
                  .toFixed(1)
                  .toString() + "k"
              : e.toString();
          })((null !== E && void 0 !== E ? E : 0) + (y ? 1 : 0));
          return !0 === e.upnut ? (
            <div className="Events-Feed-Item">
              <span className="Events-Feed-Num">{x}</span>
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="tooltip-stadium">
                    <strong>You have {N ? "Upscaled" : "Upshelled"} this event.</strong>
                  </St.a>
                }
              >
                <div
                  className={"Events-Feed Events-Feed-PrevLiked Events-Feed".concat(T, "-PrevLiked")}
                  aria-label={"You ".concat(N ? "Upscaled" : "Upshelled", " this.")}
                >
                  {k}
                </div>
              </Ct.a>
            </div>
          ) : m ? (
            <div className="Events-Feed-Item">
              <span className="Events-Feed-Num">{x}</span>
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="tooltip-stadium">
                    <strong>You have {N ? "Upscaled" : "Upshelled"} this event.</strong>
                  </St.a>
                }
              >
                <div
                  className={"Events-Feed Events-Feed-Liked Events-Feed".concat(T, "-Liked")}
                  aria-label="You Upshelled this."
                >
                  {k}
                </div>
              </Ct.a>
            </div>
          ) : void 0 === n.snacks[N ? ne.RED_HERRING : ne.PEANUTS] ||
            0 === n.snacks[N ? ne.RED_HERRING : ne.PEANUTS] ? (
            <div className="Events-Feed-Item">
              <span className="Events-Feed-Num">{x}</span>
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="tooltip-stadium">
                    <strong>No {N ? "Pickled Herring" : "Peanuts"}</strong>
                  </St.a>
                }
              >
                <div
                  className="Events-Feed Events-Feed-Disabled"
                  aria-label={""
                    .concat(N ? "Upscale" : "Upshell", " this Event. You have no ")
                    .concat(N ? "Pickled Herring" : "Peanuts", ".")}
                  onClick={function () {
                    return N
                      ? void O("You have no Pickled Herring.", { appearance: "error" })
                      : void O("You have no Peanuts.", { appearance: "error" });
                  }}
                >
                  <div className="Events-Feed-Disabled-Line" />
                  {k}
                </div>
              </Ct.a>
            </div>
          ) : (
            <div className="Events-Feed-Item">
              <span className="Events-Feed-Num">{x}</span>
              {n.verified ? (
                <div
                  className={"Events-Feed Events-Feed-NotLiked Events-Feed".concat(T, "-NotLiked")}
                  aria-label={"".concat(N ? "Upscale" : "Upshell", " this Event.")}
                  role="button"
                  onClick={function () {
                    return S();
                  }}
                >
                  {k}
                </div>
              ) : (
                <A
                  background={I}
                  className={"Events-Feed Events-Feed-NotLiked Events-Feed".concat(T, "-NotLiked")}
                  aria-label={"".concat(N ? "Upscale" : "Upshell", " this Event.")}
                  path="/send-verification-email"
                >
                  {k}
                </A>
              )}
            </div>
          );
        },
        xs = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Row">{t.description}</div>
                {Io("INVERTED", 0, !0)}
                {Uo(a)}
              </div>
            </l.a.Fragment>
          );
        },
        Ps = (a(39), a(185), a(121));
      !(function (e) {
        e[(e.GENERIC = 1)] = "GENERIC";
      })(Ns || (Ns = {}));
      var Ms = function (e) {
        var t = Object(c.f)(),
          a = Object(c.g)(),
          n = (Object(r.useContext)(M.context).user, a.state && a.state.background, e.isModal),
          i = e.className,
          o = e.children,
          s = e.dismissable,
          u = e.style,
          m = Object(r.useRef)(null),
          A = function () {
            document.body.classList.remove("noscroll"), t.goBack();
          };
        Object(r.useEffect)(function () {
          n && document.body.classList.add("noscroll");
          var e = function (e) {
            27 === e.keyCode && n && A();
          };
          return (
            window.addEventListener("keydown", e),
            function () {
              window.removeEventListener("keydown", e), document.body.classList.remove("noscroll");
            }
          );
        }, []);
        var d = Object(Ps.b)({ opacity: 1, from: { opacity: 0 } }),
          f = "Modal";
        switch (u) {
          case Ns.GENERIC:
            f += " Modal--Generic";
        }
        var h = (
          <Ps.a.div
            style={d}
            className={f + (n ? "" : " Modal--Static") + (i ? " ".concat(i) : "")}
            aria-hidden="false"
            role="dialogue"
            ref={m}
            aria-modal="true"
          >
            {s && n && (
              <button
                className="Modal-Close"
                aria-label="Close button."
                onClick={function () {
                  return A();
                }}
              >
                <ee.m />
              </button>
            )}
            {o}
          </Ps.a.div>
        );
        if (n) {
          return (
            <div
              className="Modal-Background"
              onClick={function (e) {
                !s || (m && m.current && m.current.contains(e.target)) || A();
              }}
            >
              {h}
            </div>
          );
        }
        return h;
      };
      Ms.defaultProps = { dismissable: !0, style: Ns.GENERIC };
      var Ls,
        Rs,
        Ds,
        Fs = Ms,
        Qs =
          (a(186),
          function () {
            return (
              <div className="LoadingSpinner-Inline">
                <ee.b />
              </div>
            );
          }),
        js = function () {
          return <div className="LoadingSpinner">{100 * Math.random() < 99 ? <ee.b /> : <_.oc />}</div>;
        },
        Vs = a(9),
        Ws = a(149),
        Us = a(264),
        Gs = a(263);
      function Hs(e) {
        switch (e) {
          case Rs.Black:
            return "Black";
          case Rs.LightAndSweet:
            return "Light & Sweet";
          case Rs.Macchiato:
            return "Macchiato";
          case Rs.CreamAndSugar:
            return "Cream & Sugar";
          case Rs.ColdBrew:
            return "Cold Brew";
          case Rs.FlatWhite:
            return "Flat White";
          case Rs.Americano:
            return "Americano";
          case Rs.Espresso:
            return "Espresso";
          case Rs.Foam:
            return "Heavy Foam";
          case Rs.Latte:
            return "Latte";
          case Rs.Decaf:
            return "Decaf";
          case Rs.MilkSubstitute:
            return "Milk Substitute";
          case Rs.PlentyOfSugar:
            return "Plenty of Sugar";
          case Rs.Anything:
            return "Anything";
        }
        return "Coffee?";
      }
      !(function (e) {
        (e[(e.SingleA = 0)] = "SingleA"),
          (e[(e.TripleA = 1)] = "TripleA"),
          (e[(e.DoubleA = 2)] = "DoubleA"),
          (e[(e.Acid = 3)] = "Acid"),
          (e[(e.Base = 4)] = "Base"),
          (e[(e.Oh = 5)] = "Oh"),
          (e[(e.OhNo = 6)] = "OhNo"),
          (e[(e.Water = 7)] = "Water"),
          (e[(e.Electric = 8)] = "Electric"),
          (e[(e.Love = 9)] = "Love"),
          (e[(e.Fire = 10)] = "Fire"),
          (e[(e.Psychic = 11)] = "Psychic"),
          (e[(e.Grass = 12)] = "Grass");
      })(Ls || (Ls = {})),
        (function (e) {
          (e[(e.Black = 0)] = "Black"),
            (e[(e.LightAndSweet = 1)] = "LightAndSweet"),
            (e[(e.Macchiato = 2)] = "Macchiato"),
            (e[(e.CreamAndSugar = 3)] = "CreamAndSugar"),
            (e[(e.ColdBrew = 4)] = "ColdBrew"),
            (e[(e.FlatWhite = 5)] = "FlatWhite"),
            (e[(e.Americano = 6)] = "Americano"),
            (e[(e.Espresso = 7)] = "Espresso"),
            (e[(e.Foam = 8)] = "Foam"),
            (e[(e.Latte = 9)] = "Latte"),
            (e[(e.Decaf = 10)] = "Decaf"),
            (e[(e.MilkSubstitute = 11)] = "MilkSubstitute"),
            (e[(e.PlentyOfSugar = 12)] = "PlentyOfSugar"),
            (e[(e.Anything = 13)] = "Anything");
        })(Rs || (Rs = {}));
      var Ys = ["title", "titleId"];
      function zs() {
        return (zs =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Xs(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Js(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Xs(e, Ys);
        return (
          <svg
            {...zs(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Ds || (Ds = <image id="idol" x={58} y={16} width={140} height={224} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Zs,
        qs = r.forwardRef(Js),
        Ks = (a.p, ["title", "titleId"]);
      function _s() {
        return (_s =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function $s(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ec(e, t) {
        var a = e.title,
          n = e.titleId,
          l = $s(e, Ks);
        return (
          <svg
            {..._s(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Zs || (Zs = <image id="coins" x={15.5} y={51} width={225} height={154} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var tc = r.forwardRef(ec),
        ac = (a.p, { player: void 0, team: void 0, tourneyTeam: void 0 });
      function nc(e) {
        var t = PA(Object(r.useContext)(S.context).sim, "SIM_EVOLUTION_CONCEPTUALIZED") && e >= 1,
          a = <l.a.Fragment>Base</l.a.Fragment>;
        switch (e) {
          case 0:
            a = <l.a.Fragment>Base</l.a.Fragment>;
            break;
          case 1:
            a = <span className={t ? "Player-Gilded" : ""}>Base 1</span>;
            break;
          case 2:
            a = <span className={t ? "Player-Gilded" : ""}>Base 2</span>;
            break;
          case 3:
            a = <span className={t ? "Player-Gilded" : ""}>Base 3</span>;
            break;
          case 4:
            a = <l.a.Fragment>Home</l.a.Fragment>;
        }
        return t ? (
          <Ct.a
            overlay={
              <St.a id="tooltip" placement="top">
                <strong>An Evolved player's star ratings cannot fall below their Base level.</strong>
              </St.a>
            }
          >
            <div className="Player-Info-Line-Body">{a}</div>
          </Ct.a>
        ) : (
          <div className="Player-Info-Line-Body">{a}</div>
        );
      }
      function rc(e, t, a) {
        return t.evolution < a
          ? ((n = a),
            (
              <l.a.Fragment>
                <li className="Player-Info-Items-Box Player-Info-Items-Box-Locked">
                  <div className="Player-Info-Items-Number">{n + 1}</div>
                  <div className="Player-Info-Items-Box-Inner">
                    <$.c />
                  </div>
                </li>
              </l.a.Fragment>
            ))
          : void 0 !== t.items[a]
          ? (function (e, t, a, n) {
              var r = (
                <div className="Player-Info-Items-Box-Inner">
                  {bo(t.root.name)}
                  <div className="Player-Info-Items-Name">{t.name}</div>
                  <div style={{ maxWidth: "100px" }}>{vo(t.health, t.durability)}</div>
                </div>
              );
              return -1 === t.durability ? (
                <Ct.a
                  placement="top"
                  overlay={
                    <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                      <strong>Legendary Items cannot break or be dropped</strong>
                    </St.a>
                  }
                >
                  <li>
                    <A
                      background={e}
                      path={"/item/".concat(t.id)}
                      params={{ item: t, player: a }}
                      className="Player-Info-Items-Box Player-Info-Items-Box-Legendary"
                    >
                      <div className="Player-Info-Items-Number">
                        <$.c />
                      </div>
                      {r}
                    </A>
                  </li>
                </Ct.a>
              ) : (
                <li>
                  <A
                    background={e}
                    path={"/item/".concat(t.id)}
                    params={{ item: t, player: a }}
                    className="Player-Info-Items-Box"
                  >
                    <div className="Player-Info-Items-Number">{n + 1}</div>
                    {r}
                  </A>
                </li>
              );
            })(e, t.items[a], t, a)
          : (function (e) {
              return (
                <li className="Player-Info-Items-Box Player-Info-Items-Box-Empty">
                  <div className="Player-Info-Items-Number">{e + 1}</div>
                </li>
              );
            })(a);
        var n;
      }
      var lc = function (e) {
          var t = 100 * e.value,
            a = e.color;
          void 0 === a && (a = "#aaa");
          var n = Math.floor(e.value) % 2 === 0;
          return t < 100 ? (
            <l.a.Fragment>
              <div className="Player-Info-Line-Body">
                <div className="Team-Stadium-Progress-Bar progress">
                  <div
                    className="progress-bar"
                    role="progressbar"
                    aria-valuenow={t}
                    aria-valuemin={0}
                    aria-valuemax={100}
                    style={{ backgroundColor: e.color, width: "".concat(t, "%"), opacity: 0 === e.value ? 0 : 1 }}
                  />
                </div>
              </div>
              <div className="Player-Stars-Num Player-Info-Line-Advanced-Num">{e.value.toFixed(2)}</div>
            </l.a.Fragment>
          ) : n ? (
            <l.a.Fragment>
              <div className="Player-Info-Line-Body">
                <div className="Team-Stadium-Progress-Bar progress">
                  <div
                    className="progress-bar"
                    role="progressbar"
                    aria-valuenow={t}
                    aria-valuemin={0}
                    aria-valuemax={100}
                    style={{ backgroundColor: a, width: "".concat(t - 100, "%"), opacity: 0 === e.value ? 0 : 1 }}
                  />
                  <div
                    className="progress-bar"
                    role="progressbar"
                    aria-valuenow={t}
                    aria-valuemin={0}
                    aria-valuemax={100}
                    style={{ backgroundColor: e.secondColor, width: "100%", opacity: 0 === e.value ? 0 : 1 }}
                  />
                </div>
              </div>
              <div className="Player-Stars-Num Player-Info-Line-Advanced-Num">{e.value.toFixed(2)}</div>
            </l.a.Fragment>
          ) : (
            <l.a.Fragment>
              <div className="Player-Info-Line-Body">
                <div className="Team-Stadium-Progress-Bar progress">
                  <div
                    className="progress-bar"
                    role="progressbar"
                    aria-valuenow={t}
                    aria-valuemin={0}
                    aria-valuemax={100}
                    style={{
                      backgroundColor: e.secondColor,
                      width: "".concat(t - 100, "%"),
                      opacity: 0 === e.value ? 0 : 1,
                    }}
                  />
                  <div
                    className="progress-bar"
                    role="progressbar"
                    aria-valuenow={t}
                    aria-valuemin={0}
                    aria-valuemax={100}
                    style={{ backgroundColor: e.color, width: "100%", opacity: 0 === e.value ? 0 : 1 }}
                  />
                </div>
              </div>
              <div className="Player-Stars-Num Player-Info-Line-Advanced-Num">{e.value.toFixed(2)}</div>
            </l.a.Fragment>
          );
        },
        ic = function (e) {
          var t,
            a,
            n,
            i,
            o,
            u,
            m,
            d,
            g,
            p,
            E,
            v,
            b,
            w,
            y,
            B,
            O,
            I,
            k,
            N,
            T,
            x,
            P,
            L,
            R,
            Q,
            j,
            V,
            W,
            U,
            G,
            H,
            Y,
            z,
            X,
            J,
            Z,
            K,
            _,
            ee,
            te,
            ae,
            ne,
            re,
            ie,
            oe,
            se,
            ce,
            ue,
            me,
            Ae,
            de,
            fe,
            he,
            ge,
            pe,
            Ee,
            ve,
            be,
            we = Object(c.h)().id,
            ye = Object(r.useContext)(S.context),
            Be = Object(r.useContext)(xo.context),
            Oe = Object(r.useState)(ac),
            Ie = Object(s.a)(Oe, 2),
            Se = Ie[0],
            Ce = Ie[1],
            ke = Object(ks.useToasts)().addToast,
            Ne = Object(r.useContext)(M.context),
            Te = Ne.user,
            xe = Ne.setUser,
            Pe = Object(r.useState)(!1),
            Me = Object(s.a)(Pe, 2),
            Le = Me[0],
            Re = (Me[1], Object(r.useState)(1)),
            De = Object(s.a)(Re, 2),
            Fe = (De[0], De[1], Object(c.g)());
          function Qe(e) {
            if (null !== e)
              return Be.teams.find(function (t) {
                return t.id === e;
              });
          }
          Object(r.useEffect)(
            function () {
              (function () {
                var e = Object(h.a)(
                  f.a.mark(function e() {
                    var t, a, n, r;
                    return f.a.wrap(function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), Ym([we]);
                          case 2:
                            void 0 !== (t = e.sent) &&
                              1 == t.length &&
                              ((a = t[0]),
                              (n = Qe(a.leagueTeamId)),
                              (r = Qe(a.tournamentTeamId)),
                              Ce({ player: a, team: n, tourneyTeam: r }));
                          case 4:
                          case "end":
                            return e.stop();
                        }
                    }, e);
                  })
                );
                return function () {
                  return e.apply(this, arguments);
                };
              })()();
            },
            [Be]
          );
          var je,
            Ve =
              PA(null === ye || void 0 === ye ? void 0 : ye.sim, "UNLOCKED_HALL") &&
              void 0 !== (null === Se || void 0 === Se ? void 0 : Se.player) &&
              Se.player.deceased ? (
                <div className={"ModalItem-Status" + (Te.lightMode ? " ModalItem-Status-LightMode" : "")}>
                  <div className="ModalItem-Status-Line">
                    <div className={"Player-Deceased-Icon" + (Te.lightMode ? " Player-Deceased-Icon-LightMode" : "")} />
                    <div className="ModalItem-Status-Name">Deceased</div>
                  </div>
                  {void 0 !== Te.snacks.Peanuts ? (
                    Le ? (
                      <Qs />
                    ) : (
                      <A
                        className="ModalItem-Button-Tribute"
                        background={Fe}
                        path={
                          Te.verified
                            ? "/tribute/".concat(null === Se || void 0 === Se ? void 0 : Se.player.id)
                            : "/send-verification-email"
                        }
                      >
                        <mn className="ModalItem-Icon" /> Pay Tribute
                      </A>
                    )
                  ) : (
                    <Ct.a
                      placement="top"
                      overlay={
                        <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                          <strong>You do not have any peanuts.</strong>
                        </St.a>
                      }
                    >
                      <span className="d-inline-block">
                        <Vs.a
                          disabled={!0}
                          style={{ pointerEvents: "none" }}
                          className="ModalItem-Button-Tribute"
                          variant="dark"
                        >
                          <mn className="ModalItem-Icon" /> Pay Tribute
                        </Vs.a>
                      </span>
                    </Ct.a>
                  )}
                </div>
              ) : null,
            We =
              void 0 !== (null === Se || void 0 === Se ? void 0 : Se.player) &&
              (Se.player.permAttr.length > 0 ||
                Se.player.seasAttr.length > 0 ||
                Se.player.weekAttr.length > 0 ||
                Se.player.gameAttr.length > 0 ||
                Se.player.itemAttr.length > 0) ? (
                <div className={"ModalItem-Attributes" + (Te.lightMode ? " ModalItem-Attributes-LightMode" : "")}>
                  <div className={"AttributeBar" + (Te.lightMode ? " AttributeBar-LightMode" : "")}>
                    {yo(Se.player, It.Player)}
                  </div>
                </div>
              ) : null,
            Ue = (function () {
              var e = Object(h.a)(
                f.a.mark(function e(t) {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if ((t.preventDefault(), !Se || !Se.player || Se.player.id === Te.idol)) {
                            e.next = 10;
                            break;
                          }
                          if (!(Te.coins < 200 && "" !== Te.idol && null !== Te.idol)) {
                            e.next = 6;
                            break;
                          }
                          ke("Not enough coins", { appearance: "error" }), (e.next = 8);
                          break;
                        case 6:
                          return (
                            (e.next = 8),
                            km(
                              "/api/chooseIdol",
                              JSON.stringify({ playerId: Se.player.id, playerName: Se.player.name })
                            ).then(
                              (function () {
                                var e = Object(h.a)(
                                  f.a.mark(function e(t) {
                                    return f.a.wrap(function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            t.ok && t.status && 200 === t.status && Se && Se.player
                                              ? (!1,
                                                "" === Te.idol || null === Te.idol
                                                  ? ((Te.idol = Se.player.id), xe(Object(C.a)({}, Te)), !0)
                                                  : Te.coins >= 200 &&
                                                    ((Te.coins -= 200),
                                                    (Te.idol = Se.player.id),
                                                    xe(Object(C.a)({}, Te)),
                                                    !0),
                                                ke(Se.player.name + " is now your idol.", { appearance: "success" }))
                                              : t.json().then(function (e) {
                                                  ke(e.message || "Error", { appearance: "error" });
                                                });
                                          case 1:
                                          case "end":
                                            return e.stop();
                                        }
                                    }, e);
                                  })
                                );
                                return function (t) {
                                  return e.apply(this, arguments);
                                };
                              })()
                            )
                          );
                        case 8:
                          e.next = 11;
                          break;
                        case 10:
                          ke("Insufficient coins!", { appearance: "error" });
                        case 11:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function (t) {
                return e.apply(this, arguments);
              };
            })(),
            Ge =
              MA(null === Se || void 0 === Se ? void 0 : Se.player, "RETIRED") ||
              MA(null === Se || void 0 === Se ? void 0 : Se.player, "COFFEE_EXIT"),
            He = !1;
          ((null === (t = ye.sim) || void 0 === t ? void 0 : t.phase) !== D.Earlseason &&
            (null === (a = ye.sim) || void 0 === a ? void 0 : a.phase) !== D.Midseason &&
            (null === (n = ye.sim) || void 0 === n ? void 0 : n.phase) !== D.Lateseason &&
            (null === (i = ye.sim) || void 0 === i ? void 0 : i.phase) !== D.EarlyPostseason &&
            (null === (o = ye.sim) || void 0 === o ? void 0 : o.phase) !== D.Postseason) ||
            null === ye ||
            void 0 === ye ||
            null === (je = ye.schedule) ||
            void 0 === je ||
            je.forEach(function (e) {
              e.gameComplete || (He = !0);
            });
          var Ye,
            ze =
              MA(null === Se || void 0 === Se ? void 0 : Se.player, "NON_IDOLIZED") ||
              MA(null === Se || void 0 === Se ? void 0 : Se.player, "COFFEE_EXIT") ||
              MA(null === Se || void 0 === Se ? void 0 : Se.player, "STATIC") ||
              MA(null === Se || void 0 === Se ? void 0 : Se.player, "LEGENDARY"),
            Xe = Te.idol,
            Je =
              !Ge && (null === Se || void 0 === Se ? void 0 : Se.player) ? (
                <div className="Player-Header-Bottom">
                  <div className="Player-Teams-Section">
                    <div className="Player-Team-Line">
                      <div
                        className="Player-Team-Logo"
                        style={{ background: void 0 !== Se.team ? Se.team.mainColor : "#999999" }}
                      >
                        <div className="Player-Team-Emoji">{DA(Se.team)}</div>
                      </div>
                      <div className="Player-Team-Name">{void 0 !== Se.team ? Se.team.fullName : "Null Team"}</div>
                    </div>
                  </div>
                  {PA(ye.sim, "UNLOCKED_IDOLS") ? (
                    <Ws.a className="ModalItem-Button">
                      {(He || ze) && Xe !== Se.player.id ? (
                        <div className="ModalItem-Tooltip">
                          <Ct.a
                            placement="top"
                            overlay={
                              <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                                {He
                                  ? "You can't choose an Idol while games are active."
                                  : "This player cannot be Idolized."}
                              </St.a>
                            }
                          >
                            <span className="d-inline-block">
                              <Vs.a
                                disabled={!0}
                                style={{ pointerEvents: "none" }}
                                className="ModalItem-Button-Idol"
                                variant="dark"
                              >
                                {"" === Xe || null === Xe ? (
                                  <l.a.Fragment>
                                    <qs className="ModalItem-Icon" /> Choose Idol
                                  </l.a.Fragment>
                                ) : (
                                  <l.a.Fragment>
                                    <tc className="ModalItem-Icon" /> 200 New Idol
                                  </l.a.Fragment>
                                )}{" "}
                              </Vs.a>
                            </span>
                          </Ct.a>
                        </div>
                      ) : Xe === Se.player.id ? (
                        <div className="ModalItem-Button-Idol-Current">
                          <qs className="ModalItem-Icon" /> Your Idol
                        </div>
                      ) : (
                        <q.a className="ModalItem-Button-Form" onSubmit={Ue}>
                          <Vs.a className="ModalItem-Button-Idol" type="submit" variant="success">
                            {"" === Xe || null === Xe ? (
                              <l.a.Fragment>
                                <qs className="ModalItem-Icon" /> Choose Idol
                              </l.a.Fragment>
                            ) : (
                              <l.a.Fragment>
                                <tc className="ModalItem-Icon" /> 200 New Idol
                              </l.a.Fragment>
                            )}{" "}
                          </Vs.a>
                        </q.a>
                      )}
                    </Ws.a>
                  ) : (
                    <div />
                  )}
                </div>
              ) : null,
            Ze = (null === Se || void 0 === Se ? void 0 : Se.player) ? (
              <ul className="Player-Info-Stats">
                {Ge ? null : (
                  <l.a.Fragment>
                    <li className="Player-Info-Line">
                      <div className="Player-Info-Line-Header">Current Vibe</div>
                      {(function (e, t) {
                        var a = Object(r.useContext)(M.context).user,
                          n = (function (e, t) {
                            var a = 6 + Math.round(10 * e.buoyancy),
                              n = Math.PI * ((2 / a) * t + 0.5);
                            return (
                              0.5 * (e.pressurization + e.cinnamon) * Math.sin(n) -
                              0.5 * e.pressurization +
                              0.5 * e.cinnamon
                            );
                          })(e, t),
                          i = a.lightMode ? "-LightMode" : "";
                        if (e.permAttr.includes("SCATTERED")) return <span className="sr-only" aria-label="No Vibes" />;
                        if (n > 0.8)
                          return (
                            <span className={"Player-VibeLine ModalItem-Vibe-MostExcellent".concat(i)}>
                              <span>
                                <le.c className="Player-VibeLine-Arrow" role="img" aria-label="Green Up Arrow" />
                                <le.c className="Player-VibeLine-Arrow" role="img" aria-label="Green Up Arrow" />
                                <le.c className="Player-VibeLine-Arrow" role="img" aria-label="Green Up Arrow" />
                                <div className="Player-VibeLine-Text">Most Excellent</div>
                              </span>
                            </span>
                          );
                        if (n > 0.4)
                          return (
                            <div className={"Player-VibeLine ModalItem-Vibe-Excellent".concat(i)}>
                              <le.c className="Player-VibeLine-Arrow" role="img" aria-label="Green Up Arrow" />
                              <le.c className="Player-VibeLine-Arrow" role="img" aria-label="Green Up Arrow" />
                              Excellent
                            </div>
                          );
                        if (n > 0.1)
                          return (
                            <span className={"Player-VibeLine ModalItem-Vibe-Quality".concat(i)}>
                              <span>
                                <le.c className="Player-VibeLine-Arrow" role="img" aria-label="Green Up Arrow" />
                                <div className="Player-VibeLine-Text">Quality</div>
                              </span>
                            </span>
                          );
                        if (n > -0.1)
                          return (
                            <span className={"Player-VibeLine ModalItem-Vibe-Neutral".concat(i)}>
                              <span>
                                <le.a
                                  className="Player-VibeLine-Arrow"
                                  role="img"
                                  aria-label="Gray Arrow Pointing Left and Right"
                                />
                                <div className="Player-VibeLine-Text">Neutral</div>
                              </span>
                            </span>
                          );
                        if (n > -0.4)
                          return (
                            <span className={"Player-VibeLine ModalItem-Vibe-LessThanIdeal".concat(i)}>
                              <span>
                                <le.b className="Player-VibeLine-Arrow" role="img" aria-label="Red Down Arrow" />
                                <div className="Player-VibeLine-Text">Less Than Ideal</div>
                              </span>
                            </span>
                          );
                        if (n > -0.8)
                          return (
                            <span className={"Player-VibeLine ModalItem-Vibe-FarLessThanIdeal".concat(i)}>
                              <span>
                                <le.b className="Player-VibeLine-Arrow" role="img" aria-label="Red Down Arrow" />
                                <le.b className="Player-VibeLine-Arrow" role="img" aria-label="Red Down Arrow" />
                                <div className="Player-VibeLine-Text">Far Less Than Ideal</div>
                              </span>
                            </span>
                          );
                        return (
                          <span className={"Player-VibeLine ModalItem-Vibe-Terrible".concat(i)}>
                            <span>
                              <le.b className="Player-VibeLine-Arrow" role="img" aria-label="Red Down Arrow" />
                              <le.b className="Player-VibeLine-Arrow" role="img" aria-label="Red Down Arrow" />
                              <le.b className="Player-VibeLine-Arrow" role="img" aria-label="Red Down Arrow" />
                              <div className="Player-VibeLine-Text">Honestly Terrible</div>
                            </span>
                          </span>
                        );
                      })(
                        Se.player,
                        void 0 !== (null === (u = ye.sim) || void 0 === u ? void 0 : u.day) ? ye.sim.day : -1
                      )}
                    </li>
                    <li className="Player-Info-Line">
                      <div className="Player-Info-Line-Header">Batting</div>
                      <div className="ModalItem-Ratings">{XA(Se.player)}</div>
                    </li>
                    <li className="Player-Info-Line">
                      <div className="Player-Info-Line-Header">Pitching</div>
                      <div className="ModalItem-Ratings">{JA(Se.player)}</div>
                    </li>
                    <li className="Player-Info-Line">
                      <div className="Player-Info-Line-Header">Baserunning</div>
                      <div className="ModalItem-Ratings">
                        {(function (e) {
                          var t,
                            a = (function (e) {
                              return e.baserunningRating;
                            })(e),
                            n = null !== (t = e.evolution) && void 0 !== t ? t : 0,
                            r = ZA(0, e.items);
                          return fo(a, n, r);
                        })(Se.player)}
                      </div>
                    </li>
                    <li className="Player-Info-Line">
                      <div className="Player-Info-Line-Header">Defense</div>
                      <div className="ModalItem-Ratings">
                        {(function (e) {
                          var t,
                            a = (function (e) {
                              return e.defenseRating;
                            })(e),
                            n = null !== (t = e.evolution) && void 0 !== t ? t : 0,
                            r = ZA(3, e.items);
                          return fo(a, n, r);
                        })(Se.player)}
                      </div>
                    </li>
                  </l.a.Fragment>
                )}
                <li className="Player-Info-Line">
                  <div className="Player-Info-Line-Header">Evolution</div>
                  <div className="Player-Info-Line-Body">
                    {void 0 === (Ye = null === Se || void 0 === Se ? void 0 : Se.player) ? null : nc(Ye.evolution)}
                  </div>
                </li>
                <li className="Player-Info-Line">
                  <div className="Player-Info-Line-Header">Peanut Allergy</div>
                  <div className="Player-Info-Line-Body">{Se.player.peanutAllergy ? "Yes" : "No"}</div>
                </li>
                <li className="Player-Info-Line">
                  <div className="Player-Info-Line-Header">Pregame Ritual</div>
                  <div className="Player-Info-Line-Body">{Se.player.ritual}</div>
                </li>
                <li className="Player-Info-Line">
                  <div className="Player-Info-Line-Header">Coffee Style</div>
                  <div className="Player-Info-Line-Body">{Hs(Se.player.coffee)}</div>
                </li>
                <li className="Player-Info-Line">
                  <div className="Player-Info-Line-Header">Blood Type</div>
                  <div className="Player-Info-Line-Body">
                    {(function (e) {
                      switch (e) {
                        case Ls.SingleA:
                          return "A";
                        case Ls.DoubleA:
                          return "AA";
                        case Ls.TripleA:
                          return "AAA";
                        case Ls.Acid:
                          return "Acidic";
                        case Ls.Base:
                          return "Basic";
                        case Ls.Oh:
                          return "O";
                        case Ls.OhNo:
                          return "O No";
                        case Ls.Water:
                          return "H\u2082O";
                        case Ls.Electric:
                          return "Electric";
                        case Ls.Love:
                          return "Love";
                        case Ls.Fire:
                          return "Fire";
                        case Ls.Psychic:
                          return "Psychic";
                        case Ls.Grass:
                          return "Grass";
                      }
                      return "Blood?";
                    })(Se.player.blood)}
                  </div>
                </li>
                <li className="Player-Info-Line">
                  <div className="Player-Info-Line-Header">Fate</div>
                  <div className="Player-Info-Line-Body">{Se.player.fate}</div>
                </li>
                <li className="Player-Info-Line">
                  <div className="Player-Info-Line-Header">
                    {MA(null === Se || void 0 === Se ? void 0 : Se.player, "RETIRED")
                      ? "Soulsong"
                      : MA(null === Se || void 0 === Se ? void 0 : Se.player, "REPLICA")
                      ? "Serial"
                      : "Soulscream"}
                  </div>
                  {(function (e) {
                    for (
                      var t = MA(e, "RETIRED"),
                        a = MA(e, "REPLICA"),
                        n = MA(e, "NEGATIVE"),
                        r = "",
                        i = ["A", "E", "I", "O", "U", "X", "H", "A", "E", "I"],
                        o = [e.pressurization, e.divinity, e.tragicness, e.shakespearianism, e.ruthlessness],
                        s = Math.min(e.soul, 300),
                        c = 0;
                      c < s;
                      c++
                    )
                      for (var u = 0; u < 11; u++) {
                        var m = 1 / Math.pow(10, c),
                          A = o[u % o.length] % m,
                          d = Math.floor((A / m) * 10);
                        r += a && !t ? d : i[d];
                      }
                    return (
                      <div className="Player-Soulscream">
                        <div
                          className={
                            (t
                              ? "Player-Soulscream-Released"
                              : "Player-Soulscream-Body" + (a ? " Player-Soulscream-Replica" : "")) +
                            (n ? " Player-Soulscream-Negative" : "")
                          }
                        >
                          {r}
                          {s < e.soul ? "... (CONT. FOR ".concat(e.soul - s, " SOUL)") : ""}
                        </div>
                      </div>
                    );
                  })(Se.player)}
                </li>
              </ul>
            ) : null,
            qe =
              (null === Se || void 0 === Se ? void 0 : Se.player) && PA(ye.sim, "SIM_ITEM_SYSTEM") ? (
                <div className="Player-Info-Items-Wrapper">
                  <div className="Player-Info-Items">
                    {(function (e, t) {
                      var a = [];
                      return a.push(rc(e, t, 2)), a.push(rc(e, t, 1)), a.push(rc(e, t, 3)), a.push(rc(e, t, 0)), a;
                    })(Fe, null === Se || void 0 === Se ? void 0 : Se.player)}
                  </div>
                </div>
              ) : null,
            Ke =
              void 0 === (null === Se || void 0 === Se ? void 0 : Se.player) ? (
                <js />
              ) : (
                <l.a.Fragment>
                  <div className={"ModalItem-Info" + (Te.lightMode ? " ModalItem-Info-LightMode" : "")}>
                    <div className="Player-Header">
                      <h2 className="ModalItem-Name">
                        {Se.player.permAttr.includes("SCATTERED") ? go(Se.player.name) : Se.player.name}
                      </h2>
                      {Je}
                    </div>
                  </div>
                  {Ve}
                  <Us.a.Container id="ModalTabs-Container" defaultActiveKey="Interview">
                    <Gs.a variant="tabs" className={"ModalTabs" + (Te.lightMode ? " ModalTabs-LightMode" : "")}>
                      <Gs.a.Item>
                        <Gs.a.Link eventKey="Interview">Info</Gs.a.Link>
                      </Gs.a.Item>
                      <Gs.a.Item>
                        {PA(ye.sim, "SIM_ITEM_SYSTEM") ? (
                          <Gs.a.Link eventKey="Items">Items</Gs.a.Link>
                        ) : (
                          <Gs.a.Link eventKey="Items">
                            Items <$.c />
                          </Gs.a.Link>
                        )}
                      </Gs.a.Item>
                      <Gs.a.Item>
                        <Gs.a.Link eventKey="Events">Feed</Gs.a.Link>
                      </Gs.a.Item>
                    </Gs.a>
                    <Us.a.Content>
                      <Us.a.Pane eventKey="Interview">
                        {We}
                        <div className={"ModalItem-Content" + (We ? " ModalItem-Content-WithAttributes" : "")}>
                          {Ze}
                          {void 0 !== Te.snacks.Forbidden_Knowledge_Access &&
                          (null === (m = Se.team) || void 0 === m ? void 0 : m.id) === Te.favoriteTeam ? (
                            <l.a.Fragment>
                              <h3 className="Player-Info-FK-Subheader">Advanced Stats</h3>
                              <ul className="Player-Info-FK">
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Anticapitalism</div>
                                  <lc
                                    value={Se.player.anticapitalism}
                                    color={null === (d = Se.team) || void 0 === d ? void 0 : d.mainColor}
                                    secondColor={null === (g = Se.team) || void 0 === g ? void 0 : g.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Base Thirst</div>
                                  <lc
                                    value={Se.player.baseThirst}
                                    color={null === (p = Se.team) || void 0 === p ? void 0 : p.mainColor}
                                    secondColor={null === (E = Se.team) || void 0 === E ? void 0 : E.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Buoyancy</div>
                                  <lc
                                    value={Se.player.buoyancy}
                                    color={null === (v = Se.team) || void 0 === v ? void 0 : v.mainColor}
                                    secondColor={null === (b = Se.team) || void 0 === b ? void 0 : b.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Chasiness</div>
                                  <lc
                                    value={Se.player.chasiness}
                                    color={null === (w = Se.team) || void 0 === w ? void 0 : w.mainColor}
                                    secondColor={null === (y = Se.team) || void 0 === y ? void 0 : y.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Cinnamon</div>
                                  <lc
                                    value={Se.player.cinnamon}
                                    color={null === (B = Se.team) || void 0 === B ? void 0 : B.mainColor}
                                    secondColor={null === (O = Se.team) || void 0 === O ? void 0 : O.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Coldness</div>
                                  <lc
                                    value={Se.player.coldness}
                                    color={null === (I = Se.team) || void 0 === I ? void 0 : I.mainColor}
                                    secondColor={null === (k = Se.team) || void 0 === k ? void 0 : k.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Continuation</div>
                                  <lc
                                    value={Se.player.continuation}
                                    color={null === (N = Se.team) || void 0 === N ? void 0 : N.mainColor}
                                    secondColor={null === (T = Se.team) || void 0 === T ? void 0 : T.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Divinity</div>
                                  <lc
                                    value={Se.player.divinity}
                                    color={null === (x = Se.team) || void 0 === x ? void 0 : x.mainColor}
                                    secondColor={null === (P = Se.team) || void 0 === P ? void 0 : P.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Ground Friction</div>
                                  <lc
                                    value={Se.player.groundFriction}
                                    color={null === (L = Se.team) || void 0 === L ? void 0 : L.mainColor}
                                    secondColor={null === (R = Se.team) || void 0 === R ? void 0 : R.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Indulgence</div>
                                  <lc
                                    value={Se.player.indulgence}
                                    color={null === (Q = Se.team) || void 0 === Q ? void 0 : Q.mainColor}
                                    secondColor={null === (j = Se.team) || void 0 === j ? void 0 : j.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Laserlikeness</div>
                                  <lc
                                    value={Se.player.laserlikeness}
                                    color={null === (V = Se.team) || void 0 === V ? void 0 : V.mainColor}
                                    secondColor={null === (W = Se.team) || void 0 === W ? void 0 : W.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Martyrdom</div>
                                  <lc
                                    value={Se.player.martyrdom}
                                    color={null === (U = Se.team) || void 0 === U ? void 0 : U.mainColor}
                                    secondColor={null === (G = Se.team) || void 0 === G ? void 0 : G.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Moxie</div>
                                  <lc
                                    value={Se.player.moxie}
                                    color={null === (H = Se.team) || void 0 === H ? void 0 : H.mainColor}
                                    secondColor={null === (Y = Se.team) || void 0 === Y ? void 0 : Y.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Musclitude</div>
                                  <lc
                                    value={Se.player.musclitude}
                                    color={null === (z = Se.team) || void 0 === z ? void 0 : z.mainColor}
                                    secondColor={null === (X = Se.team) || void 0 === X ? void 0 : X.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Omniscience</div>
                                  <lc
                                    value={Se.player.omniscience}
                                    color={null === (J = Se.team) || void 0 === J ? void 0 : J.mainColor}
                                    secondColor={null === (Z = Se.team) || void 0 === Z ? void 0 : Z.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Overpowerment</div>
                                  <lc
                                    value={Se.player.overpowerment}
                                    color={null === (K = Se.team) || void 0 === K ? void 0 : K.mainColor}
                                    secondColor={null === (_ = Se.team) || void 0 === _ ? void 0 : _.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Patheticism</div>
                                  <lc
                                    value={Se.player.patheticism}
                                    color={null === (ee = Se.team) || void 0 === ee ? void 0 : ee.mainColor}
                                    secondColor={null === (te = Se.team) || void 0 === te ? void 0 : te.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Pressurization</div>
                                  <lc
                                    value={Se.player.pressurization}
                                    color={null === (ae = Se.team) || void 0 === ae ? void 0 : ae.mainColor}
                                    secondColor={null === (ne = Se.team) || void 0 === ne ? void 0 : ne.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Ruthlessness</div>
                                  <lc
                                    value={Se.player.ruthlessness}
                                    color={null === (re = Se.team) || void 0 === re ? void 0 : re.mainColor}
                                    secondColor={null === (ie = Se.team) || void 0 === ie ? void 0 : ie.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Shakespearianism</div>
                                  <lc
                                    value={Se.player.shakespearianism}
                                    color={null === (oe = Se.team) || void 0 === oe ? void 0 : oe.mainColor}
                                    secondColor={null === (se = Se.team) || void 0 === se ? void 0 : se.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Suppresion</div>
                                  <lc
                                    value={Se.player.suppression}
                                    color={null === (ce = Se.team) || void 0 === ce ? void 0 : ce.mainColor}
                                    secondColor={null === (ue = Se.team) || void 0 === ue ? void 0 : ue.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Tenaciousness</div>
                                  <lc
                                    value={Se.player.tenaciousness}
                                    color={null === (me = Se.team) || void 0 === me ? void 0 : me.mainColor}
                                    secondColor={null === (Ae = Se.team) || void 0 === Ae ? void 0 : Ae.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Thwackability</div>
                                  <lc
                                    value={Se.player.thwackability}
                                    color={null === (de = Se.team) || void 0 === de ? void 0 : de.mainColor}
                                    secondColor={null === (fe = Se.team) || void 0 === fe ? void 0 : fe.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line">
                                  <div className="Player-Info-Line-Header">Total Fingers</div>
                                  <div className="Player-Info-Line-Body">{Se.player.totalFingers}</div>
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Tragicness</div>
                                  <lc
                                    value={Se.player.tragicness}
                                    color={null === (he = Se.team) || void 0 === he ? void 0 : he.mainColor}
                                    secondColor={null === (ge = Se.team) || void 0 === ge ? void 0 : ge.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Unthwackability</div>
                                  <lc
                                    value={Se.player.unthwackability}
                                    color={null === (pe = Se.team) || void 0 === pe ? void 0 : pe.mainColor}
                                    secondColor={null === (Ee = Se.team) || void 0 === Ee ? void 0 : Ee.secondaryColor}
                                  />
                                </li>
                                <li className="Player-Info-Line Player-Info-Line-Advanced">
                                  <div className="Player-Info-Line-Header">Watchfulness</div>
                                  <lc
                                    value={Se.player.watchfulness}
                                    color={null === (ve = Se.team) || void 0 === ve ? void 0 : ve.mainColor}
                                    secondColor={null === (be = Se.team) || void 0 === be ? void 0 : be.secondaryColor}
                                  />
                                </li>
                              </ul>
                            </l.a.Fragment>
                          ) : null}
                        </div>
                      </Us.a.Pane>
                      <Us.a.Pane eventKey="Items">
                        <div className="ModalItem-Content">{qe}</div>
                      </Us.a.Pane>
                      <Us.a.Pane eventKey="Events">
                        <div className="ModalItem-Content">
                          <hm
                            entity={Se.player.id}
                            source={cm.Player}
                            defaultCategory={F.Changes}
                            defaultSort={um.NewestFirst}
                            categoryOptions={[-1, F.Changes, F.Game, F.Abilities]}
                          />
                        </div>
                      </Us.a.Pane>
                    </Us.a.Content>
                  </Us.a.Container>
                </l.a.Fragment>
              );
          return <Fs {...Object.assign({}, e, { className: "ModalItem" })}>{Ke}</Fs>;
        };
      function oc(e) {
        for (var t = [], a = 0; a < e; a++) t.push(<re.a className="Player-Stars-Gilded" key={a} />);
        return t;
      }
      var sc,
        cc = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            (void 0 !== a && void 0 !== a.before) || (a = { before: 0, after: 1 }),
            (
              <l.a.Fragment>
                <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                  <div className="Events-List-Row">{t.description}</div>
                  {(function (e) {
                    return (
                      <div className="Events-List-Row Events-List-Minor">
                        <span className="Events-List-Row Events-List-Row-Group">
                          <span className="Events-List-Row-Group">{nc(e.before)}</span>
                          <span className="Events-List-Row Events-List-Row-Group">{oc(e.before)}</span>
                          <ce.b className="Events-List-Row-Group" />
                          <span className="Events-List-Row-Group">{nc(e.after)}</span>
                          <span className="Events-List-Row Events-List-Row-Group">{oc(e.after)}</span>
                        </span>
                      </div>
                    );
                  })(a)}
                </div>
              </l.a.Fragment>
            )
          );
        },
        uc = function (e) {
          for (
            var t = Object(r.useContext)(xo.context),
              a = e.event,
              n = a.metadata,
              i = [],
              o = t.teams.find(function (e) {
                return e.id === a.teamTags[0];
              }),
              s = function (e) {
                var a = t.teams.find(function (t) {
                    return t.id === n.top3Benefactors[e];
                  }),
                  r = n.top3BenefactorCoins[e];
                i.push({ team: a, coins: r });
              },
              c = 0;
            c < n.top3Benefactors.length;
            c++
          )
            s(c);
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(a.category)}>
                The {o.nickname} received {n.totalBenefactorCoins.toLocaleString()} coins in contributions and opened{" "}
                {n.totalGifts} gifts!
                <br />
                <br />
                Top Contributers:
                <ul className="Events-List">
                  {i.map(function (e) {
                    return (
                      <li className="Events-List-Item Events-List-Item-Game">
                        <div className="Recap-Gift-Contributer" style={{ background: e.team.mainColor }}>
                          {DA(e.team)}
                        </div>
                        <div className="Recap-Gift-Description">
                          {e.team.nickname} - {Math.round((e.coins / n.totalBenefactorCoins) * 100)}%.
                        </div>
                      </li>
                    );
                  })}
                </ul>
              </div>
            </l.a.Fragment>
          );
        },
        mc = (a(188), ["title", "titleId"]);
      function Ac() {
        return (Ac =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function dc(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function fc(e, t) {
        var a = e.title,
          n = e.titleId,
          l = dc(e, mc);
        return (
          <svg
            {...Ac(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {sc ||
              (sc = (
                <image
                  id="_01-SolarEclipse"
                  data-name="01-SolarEclipse"
                  x={13.5}
                  y={14}
                  width={229}
                  height={228}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var hc,
        gc = r.forwardRef(fc),
        pc = (a.p, ["title", "titleId"]);
      function Ec() {
        return (Ec =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function vc(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function bc(e, t) {
        var a = e.title,
          n = e.titleId,
          l = vc(e, pc);
        return (
          <svg
            {...Ec(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {hc ||
              (hc = (
                <image
                  id="_03-Reverb"
                  data-name="03-Reverb"
                  x={18.5}
                  y={31}
                  width={219}
                  height={194}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var wc,
        yc = r.forwardRef(bc),
        Bc = (a.p, ["title", "titleId"]);
      function Oc() {
        return (Oc =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Ic(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Sc(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Ic(e, Bc);
        return (
          <svg
            {...Oc(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {wc ||
              (wc = (
                <image
                  id="_04-Blooddrain"
                  data-name="04-Blooddrain"
                  x={10.5}
                  y={21}
                  width={235}
                  height={214}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Cc,
        kc = r.forwardRef(Sc),
        Nc = (a.p, ["title", "titleId"]);
      function Tc() {
        return (Tc =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function xc(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Pc(e, t) {
        var a = e.title,
          n = e.titleId,
          l = xc(e, Nc);
        return (
          <svg
            {...Tc(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Cc ||
              (Cc = (
                <image
                  id="_05-Peanuts"
                  data-name="05-Peanuts"
                  x={15.5}
                  y={16.5}
                  width={225}
                  height={223}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Mc,
        Lc = r.forwardRef(Pc),
        Rc = (a.p, ["title", "titleId"]);
      function Dc() {
        return (Dc =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Fc(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Qc(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Fc(e, Rc);
        return (
          <svg
            {...Dc(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Mc ||
              (Mc = (
                <image
                  id="_06-BlackHole"
                  data-name="06-BlackHole"
                  x={26.5}
                  y={28}
                  width={203}
                  height={200}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var jc,
        Vc = r.forwardRef(Qc),
        Wc = (a.p, ["title", "titleId"]);
      function Uc() {
        return (Uc =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Gc(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Hc(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Gc(e, Wc);
        return (
          <svg
            {...Uc(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {jc ||
              (jc = (
                <image
                  id="_07-Sun2"
                  data-name="07-Sun2"
                  x={40}
                  y={40}
                  width={176}
                  height={176}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Yc,
        zc = r.forwardRef(Hc),
        Xc = (a.p, ["title", "titleId"]);
      function Jc() {
        return (Jc =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Zc(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function qc(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Zc(e, Xc);
        return (
          <svg
            {...Jc(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Yc ||
              (Yc = (
                <image
                  id="_08-Birds"
                  data-name="08-Birds"
                  x={24.5}
                  y={25}
                  width={207}
                  height={206}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Kc,
        _c = r.forwardRef(qc),
        $c = (a.p, ["title", "titleId"]);
      function eu() {
        return (eu =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function tu(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function au(e, t) {
        var a = e.title,
          n = e.titleId,
          l = tu(e, $c);
        return (
          <svg
            {...eu(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Kc ||
              (Kc = (
                <image
                  id="_09-Coffee"
                  data-name="09-Coffee"
                  x={33.5}
                  y={20}
                  width={189}
                  height={216}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var nu,
        ru = r.forwardRef(au),
        lu = (a.p, ["title", "titleId"]);
      function iu() {
        return (iu =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ou(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function su(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ou(e, lu);
        return (
          <svg
            {...iu(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {nu ||
              (nu = (
                <image
                  id="_10-Coffee2"
                  data-name="10-Coffee2"
                  x={33.5}
                  y={20}
                  width={189}
                  height={216}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var cu,
        uu = r.forwardRef(su),
        mu = (a.p, ["title", "titleId"]);
      function Au() {
        return (Au =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function du(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function fu(e, t) {
        var a = e.title,
          n = e.titleId,
          l = du(e, mu);
        return (
          <svg
            {...Au(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {cu ||
              (cu = (
                <image
                  id="_11-Coffee3s"
                  data-name="11-Coffee3s"
                  x={33.5}
                  y={20}
                  width={189}
                  height={216}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var hu,
        gu = r.forwardRef(fu),
        pu = (a.p, ["title", "titleId"]);
      function Eu() {
        return (Eu =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function vu(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function bu(e, t) {
        var a = e.title,
          n = e.titleId,
          l = vu(e, pu);
        return (
          <svg
            {...Eu(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {hu ||
              (hu = (
                <image
                  id="_12-Flooding"
                  data-name="12-Flooding"
                  x={22}
                  y={18.5}
                  width={212}
                  height={219}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var wu,
        yu = r.forwardRef(bu),
        Bu = (a.p, ["title", "titleId"]);
      function Ou() {
        return (Ou =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Iu(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Su(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Iu(e, Bu);
        return (
          <svg
            {...Ou(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {wu ||
              (wu = (
                <image
                  id="_15-Glitter"
                  data-name="15-Glitter"
                  x={27}
                  y={27}
                  width={202}
                  height={202}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Cu,
        ku = r.forwardRef(Su),
        Nu = (a.p, ["title", "titleId"]);
      function Tu() {
        return (Tu =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function xu(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Pu(e, t) {
        var a = e.title,
          n = e.titleId,
          l = xu(e, Nu);
        return (
          <svg
            {...Tu(
              {
                id: "Salmon",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 1000.05,
                height: 1000.05,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Cu ||
              (Cu = (
                <image
                  id="l_copy_10"
                  data-name="l  copy 10"
                  x={129}
                  y={321}
                  width={1287}
                  height={926}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Mu,
        Lu = r.forwardRef(Pu),
        Ru = (a.p, ["title", "titleId"]);
      function Du() {
        return (Du =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Fu(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Qu(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Fu(e, Ru);
        return (
          <svg
            {...Du(
              {
                id: "Polarity",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 1000.05,
                height: 1000.05,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Mu ||
              (Mu = (
                <image
                  id="l_copy_11"
                  data-name="l  copy 11"
                  x={151}
                  y={96}
                  width={1200}
                  height={1309}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ju,
        Vu = r.forwardRef(Qu),
        Wu = (a.p, ["title", "titleId"]);
      function Uu() {
        return (Uu =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Gu(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Hu(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Gu(e, Wu);
        return (
          <svg
            {...Uu(
              {
                id: "Polarity_2",
                "data-name": "Polarity 2",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 1000.05,
                height: 1000.05,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ju ||
              (ju = (
                <image
                  id="l_copy_12"
                  data-name="l  copy 12"
                  x={151}
                  y={96}
                  width={1200}
                  height={1309}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Yu = r.forwardRef(Hu),
        zu =
          (a.p,
          [
            {
              name: "Void",
              icon: <me.e />,
              background: "#67678a",
              color: "#000000",
              description: "No chance of nothing.",
            },
            {
              name: "Sun 2",
              icon: <zc aria-label="A yellow sun" role="img" id="Sun 2" />,
              background: "#fdff9c",
              color: "#ffffff",
              description: "When a team collects 10 Runs, Sun 2 will collect the Runs, and set a Win upon that team.",
            },
            { name: "Overcast", icon: <me.a />, background: "#cfcfcf", color: "#737373", description: "" },
            { name: "Rainy", icon: <me.f />, background: "#348e9e", color: "#0727a8", description: "" },
            { name: "Sandstorm", icon: <me.g />, background: "#877652", color: "#e0dac3", description: "" },
            { name: "Snowy", icon: <me.h />, background: "#68969e", color: "#ffffff", description: "" },
            { name: "Acidic", icon: <me.d />, background: "#92ad58", color: "#235917", description: "" },
            {
              name: "Solar Eclipse",
              icon: (
                <gc
                  aria-label="A blue sun with a dark blue shadow partially covering it"
                  role="img"
                  id="Solar Eclipse"
                />
              ),
              background: "#002f3b",
              color: "#ffffff",
              description: "A chance of incinerations.",
            },
            {
              name: "Glitter",
              icon: (
                <ku aria-label="A collection of pink and purple circles imitating glitter" role="img" id="Glitter" />
              ),
              background: "#ff94ff",
              color: "#ffffff",
              description: "A chance of sparkles.",
            },
            {
              name: "Blooddrain",
              icon: <kc aria-label="A red cloud with red rain falling from it" role="img" id="Blooddrain" />,
              background: "#52050f",
              color: "#ffffff",
              description: "A chance of transfusions between players.",
            },
            {
              name: "Peanuts",
              icon: <Lc aria-label="A peanut cracked into pieces" role="img" id="Peanuts" />,
              background: "#423519",
              color: "#ffffff",
              description: "Traces of salt and honey...",
            },
            {
              name: "Birds",
              icon: <_c aria-label="A purple bird's outstretched talons" role="img" id="Birds" />,
              background: "#45235e",
              color: "#ffffff",
              description: "Birds have been to known to eat peanuts and are just generally great friends.",
            },
            {
              name: "Feedback",
              icon: <ts aria-label="A pink microphone" role="img" id="Feedback" />,
              background: "#383838",
              color: "#ffffff",
              description: "A chance of player swaps between teams.",
            },
            {
              name: "Reverb",
              icon: <yc aria-label="A purple and blue striped ocean wave" role="img" id="Reverb" />,
              background: "#443561",
              color: "#ffffff",
              description: "A chance of roster shuffles.",
            },
            {
              name: "Black Hole",
              icon: (
                <Vc
                  aria-label="A set of blue lines twisting into a black hole at the center"
                  role="img"
                  id="Black Hole"
                />
              ),
              background: "#000000",
              color: "#ffffff",
              description:
                "When a team collects 10 Runs, Black Hole will swallow the Runs and a Win from the opposing team.",
            },
            {
              name: "Coffee",
              icon: <ru aria-label="A brown coffee cup with steam coming off it" role="img" id="Coffee" />,
              background: "#9a7b4f",
              color: "#ffffff",
              description: "Players may get Wired or Tired.",
            },
            {
              name: "Coffee 2",
              icon: <uu aria-label="A green coffee cup with steam coming off it" role="img" id="Coffee 2" />,
              background: "#0c4022",
              color: "#ffffff",
              description: "Players may get Free Refills.",
            },
            {
              name: "Coffee 3s",
              icon: <gu aria-label="A pink and blue coffee cup with steam coming off it" role="img" id="Coffee3s" />,
              background: "#5fa9f1",
              color: "#ffffff",
              description: "Pitchers will become Triple Threats.",
            },
            {
              name: "Flooding",
              icon: (
                <yu
                  aria-label="A blue-gray overflowing waterfall with yellow sparkles surrounding it and lightning at the base"
                  role="img"
                  id="Flooding"
                />
              ),
              background: "#465f63",
              color: "#ffffff",
              description: "An Accident.",
            },
            {
              name: "Salmon",
              icon: <Lu aria-label="A salmon" role="img" id="Salmon" />,
              background: "#ba7b97",
              color: "#f2c7e3",
              description: "Salmon have been known to swim Upstream.",
            },
            {
              name: "Polarity +",
              icon: <Vu />,
              background: "#042e16",
              color: "#d3e3e2",
              description: "Numbers go up.",
            },
            {
              name: "Polarity -",
              icon: <Yu />,
              background: "#3b0422",
              color: "#ff6be6",
              description: "Numbers go down.",
            },
            { name: "???", icon: <_.R />, background: "#0e4e8a", color: "#ffc400", description: "???" },
          ]);
      function Xu(e) {
        Object(r.useContext)(M.context).user;
        var t = Object(c.g)(),
          a = e.type,
          n = zu[a],
          i = n.icon,
          o = n.name;
        "Sun 2" === n.name && (o = "Sun Two");
        var s = (
          <div
            className="WeatherIcon"
            id={o}
            aria-label={"".concat(o, " Weather")}
            style={{ color: Zu(a), background: qu(a) }}
          >
            <span id="definition" aria-labelledby={o} role="definition" className="sr-only">
              {n.description}
            </span>
            {i}
          </div>
        );
        return e.tooltip ? (
          <Ct.a
            placement="top"
            overlay={
              <St.a id="tooltip-stadium" className="Weather-Tooltip">
                <div className="Weather-Tooltip-Header">{n.name}</div>
                <div className="Weather-Tooltip-Description">{n.description}</div>
              </St.a>
            }
          >
            {n.link && void 0 !== n.path ? (
              <div
                className="WeatherIcon"
                id={o}
                aria-label={"".concat(o, " Weather")}
                style={{ color: Zu(a), background: qu(a) }}
              >
                <A className="WeatherIcon" background={t} path={n.path}>
                  <span id="definition" aria-labelledby={o} role="definition" className="sr-only">
                    {n.description}
                  </span>
                  {i}
                </A>
              </div>
            ) : (
              s
            )}
          </Ct.a>
        ) : n.link && void 0 !== n.path ? (
          <A background={t} path={n.path}>
            {s}
          </A>
        ) : (
          s
        );
      }
      function Ju(e) {
        return zu[e].name;
      }
      function Zu(e) {
        return zu[e].color;
      }
      function qu(e) {
        return zu[e].background;
      }
      var Ku = function (e) {
          var t = e.event,
            a = (e.entity, e.source, t.metadata.weather);
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Row">{t.description}</div>
                <span className="Events-List-Row Events-List-Minor">
                  <Xu type={a} tooltip={!0} />
                  <span className="Events-Time Events-List-Row-Group">{Ju(a)}</span>
                </span>
              </div>
            </l.a.Fragment>
          );
        },
        _u = l.a.createContext([]),
        $u = function (e) {
          var t = e.children,
            a = Object(c.g)().pathname,
            n = Object(r.useState)([]),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1];
          function m() {
            return A.apply(this, arguments);
          }
          function A() {
            return (A = Object(h.a)(
              f.a.mark(function e() {
                var t;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (e.next = 2), BA();
                      case 2:
                        (t = e.sent), u(t);
                      case 4:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            )).apply(this, arguments);
          }
          return (
            Object(r.useEffect)(function () {
              m();
            }, []),
            Object(r.useEffect)(
              function () {
                "/search" === a && m();
              },
              [a]
            ),
            (<_u.Provider value={o}>{t}</_u.Provider>)
          );
        };
      $u.context = _u;
      var em = $u;
      var tm = function (e) {
        var t,
          a = e.event,
          n = a.metadata;
        return (
          <l.a.Fragment>
            <div className={"Events-List-Desc Events-List-Background-Standard" + bm(a.category)}>
              {mo(a.description)}
              {((t = n.update), (<div className="Events-List-Row Events-List-Row-Group Widget-Log-Score">{t}</div>))}
              {n.ledger.split("\n").map(function (e) {
                return (function (e) {
                  return <div className="Events-List-Row Events-List-Row-Group Widget-Log-Ledger">{e}</div>;
                })(e);
              })}
              {(function (e) {
                return (
                  <div className="Events-List-Row">
                    <span>{FA(e.homeEmoji)}</span>
                    <span className="Events-List-Row-Group">{e.homeScore}</span>,
                    <span className="Events-List-Row-Group">{FA(e.awayEmoji)}</span>
                    <span className="Events-List-Row-Group">{e.awayScore}</span>
                  </div>
                );
              })(n)}
            </div>
          </l.a.Fragment>
        );
      };
      var am = function (e) {
        var t = e.event,
          a = Object(r.useState)(!1),
          n = Object(s.a)(a, 2),
          i = n[0],
          o = n[1],
          c = t.metadata,
          u = 215 === t.type;
        return (
          <l.a.Fragment>
            <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
              {mo(t.description)}
              <div className="Events-List-Row-Group">
                <div className="Widget-Log-Ledger">
                  {i
                    ? c.lines.map(function (e) {
                        return (function (e) {
                          return <div className="Events-List-Row Events-List-Row-Group Widget-Log-Ledger">{e}</div>;
                        })(e);
                      })
                    : null}
                </div>
                <span className="Events-List-Row">
                  <span className="Events-List-Row-Group Widget-Log-Score">
                    {c.amount > 0 ? "+" : "-"} {c.amount}
                  </span>
                  <span
                    className="Events-List-Row-Group Widget-Log-IconButton"
                    onClick={function () {
                      o(!i);
                    }}
                  >
                    <ue.c />
                  </span>
                  <span className="Events-List-Row-Group Widget-Log-Ledger">
                    {u ? "Series" : "Season"} Total: {c.after.toString()}
                  </span>
                </span>
              </div>
            </div>
          </l.a.Fragment>
        );
      };
      function nm() {
        var e = Object(r.useState)({ current: 0, maximum: 1, recharge: 0 }),
          t = Object(s.a)(e, 2),
          a = t[0],
          n = t[1],
          i = (function () {
            var e = Object(h.a)(
              f.a.mark(function e() {
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (e.t0 = n), (e.next = 3), wA();
                      case 3:
                        (e.t1 = e.sent), (0, e.t0)(e.t1);
                      case 5:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            );
            return function () {
              return e.apply(this, arguments);
            };
          })();
        return (
          Object(r.useEffect)(function () {
            i();
          }, []),
          (<rm data={a} />)
        );
      }
      function rm(e) {
        var t = (e.data.current / e.data.maximum) * 100;
        return (
          <Ct.a
            key="bottom-1"
            placement="bottom"
            overlay={
              <St.a
                id="tooltip-sunsun"
                className="AttributeTooltip SunSunBar-Tooltip"
                style={{ borderColor: "#10457f", marginTop: "10px" }}
              >
                <div className="AttributeTooltip-Container">
                  <div className="AttributeTooltip-Description">
                    <b>
                      <span style={{ color: "rgb(83, 166, 255)" }}>PRESSURE</span> AT {t.toFixed(2)}%
                    </b>
                  </div>
                </div>
              </St.a>
            }
          >
            <div
              className="SunSunBar progress"
              style={{ background: "linear-gradient(90deg, rgba(251,205,98,1) 0%, rgba(212,76,20,1) 100%" }}
            >
              <div
                className="progress-bar"
                role="progressbar"
                aria-valuenow={t}
                aria-valuemin={0}
                aria-valuemax={100}
                style={{ width: "".concat(t, "%"), background: "linear-gradient(90deg, #10457f 0%, #2379a6 100%" }}
              />
            </div>
          </Ct.a>
        );
      }
      var lm = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                {mo(t.description)}
                <div className="Events-List-Row Events-List-Row-Group" style={{ margin: 0 }}>
                  <mt style={{ width: "50px", height: "50px" }} />
                  <rm data={a} />
                </div>
              </div>
            </l.a.Fragment>
          );
        },
        im = function (e) {
          var t = e.event,
            a = t.metadata;
          return (
            <l.a.Fragment>
              <div className={"Events-List-Desc Events-List-Background-Standard" + bm(t.category)}>
                <div className="Events-List-Row">{t.description}</div>
                <div className="Events-List-Row Events-List-Minor">
                  <span className="Events-List-Mod Events-List-Row-Group">
                    <Xu type={a.weather} tooltip={!1} />
                  </span>
                  <span className="Events-List-Row-Group">{a.effect}</span>
                </div>
              </div>
            </l.a.Fragment>
          );
        };
      function om(e) {
        switch (e) {
          case ae.Lineup:
            return (
              <span>
                Lineup <_.m />
              </span>
            );
          case ae.Rotation:
            return (
              <span>
                Rotation <ee.b />
              </span>
            );
          case ae.ShadowLineup:
          case ae.ShadowRotation:
            return (
              <span>
                Shadows <_.wd />
              </span>
            );
        }
        return <l.a.Fragment />;
      }
      function sm(e) {
        var t = Object(r.useContext)(xo.context),
          a = Object(r.useContext)(em.context),
          n = Object(c.g)(),
          i = Object(r.useState)(e.id),
          o = Object(s.a)(i, 2),
          u = o[0],
          m = (o[1], Object(r.useState)(!1)),
          d = Object(s.a)(m, 2),
          f = d[0],
          h = d[1];
        return (
          Object(r.useEffect)(
            function () {
              e.id !== u && h(!1);
            },
            [e]
          ),
          void 0 === t ||
          (null === e.playerTags && null === e.teamTags && null === e.gameTags) ||
          (void 0 === e.playerTags && void 0 === e.teamTags && void 0 === e.gameTags) ||
          (e.playerTags.length < 1 && e.teamTags.length < 1 && e.gameTags.length < 1) ? (
            <l.a.Fragment />
          ) : (
            <l.a.Fragment>
              <ee.d
                className="Events-List-Links-Button"
                onClick={function (e) {
                  return h(!f);
                }}
              />
              <div className={"Events-List-Links" + (f ? " Events-List-Links-Shown" : "")}>
                {e.playerTags
                  ? e.playerTags.map(function (e, t) {
                      var r = a.find(function (t) {
                        return t.id === e;
                      });
                      return (
                        <A background={n} className="Events-List-Links-Link" path={"/player/".concat(e)}>
                          <ee.d /> {r ? r.name : "Player"}
                        </A>
                      );
                    })
                  : null}
                {e.teamTags
                  ? e.teamTags.map(function (e, a) {
                      var r = t.teams.find(function (t) {
                        return t.id === e;
                      });
                      return a > 1 ? null : (
                        <A background={n} className="Events-List-Links-Link" path={"/team/".concat(e)}>
                          <ee.d /> {r ? r.nickname : "Team"}
                        </A>
                      );
                    })
                  : null}
                {e.gameTags
                  ? e.gameTags.map(function (e, t) {
                      return (
                        <A
                          background={n}
                          className="Events-List-Links-Link Events-List-Links-Link-Game"
                          path={"/game/".concat(e)}
                        >
                          <ee.d /> Game
                        </A>
                      );
                    })
                  : null}
              </div>
            </l.a.Fragment>
          )
        );
      }
      var cm,
        um,
        mm = function (e) {
          var t,
            a = e.event,
            n = e.entity,
            i = e.source,
            o = Object(r.useContext)(S.context),
            s = [];
          switch (a.type) {
            case 0:
              s.push(<Ku entity={n} event={a} source={i} />);
              break;
            case 11:
              s.push(<Oo event={a} entity={n} source={i} />);
              break;
            case 29:
              s.push(<ys entity={n} event={a} source={i} />);
              break;
            case 106:
            case 107:
            case 146:
            case 147:
            case 210:
            case 211:
              s.push(<Co entity={n} event={a} source={i} />);
              break;
            case 108:
              s.push(<Xo entity={n} event={a} source={i} />);
              break;
            case 109:
              s.push(<Fo entity={n} event={a} source={i} />);
              break;
            case 112:
              s.push(<Vo entity={n} event={a} source={i} />);
              break;
            case 113:
              s.push(<Po entity={n} event={a} source={i} />);
              break;
            case 114:
              s.push(<Ro entity={n} event={a} source={i} />);
              break;
            case 115:
              s.push(<Wo entity={n} event={a} source={i} />);
              break;
            case 116:
              s.push(<Jo entity={n} event={a} source={i} />);
              break;
            case 117:
            case 118:
            case 119:
            case 122:
            case 123:
              s.push(<Yo entity={n} event={a} source={i} />);
              break;
            case 120:
              s.push(<xs entity={n} event={a} source={i} />);
              break;
            case 139:
              s.push(<cc entity={n} event={a} source={i} />);
              break;
            case 144:
            case 148:
              s.push(<Zo entity={n} event={a} source={i} />);
              break;
            case 145:
              s.push(<zo entity={n} event={a} source={i} />);
              break;
            case 171:
            case 172:
              s.push(<Bs entity={n} event={a} source={i} />);
              break;
            case 127:
            case 128:
            case 185:
            case 186:
            case 187:
            case 188:
              s.push(<Ss entity={n} event={a} source={i} />);
              break;
            case 175:
              s.push(<Cs entity={n} event={a} source={i} />);
              break;
            case 179:
            case 180:
            case 199:
              s.push(<Lo entity={n} event={a} source={i} />);
              break;
            case 194:
              s.push(<uc entity={n} event={a} source={i} />);
              break;
            case 209:
              s.push(<tm entity={n} event={a} source={i} />);
              break;
            case 214:
            case 215:
              s.push(<am entity={n} event={a} source={i} />);
              break;
            case 217:
              s.push(<lm entity={n} event={a} source={i} />);
              break;
            case 223:
              s.push(<im entity={n} event={a} source={i} />);
              break;
            default:
              s.push(<Bo event={a} entity={n} source={i} />);
          }
          return (
            (!PA(o.sim, "SIM_PICKLED_HERRING") && [175, -1].includes(a.type)) ||
              s.push(
                <Ts
                  event={a}
                  upnut={null === a || void 0 === a || null === (t = a.metadata) || void 0 === t ? void 0 : t.upnut}
                  nuts={+a.nuts}
                />
              ),
            s.push(sm(a)),
            (<l.a.Fragment>{s}</l.a.Fragment>)
          );
        };
      !(function (e) {
        (e[(e.Player = 0)] = "Player"),
          (e[(e.Team = 1)] = "Team"),
          (e[(e.Game = 2)] = "Game"),
          (e[(e.ParentEvent = 3)] = "ParentEvent"),
          (e[(e.Book = 4)] = "Book"),
          (e[(e.User = 5)] = "User"),
          (e[(e.Home = 6)] = "Home"),
          (e[(e.Story = 7)] = "Story");
      })(cm || (cm = {})),
        (function (e) {
          (e[(e.NewestFirst = 0)] = "NewestFirst"),
            (e[(e.OldestFirst = 1)] = "OldestFirst"),
            (e[(e.Top = 2)] = "Top"),
            (e[(e.Hot = 3)] = "Hot");
        })(um || (um = {}));
      var Am = function e() {
          Object(X.a)(this, e), (this.events = []), (this.loading = !0), (this.noMoreToLoad = !1);
        },
        dm = { events: [], loading: !0, noMoreToLoad: !1 },
        fm = (function () {
          function e() {
            Object(X.a)(this, e), (this.byCategory = new Map());
          }
          return (
            Object(Z.a)(e, [
              {
                key: "Get",
                value: function (e, t) {
                  var a = this.byCategory.get(e);
                  return void 0 === a && (a = new Map()), a.get(t);
                },
              },
              {
                key: "Set",
                value: function (e, t, a) {
                  var n = this.byCategory.get(e);
                  void 0 === n && (n = new Map()), n.set(t, a), this.byCategory.set(e, n);
                },
              },
              {
                key: "Add",
                value: function (e, t, a) {
                  var n,
                    r = this.byCategory.get(e);
                  void 0 === r && (r = new Map());
                  var l = r.get(t);
                  void 0 === l && (l = new Am()),
                    (n = l.events).push.apply(n, Object(J.a)(a)),
                    r.set(t, l),
                    this.byCategory.set(e, r);
                },
              },
              {
                key: "SetPreload",
                value: function (e, t, a) {
                  var n = this;
                  t.forEach(function (t) {
                    var r = e.filter(function (e) {
                      return e.category === t || -1 === t;
                    });
                    a.forEach(function (e) {
                      var a = Object(J.a)(r);
                      switch (e) {
                        case um.NewestFirst:
                          a.sort(function (e, t) {
                            return e.created > t.created ? -1 : 1;
                          });
                          break;
                        case um.OldestFirst:
                          a.sort(function (e, t) {
                            return e.created < t.created ? -1 : 1;
                          });
                      }
                      n.Set(t, e, { events: a, loading: !1, noMoreToLoad: !0 });
                    });
                  });
                },
              },
            ]),
            e
          );
        })(),
        hm = function (e) {
          var t,
            a,
            n,
            i,
            o,
            c = e.entity,
            u = e.source,
            m = e.preloadEvents,
            A = e.defaultCategory,
            d = e.defaultSort,
            g = e.consolidated,
            p = Object(r.useRef)(new fm()),
            E = Object(r.useState)(null !== A && void 0 !== A ? A : -1),
            v = Object(s.a)(E, 2),
            b = v[0],
            w = v[1],
            y = Object(r.useState)(null !== d && void 0 !== d ? d : um.NewestFirst),
            B = Object(s.a)(y, 2),
            O = B[0],
            I = B[1],
            k = Object(r.useState)(dm),
            N = Object(s.a)(k, 2),
            T = N[0],
            x = N[1],
            P = null === (t = e.showButtons) || void 0 === t || t,
            M = null === (a = e.showSort) || void 0 === a || a,
            L = null === (n = e.showCategory) || void 0 === n || n,
            R = null !== (i = e.sortOptions) && void 0 !== i ? i : [um.Hot, um.NewestFirst, um.OldestFirst, um.Top],
            D = null !== (o = e.categoryOptions) && void 0 !== o ? o : [-1, F.Outcomes, F.Changes],
            Q = Object(r.useContext)(S.context);
          function j() {
            return (j = Object(h.a)(
              f.a.mark(function e() {
                var t, a;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        if (void 0 !== (t = p.current.Get(b, O))) {
                          e.next = 32;
                          break;
                        }
                        (t = new Am()),
                          (e.t0 = u),
                          (e.next =
                            e.t0 === cm.Player
                              ? 6
                              : e.t0 === cm.Team
                              ? 10
                              : e.t0 === cm.Game
                              ? 14
                              : e.t0 === cm.Book
                              ? 18
                              : e.t0 === cm.Home
                              ? 22
                              : e.t0 === cm.Story
                              ? 26
                              : 30);
                        break;
                      case 6:
                        return (e.next = 8), nA(c, O, b);
                      case 8:
                        return (a = e.sent), e.abrupt("break", 30);
                      case 10:
                        return (e.next = 12), lA(c, O, b);
                      case 12:
                        return (a = e.sent), e.abrupt("break", 30);
                      case 14:
                        return (e.next = 16), oA(c, O, b);
                      case 16:
                        return (a = e.sent), e.abrupt("break", 30);
                      case 18:
                        return (e.next = 20), Km(O, b);
                      case 20:
                        return (a = e.sent), e.abrupt("break", 30);
                      case 22:
                        return (e.next = 24), Km(O, b);
                      case 24:
                        return (a = e.sent), e.abrupt("break", 30);
                      case 26:
                        return (e.next = 28), tA(c);
                      case 28:
                        return (a = e.sent), e.abrupt("break", 30);
                      case 30:
                        (t.loading = !1),
                          void 0 !== a &&
                            ((t.noMoreToLoad = a.length < 50 || O === um.Hot), (t.events = a), p.current.Set(b, O, t));
                      case 32:
                        x(t);
                      case 33:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            )).apply(this, arguments);
          }
          function V() {
            return (V = Object(h.a)(
              f.a.mark(function e() {
                var t, a, n, r, l, i, o, s;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        if (
                          ((t = T.events && T.events.length > 0 ? T.events[T.events.length - 1] : void 0),
                          (a = T.events && T.events.length > 0 ? T.events.length : 0),
                          void 0 !== t)
                        ) {
                          e.next = 7;
                          break;
                        }
                        return (
                          (n = Object(C.a)(Object(C.a)({}, T), {}, { noMoreToLoad: !0 })),
                          p.current.Set(b, O, n),
                          x(n),
                          e.abrupt("return")
                        );
                      case 7:
                        (r = Object(C.a)(Object(C.a)({}, T), {}, { loading: !0 })),
                          p.current.Set(b, O, r),
                          x(r),
                          (e.t0 = u),
                          (e.next =
                            e.t0 === cm.Player
                              ? 13
                              : e.t0 === cm.Team
                              ? 17
                              : e.t0 === cm.Game
                              ? 21
                              : e.t0 === cm.Book
                              ? 25
                              : e.t0 === cm.Home
                              ? 29
                              : 33);
                        break;
                      case 13:
                        return (e.next = 15), nA(c, O, b, O === um.Top ? a : t.created);
                      case 15:
                        return (l = e.sent), e.abrupt("break", 33);
                      case 17:
                        return (e.next = 19), lA(c, O, b, O === um.Top ? a : t.created);
                      case 19:
                        return (l = e.sent), e.abrupt("break", 33);
                      case 21:
                        return (e.next = 23), oA(c, O, b, O === um.Top ? a : t.created);
                      case 23:
                        return (l = e.sent), e.abrupt("break", 33);
                      case 25:
                        return (e.next = 27), Km(O, b, O === um.Top ? a : t.created);
                      case 27:
                        return (l = e.sent), e.abrupt("break", 33);
                      case 29:
                        return (e.next = 31), Km(O, b, O === um.Top ? a : t.created);
                      case 31:
                        return (l = e.sent), e.abrupt("break", 33);
                      case 33:
                        if (void 0 !== l && 0 !== l.length) {
                          e.next = 38;
                          break;
                        }
                        return (
                          (i = Object(C.a)(Object(C.a)({}, T), {}, { noMoreToLoad: !0 })),
                          p.current.Set(b, O, i),
                          x(i),
                          e.abrupt("return")
                        );
                      case 38:
                        (o = T.events ? [].concat(Object(J.a)(T.events), Object(J.a)(l)) : l),
                          ((s = Object(C.a)(Object(C.a)({}, T), {}, { events: o })).noMoreToLoad = l.length < 50),
                          x(s),
                          p.current.Set(b, O, s);
                      case 43:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            )).apply(this, arguments);
          }
          if (
            (Object(r.useEffect)(function () {
              m && p.current.SetPreload(m, D, R);
            }, []),
            Object(r.useEffect)(
              function () {
                !(function () {
                  j.apply(this, arguments);
                })();
              },
              [O, b]
            ),
            void 0 === T.events)
          )
            return <l.a.Fragment>Error loading events.</l.a.Fragment>;
          var W,
            U,
            G = P ? (
              <q.a className={"Events-ButtonList" + (u === cm.Home ? " Events-ButtonList-Home" : "")}>
                {L ? (
                  <K.a
                    as="select"
                    value={b}
                    className="Events-Dropdown"
                    onChange={function (e) {
                      w(parseInt(e.target.value));
                    }}
                  >
                    {D.map(function (e, t) {
                      switch (e) {
                        case -1:
                          return (
                            <option value={e} key={t}>
                              All
                            </option>
                          );
                        case F.Game:
                          return (
                            <option value={e} key={t}>
                              Plays
                            </option>
                          );
                        case F.Abilities:
                          return (
                            <option value={e} key={t}>
                              Special
                            </option>
                          );
                        case F.Changes:
                          return (
                            <option value={e} key={t}>
                              Changes
                            </option>
                          );
                        case F.Outcomes:
                          return (
                            <option value={e} key={t}>
                              Outcomes
                            </option>
                          );
                      }
                    })}
                  </K.a>
                ) : null}
                {M ? (
                  <K.a
                    as="select"
                    value={O}
                    className="Events-Dropdown"
                    onChange={function (e) {
                      I(parseInt(e.target.value));
                    }}
                  >
                    {R.map(function (e, t) {
                      switch (e) {
                        case um.Hot:
                          return (
                            <option value={um.Hot} key={t}>
                              Hot
                            </option>
                          );
                        case um.NewestFirst:
                          return (
                            <option value={um.NewestFirst} key={t}>
                              Newest First
                            </option>
                          );
                        case um.OldestFirst:
                          return (
                            <option value={um.OldestFirst} key={t}>
                              Oldest First
                            </option>
                          );
                        case um.Top:
                          return (
                            <option value={um.Top} key={t}>
                              Top
                            </option>
                          );
                      }
                      return null;
                    })}
                  </K.a>
                ) : null}
              </q.a>
            ) : null;
          if (
            ((W = T.loading ? (
              <js />
            ) : m || u === cm.Story ? null : (
              <div className="Events-Load">
                {T.noMoreToLoad ? (
                  "End of Feed"
                ) : (
                  <Vs.a
                    className="Events-Button"
                    onClick={function () {
                      return V.apply(this, arguments);
                    }}
                  >
                    Load More
                  </Vs.a>
                )}
              </div>
            )),
            u === cm.Home)
          ) {
            var H = null;
            return (
              PA(Q.sim, "SIM_FORUM") &&
                ((U = "The Forum improvements will be made available soon."),
                (H = !0 ? (
                  <l.a.Fragment>
                    <div className="Shop-Construction Shop-Construction-Small">UNDER CONSTRUCTION</div>
                    <div className="Shop-Construction-Description Shop-Construction-Description-Small">{U}</div>
                  </l.a.Fragment>
                ) : (
                  <l.a.Fragment>
                    <div className="Shop-Construction">UNDER CONSTRUCTION</div>
                    <div className="Shop-Construction-Description">{U}</div>
                  </l.a.Fragment>
                ))),
              (
                <l.a.Fragment>
                  <div className="Bulletin-Item-Header">
                    {g ? null : (
                      <l.a.Fragment>
                        <div className="Bulletin-Item-Header-Icon" style={{ background: "#c23284" }}>
                          <_.Fc />
                        </div>
                        <h2 className="Bulletin-Item-Header-Title" id="updates">
                          Global Feed
                        </h2>
                      </l.a.Fragment>
                    )}
                    {G}
                  </div>
                  {H}
                  <div className="Events-List-Home">
                    <pm source={u} entity={c} events={T.events} consolidated={g} />
                    {W}
                  </div>
                </l.a.Fragment>
              )
            );
          }
          return (
            <l.a.Fragment>
              <div className="Events">
                {G}
                <pm source={u} entity={c} events={T.events} />
                {W}
              </div>
            </l.a.Fragment>
          );
        },
        gm = function (e) {
          var t = e.event,
            a = e.subEvents,
            n = t.metadata.children;
          if (void 0 === a || 0 === a.length || void 0 === n) return <div>No events to display.</div>;
          var r,
            i = [],
            o = Object(z.a)(n);
          try {
            var s = function () {
              var e = r.value,
                t = a.find(function (t) {
                  return t.id === e;
                });
              if (void 0 === t) return "continue";
              i.push(t);
            };
            for (o.s(); !(r = o.n()).done; ) s();
          } catch (c) {
            o.e(c);
          } finally {
            o.f();
          }
          return <pm events={i} entity="" source={cm.ParentEvent} />;
        },
        pm = function (e) {
          var t = e.events,
            a = e.entity,
            n = e.source,
            r = e.consolidated;
          return t ? (
            <ul className="Events-List">
              {t.map(function (e, t) {
                if (n === cm.Game) {
                  var i = e.metadata.play;
                  return (
                    <li className="Events-List-Item Events-List-Item-Game" key={t}>
                      <mm event={e} entity={a} source={n} />
                      <div className="Events-List-Play">{void 0 !== i ? i + 1 : ""}</div>
                    </li>
                  );
                }
                return n === cm.ParentEvent ? (
                  <li className="Events-List-Item Events-List-Item-ParentEvent" key={t}>
                    <mm event={e} entity={a} source={n} />
                  </li>
                ) : (
                  <li
                    className={
                      "Events-List-Item" +
                      (n === cm.Home ? " Events-List-Home-Item" + (r ? " Events-List-Home-Item-Squished" : "") : "")
                    }
                    key={t}
                  >
                    <div className="Events-List-Season">{ym(e.phase, e.tournament, e.season)}</div>
                    <div className={Bm(e.phase, e.day).length <= 2 ? "Events-List-Date" : "Events-List-Date-Long"}>
                      {Bm(e.phase, e.day)}
                    </div>
                    <mm event={e} entity={a} source={n} />
                  </li>
                );
              })}
            </ul>
          ) : null;
        };
      function Em(e) {
        switch (e.type) {
          case 82:
            return "Emergency Alert";
          case 135:
            return "New Challenger";
        }
        return null;
      }
      function vm(e) {
        if (e.category === F.Changes) return <$.a />;
        var t = e.metadata.being ? parseInt(e.metadata.being) : -1;
        if (t > -1) return bs(t);
        if (e.metadata.icon) return <Bt id={e.metadata.icon} />;
        switch (e.type) {
          case 82:
            return <_.Qc />;
          default:
            return e.type <= 15 ? <ee.k /> : <_.Fc />;
        }
      }
      function bm(e) {
        var t = e === F.Game,
          a = e === F.Changes,
          n = e === F.Outcomes,
          r = e === F.Narrative,
          l = e === F.Abilities;
        return t
          ? " Events-List-Desc-Game"
          : a
          ? " Events-List-Desc-Changes"
          : n
          ? " Events-List-Desc-Outcomes"
          : r
          ? " Events-List-Desc-Narrative"
          : l
          ? " Events-List-Desc-Abilities"
          : "";
      }
      var wm = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
      function ym(e, t, a) {
        switch (e) {
          case 15:
          case 16:
          case 17:
          case 18:
            return -1 === t ? "CC" : "T";
        }
        return a <= -95 && a >= -99 ? wm[a + 99] : a >= -94 && a < -1 ? "A" + wm[a + 94] : a + 1;
      }
      function Bm(e, t) {
        switch (e) {
          case 0:
            return "G";
          case 3:
            return "ES";
          case 5:
            return "LS";
          case 13:
            return "EL";
        }
        return (t + 1).toString();
      }
      var Om,
        Im =
          (null ===
            (Om = Object({
              NODE_ENV: "production",
              PUBLIC_URL: "https://d35iw2jmbg6ut8.cloudfront.net",
              WDS_SOCKET_HOST: void 0,
              WDS_SOCKET_PATH: void 0,
              WDS_SOCKET_PORT: void 0,
              FAST_REFRESH: !0,
            })) || void 0 === Om
            ? void 0
            : Om.REACT_APP_API_URL) || "",
        Sm = 50,
        Cm = 200,
        km = function (e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
          return fetch(e, {
            method: "POST",
            mode: "cors",
            cache: "no-cache",
            credentials: "include",
            headers: { "Content-Type": "application/json" },
            redirect: "follow",
            referrerPolicy: "no-referrer",
            body: t,
          });
        };
      function Nm(e) {
        return Tm.apply(this, arguments);
      }
      function Tm() {
        return (Tm = Object(h.a)(
          f.a.mark(function e(t) {
            var a;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/auth/validate-reset-token?token=").concat(t))
                      );
                    case 3:
                      return (a = e.sent), e.abrupt("return", a.status);
                    case 7:
                      (e.prev = 7), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 10:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 7]]
            );
          })
        )).apply(this, arguments);
      }
      function xm() {
        return Pm.apply(this, arguments);
      }
      function Pm() {
        return (Pm = Object(h.a)(
          f.a.mark(function e() {
            var t, a;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/globalEvents"));
                    case 3:
                      return (t = e.sent), (e.next = 6), t.json();
                    case 6:
                      return (a = e.sent), e.abrupt("return", a);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Mm() {
        return Lm.apply(this, arguments);
      }
      function Lm() {
        return (Lm = Object(h.a)(
          f.a.mark(function e() {
            var t, a;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/offseasonSetup"));
                    case 3:
                      return (t = e.sent), (e.next = 6), t.json();
                    case 6:
                      return (a = e.sent), e.abrupt("return", a);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Rm(e) {
        return Dm.apply(this, arguments);
      }
      function Dm() {
        return (Dm = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/offseasonRecap?season=").concat(t))
                      );
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Fm() {
        return Qm.apply(this, arguments);
      }
      function Qm() {
        return (Qm = Object(h.a)(
          f.a.mark(function e() {
            var t, a;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/shopSetup"));
                    case 3:
                      return (t = e.sent), (e.next = 6), t.json();
                    case 6:
                      return (a = e.sent), e.abrupt("return", a);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function jm(e) {
        return Vm.apply(this, arguments);
      }
      function Vm() {
        return (Vm = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/eventResults?ids=").concat(t));
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Wm(e) {
        return Um.apply(this, arguments);
      }
      function Um() {
        return (Um = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/bonusResults?ids=").concat(t));
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Gm(e) {
        return Hm.apply(this, arguments);
      }
      function Hm() {
        return (Hm = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/decreeResults?ids=").concat(t));
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Ym(e) {
        return zm.apply(this, arguments);
      }
      function zm() {
        return (zm = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/players?ids=").concat(t));
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Xm(e) {
        return Jm.apply(this, arguments);
      }
      function Jm() {
        return (Jm = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/items?ids=").concat(t));
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Zm(e) {
        return qm.apply(this, arguments);
      }
      function qm() {
        return (qm = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/playersByItemId?id=").concat(t))
                      );
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function Km(e) {
        return _m.apply(this, arguments);
      }
      function _m() {
        return (_m = Object(h.a)(
          f.a.mark(function e(t) {
            var a,
              n,
              r,
              l,
              i,
              o,
              s,
              c,
              u = arguments;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (a = u.length > 1 && void 0 !== u[1] ? u[1] : -1),
                        (n = u.length > 2 && void 0 !== u[2] ? u[2] : -1),
                        (e.prev = 2),
                        (r = -1 != n ? "&start=".concat(n.toString()) : ""),
                        (l = a >= 0 ? "&category=".concat(a) : ""),
                        (i = "&sort=".concat(t)),
                        (o = "&limit=".concat(t === um.Hot ? Cm : Sm)),
                        (e.next = 9),
                        fetch("".concat(Im, "/database/feed/global?").concat(o).concat(i).concat(l).concat(r), {
                          credentials: "include",
                        })
                      );
                    case 9:
                      return (s = e.sent), (e.next = 12), s.json();
                    case 12:
                      return (c = e.sent), e.abrupt("return", c);
                    case 16:
                      (e.prev = 16), (e.t0 = e.catch(2)), console.log(e.t0);
                    case 19:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[2, 16]]
            );
          })
        )).apply(this, arguments);
      }
      function $m(e) {
        return eA.apply(this, arguments);
      }
      function eA() {
        return (eA = Object(h.a)(
          f.a.mark(function e(t) {
            var a,
              n,
              r,
              l,
              i,
              o,
              s,
              c,
              u,
              m = arguments;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (a = m.length > 1 && void 0 !== m[1] ? m[1] : 0),
                        (n = m.length > 2 && void 0 !== m[2] ? m[2] : -1),
                        (r = m.length > 3 && void 0 !== m[3] ? m[3] : -1),
                        (e.prev = 3),
                        (l = -1 != r ? "&start=".concat(r.toString()) : ""),
                        (i = "&sort=".concat(a)),
                        (o = n >= 0 ? "&category=".concat(n) : ""),
                        (s = "&limit=".concat(a === um.Hot ? Cm : Sm)),
                        (e.next = 10),
                        fetch("".concat(Im, "/api/userfeed/?").concat(s).concat(l).concat(i).concat(o), {
                          credentials: "include",
                        })
                      );
                    case 10:
                      return (c = e.sent), (e.next = 13), c.json();
                    case 13:
                      return (u = e.sent), e.abrupt("return", u);
                    case 17:
                      (e.prev = 17), (e.t0 = e.catch(3)), console.log(e.t0);
                    case 20:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[3, 17]]
            );
          })
        )).apply(this, arguments);
      }
      function tA(e) {
        return aA.apply(this, arguments);
      }
      function aA() {
        return (aA = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0),
                        (e.next = 3),
                        fetch("".concat(Im, "/database/feed/story?id=").concat(t), { credentials: "include" })
                      );
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function nA(e, t) {
        return rA.apply(this, arguments);
      }
      function rA() {
        return (rA = Object(h.a)(
          f.a.mark(function e(t, a) {
            var n,
              r,
              l,
              i,
              o,
              s,
              c,
              u,
              m = arguments;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (n = m.length > 2 && void 0 !== m[2] ? m[2] : -1),
                        (r = m.length > 3 && void 0 !== m[3] ? m[3] : -1),
                        (e.prev = 2),
                        (l = -1 != r ? "&start=".concat(r.toString()) : ""),
                        (i = n >= 0 ? "&category=".concat(n) : ""),
                        (o = "&sort=".concat(a)),
                        (s = "&limit=".concat(a === um.Hot ? Cm : Sm)),
                        (e.next = 9),
                        fetch(
                          "".concat(Im, "/database/feed/player?id=").concat(t).concat(s).concat(o).concat(i).concat(l),
                          { credentials: "include" }
                        )
                      );
                    case 9:
                      return (c = e.sent), (e.next = 12), c.json();
                    case 12:
                      return (u = e.sent), e.abrupt("return", u);
                    case 16:
                      (e.prev = 16), (e.t0 = e.catch(2)), console.log(e.t0);
                    case 19:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[2, 16]]
            );
          })
        )).apply(this, arguments);
      }
      function lA(e, t) {
        return iA.apply(this, arguments);
      }
      function iA() {
        return (iA = Object(h.a)(
          f.a.mark(function e(t, a) {
            var n,
              r,
              l,
              i,
              o,
              s,
              c,
              u,
              m = arguments;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (n = m.length > 2 && void 0 !== m[2] ? m[2] : -1),
                        (r = m.length > 3 && void 0 !== m[3] ? m[3] : -1),
                        (e.prev = 2),
                        (l = -1 != r ? "&start=".concat(r.toString()) : ""),
                        (i = n >= 0 ? "&category=".concat(n) : ""),
                        (o = "&sort=".concat(a)),
                        (s = "&limit=".concat(a === um.Hot ? Cm : Sm)),
                        (e.next = 9),
                        fetch(
                          "".concat(Im, "/database/feed/team?id=").concat(t).concat(s).concat(o).concat(i).concat(l),
                          { credentials: "include" }
                        )
                      );
                    case 9:
                      return (c = e.sent), (e.next = 12), c.json();
                    case 12:
                      return (u = e.sent), e.abrupt("return", u);
                    case 16:
                      (e.prev = 16), (e.t0 = e.catch(2)), console.log(e.t0);
                    case 19:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[2, 16]]
            );
          })
        )).apply(this, arguments);
      }
      function oA(e, t) {
        return sA.apply(this, arguments);
      }
      function sA() {
        return (sA = Object(h.a)(
          f.a.mark(function e(t, a) {
            var n,
              r,
              l,
              i,
              o,
              s,
              c,
              u = arguments;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (n = u.length > 2 && void 0 !== u[2] ? u[2] : -1),
                        (r = u.length > 3 && void 0 !== u[3] ? u[3] : -1),
                        (e.prev = 2),
                        (l = -1 != r ? "&start=".concat(r.toString()) : ""),
                        (i = n >= 0 ? "&category=".concat(n) : ""),
                        (o = "&sort=".concat(a)),
                        (e.next = 8),
                        fetch("".concat(Im, "/database/feed/game?id=").concat(t).concat(o).concat(i).concat(l), {
                          credentials: "include",
                        })
                      );
                    case 8:
                      return (s = e.sent), (e.next = 11), s.json();
                    case 11:
                      return (c = e.sent), e.abrupt("return", c);
                    case 15:
                      (e.prev = 15), (e.t0 = e.catch(2)), console.log(e.t0);
                    case 18:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[2, 15]]
            );
          })
        )).apply(this, arguments);
      }
      function cA(e, t) {
        return uA.apply(this, arguments);
      }
      function uA() {
        return (uA = Object(h.a)(
          f.a.mark(function e(t, a) {
            var n, r;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0),
                        (e.next = 3),
                        fetch("".concat(Im, "/database/feedbyphase?phase=").concat(a, "&season=").concat(t), {
                          credentials: "include",
                        })
                      );
                    case 3:
                      return (n = e.sent), (e.next = 6), n.json();
                    case 6:
                      return (r = e.sent), e.abrupt("return", r);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function mA(e) {
        return AA.apply(this, arguments);
      }
      function AA() {
        return (AA = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0),
                        (e.next = 3),
                        fetch("".concat(Im, "/database/renovations?ids=").concat(t), { credentials: "include" })
                      );
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function dA() {
        return fA.apply(this, arguments);
      }
      function fA() {
        return (fA = Object(h.a)(
          f.a.mark(function e() {
            var t, a;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/giftProgress"));
                    case 3:
                      return (t = e.sent), (e.next = 6), t.json();
                    case 6:
                      return (a = e.sent), e.abrupt("return", a);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function hA(e) {
        return gA.apply(this, arguments);
      }
      function gA() {
        return (gA = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0),
                        (e.next = 3),
                        fetch("".concat(Im, "/database/renovationProgress?id=").concat(t), { credentials: "include" })
                      );
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function pA(e) {
        return EA.apply(this, arguments);
      }
      function EA() {
        return (EA = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/teamElectionStats?id=").concat(t))
                      );
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function vA(e) {
        return bA.apply(this, arguments);
      }
      function bA() {
        return (bA = Object(h.a)(
          f.a.mark(function e(t) {
            var a, n;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/getPreviousChamp?season=").concat(t))
                      );
                    case 3:
                      return (a = e.sent), (e.next = 6), a.json();
                    case 6:
                      return (n = e.sent), e.abrupt("return", n);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function wA() {
        return yA.apply(this, arguments);
      }
      function yA() {
        return (yA = Object(h.a)(
          f.a.mark(function e() {
            var t, a;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/sunsun"));
                    case 3:
                      return (t = e.sent), (e.next = 6), t.json();
                    case 6:
                      return (a = e.sent), e.abrupt("return", a);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      function BA() {
        return OA.apply(this, arguments);
      }
      function OA() {
        return (OA = Object(h.a)(
          f.a.mark(function e() {
            var t, a;
            return f.a.wrap(
              function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.prev = 0), (e.next = 3), fetch("".concat(Im, "/database/playerNamesIds"));
                    case 3:
                      return (t = e.sent), (e.next = 6), t.json();
                    case 6:
                      return (a = e.sent), e.abrupt("return", a);
                    case 10:
                      (e.prev = 10), (e.t0 = e.catch(0)), console.log(e.t0);
                    case 13:
                    case "end":
                      return e.stop();
                  }
              },
              e,
              null,
              [[0, 10]]
            );
          })
        )).apply(this, arguments);
      }
      var IA = l.a.createContext({ menu: [], snackData: {} }),
        SA = function (e) {
          var t,
            a = e.children,
            n = Object(r.useContext)(S.context),
            i = Object(r.useState)({ menu: [], snackData: {} }),
            o = Object(s.a)(i, 2),
            c = o[0],
            u = o[1];
          function m() {
            return A.apply(this, arguments);
          }
          function A() {
            return (A = Object(h.a)(
              f.a.mark(function e() {
                var t;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (e.next = 2), Fm();
                      case 2:
                        (t = e.sent), u(t);
                      case 4:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            )).apply(this, arguments);
          }
          return (
            Object(r.useEffect)(function () {
              m();
            }, []),
            Object(r.useEffect)(
              function () {
                m();
              },
              [null === (t = n.sim) || void 0 === t ? void 0 : t.menu]
            ),
            (<IA.Provider value={c}>{a}</IA.Provider>)
          );
        };
      SA.context = IA;
      var CA = SA;
      function kA(e) {
        var t,
          a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0.2;
        if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(e))
          return (
            3 == (t = e.substring(1).split("")).length && (t = [t[0], t[0], t[1], t[1], t[2], t[2]]),
            "rgba(" + [((t = "0x" + t.join("")) >> 16) & 255, (t >> 8) & 255, 255 & t].join(",") + ",".concat(a, ")")
          );
        throw new Error("Bad Hex");
      }
      function NA(e) {
        e = e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function (e, t, a, n) {
          return t + t + a + a + n + n;
        });
        var t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e),
          a = null;
        if ((t && (a = { r: parseInt(t[1], 16), g: parseInt(t[2], 16), b: parseInt(t[3], 16) }), null === a))
          return "#ffffff";
        var n = [a.r, a.g, a.b].map(function (e) {
            return (e /= 255) <= 0.03928 ? e / 12.92 : Math.pow((e + 0.055) / 1.055, 2.4);
          }),
          r = 0.2126 * n[0] + 0.7152 * n[1] + 0.0722 * n[2];
        return (r + 0.05) / 0.05 > 1.05 / (r + 0.05) ? "#000000" : "#ffffff";
      }
      function TA(e, t) {
        var a = Math.pow(10, t);
        return Math.round(e * a) / a;
      }
      function xA() {
        var e = [0],
          t = new Date();
        if ((t.setMinutes(t.getMinutes() + 1, 0, 0), 0 == e.length)) return t;
        for (var a = !1; !a; ) {
          for (var n = t.getMinutes(), r = 0; r < e.length; r++)
            if (e[r] == n) {
              a = !0;
              break;
            }
          a || t.setMinutes(n + 1, 0, 0);
        }
        return t;
      }
      function PA(e, t) {
        if (void 0 === e) return !1;
        for (var a = 0; a < e.attr.length; a++) if (e.attr[a] === t) return !0;
        return !1;
      }
      function MA(e, t) {
        return (
          void 0 !== e &&
          (e.permAttr.includes(t) ||
            e.seasAttr.includes(t) ||
            e.weekAttr.includes(t) ||
            e.gameAttr.includes(t) ||
            e.itemAttr.includes(t))
        );
      }
      function LA(e, t) {
        var a = t.leagues[0];
        if (void 0 === a) return !1;
        var n = !1;
        return (
          a.subleagues.forEach(function (a) {
            var r = t.subleagues.find(function (e) {
              return e.id === a;
            });
            void 0 !== r &&
              r.divisions.forEach(function (a) {
                var r = t.divisions.find(function (e) {
                  return e.id === a;
                });
                void 0 !== r &&
                  r.teams.forEach(function (t) {
                    t === e && (n = !0);
                  });
              });
          }),
          n
        );
      }
      function RA(e) {
        return void 0 !== e && e.phase >= 3 && e.phase <= 4;
      }
      function DA(e) {
        return void 0 === e ? String.fromCodePoint(Number("0x2753")) : FA(e.emoji);
      }
      function FA(e) {
        var t = Number(e);
        return isNaN(t) ? e : String.fromCodePoint(t);
      }
      function QA(e, t, a, n) {
        var r = void 0 !== t.filters.leagueLocation ? t.filters.leagueLocation : "inLeague",
          l = [];
        if (void 0 === e) return l;
        if ("anywhere" === r) l = e.teams;
        else {
          if (void 0 === e.leagues || void 0 === e.leagues[0]) return l;
          var i = e.leagues[0].subleagues,
            o = [];
          if (
            (e.subleagues.map(function (e) {
              i.includes(e.id) && (o = o.concat(e.divisions));
            }),
            "inLeague" === r)
          ) {
            var s = [];
            if (
              (e.divisions.map(function (e) {
                o.includes(e.id) && (s = s.concat(e.teams));
              }),
              n)
            ) {
              var c = s.indexOf(a);
              c > -1 && s.splice(c, 1);
            }
            var u = [];
            e.teams.map(function (e) {
              s.includes(e.id) && u.push(e);
            }),
              (l = u);
          } else if ("inSubleague" === r) {
            var m = "";
            e.divisions.map(function (e) {
              o.includes(e.id) &&
                e.teams.find(function (e) {
                  return e === a;
                }) &&
                (m = e.id);
            }),
              e.subleagues.map(function (e) {
                i.includes(e.id) &&
                  e.divisions.find(function (e) {
                    return e === m;
                  }) &&
                  (o = e.divisions);
              });
            var A = [];
            if (
              (e.divisions.map(function (e) {
                o.includes(e.id) && (A = A.concat(e.teams));
              }),
              n)
            ) {
              var d = A.indexOf(a);
              d > -1 && A.splice(d, 1);
            }
            var f = [];
            e.teams.map(function (e) {
              A.includes(e.id) && f.push(e);
            }),
              (l = f);
          } else if ("oppSubleague" === r) {
            var h = "";
            e.divisions.map(function (e) {
              o.includes(e.id) &&
                e.teams.find(function (e) {
                  return e === a;
                }) &&
                (h = e.id);
            });
            var g = "";
            e.subleagues.map(function (e) {
              i.includes(e.id) && e.divisions.includes(h) && (g = e.id);
            });
            var p = "";
            i.map(function (e) {
              e !== g && (p = e);
            }),
              e.subleagues.map(function (e) {
                p === e.id && (o = e.divisions);
              });
            var E = [];
            e.divisions.map(function (e) {
              o.includes(e.id) && (E = E.concat(e.teams));
            });
            var v = [];
            e.teams.map(function (e) {
              E.includes(e.id) && v.push(e);
            }),
              (l = v);
          } else if ("inDivision" === r) {
            var b = [];
            if (
              (e.divisions.map(function (e) {
                o.includes(e.id) &&
                  e.teams.find(function (e) {
                    return e === a;
                  }) &&
                  (b = b.concat(e.teams));
              }),
              n)
            ) {
              var w = b.indexOf(a);
              w > -1 && b.splice(w, 1);
            }
            var y = [];
            e.teams.map(function (e) {
              b.includes(e.id) && y.push(e);
            }),
              (l = y);
          }
        }
        return l;
      }
      function jA(e, t) {
        var a = [];
        if (void 0 !== e && null !== e) {
          if ("batter" === t || "all" === t || "any" === t)
            for (var n = 0; n < e.lineup.length; n++) a.push(e.lineup[n]);
          if ("pitcher" === t || "all" === t || "any" === t)
            for (var r = 0; r < e.rotation.length; r++) a.push(e.rotation[r]);
          if ("shadows" === t || "any" === t) for (var l = 0; l < e.shadows.length; l++) a.push(e.shadows[l]);
        }
        return a;
      }
      function VA(e, t, a, n, r, l, i) {
        var o = [];
        if (void 0 !== e && null !== e) {
          if ("batter" === t || "all" === t || "any" === t)
            for (
              var s = function (t) {
                  var i = a.find(function (a) {
                    return e.lineup[t] === a.id;
                  });
                  if (void 0 !== i && GA(i))
                    if (n) {
                      var s = HA(i);
                      s && o.push(s);
                    } else if (l && r) {
                      var c = YA(i, r, l);
                      c && o.push(c);
                    } else
                      o.push({
                        id: i.id,
                        fullName: i.name,
                        mods: i.permAttr,
                        stars: {
                          batting: i.hittingRating,
                          pitching: i.pitchingRating,
                          baserunning: i.baserunningRating,
                          defense: i.defenseRating,
                        },
                        items: i.items,
                      });
                },
                c = 0;
              c < e.lineup.length;
              c++
            )
              s(c);
          if ("batter" === t || "all" === t || "any" === t)
            for (
              var u = function (t) {
                  var i = a.find(function (a) {
                    return e.rotation[t] === a.id;
                  });
                  if (void 0 !== i && GA(i))
                    if (n) {
                      var s = HA(i);
                      s && o.push(s);
                    } else if (l && r) {
                      var c = YA(i, r, l);
                      c && o.push(c);
                    } else
                      o.push({
                        id: i.id,
                        fullName: i.name,
                        mods: i.permAttr,
                        stars: {
                          batting: i.hittingRating,
                          pitching: i.pitchingRating,
                          baserunning: i.baserunningRating,
                          defense: i.defenseRating,
                        },
                        items: i.items,
                      });
                },
                m = 0;
              m < e.rotation.length;
              m++
            )
              u(m);
          if ("shadows" === t || "any" === t)
            for (
              var A = function (t) {
                  var i = a.find(function (a) {
                    return e.shadows[t] === a.id;
                  });
                  if (void 0 !== i && GA(i))
                    if (n) {
                      var s = HA(i);
                      s && o.push(s);
                    } else if (l && r) {
                      var c = YA(i, r, l);
                      c && o.push(c);
                    } else
                      o.push({
                        id: i.id,
                        fullName: i.name,
                        mods: i.permAttr,
                        stars: {
                          batting: i.hittingRating,
                          pitching: i.pitchingRating,
                          baserunning: i.baserunningRating,
                          defense: i.defenseRating,
                        },
                        items: i.items,
                      });
                },
                d = 0;
              d < e.shadows.length;
              d++
            )
              A(d);
        }
        return o;
      }
      var WA = [
          "RETURNED",
          "ALTERNATE",
          "SHELLED",
          "INVERTED",
          "BASE_INSTINCTS",
          "GROWTH",
          "O",
          "H2O",
          "O_NO",
          "ELECTRIC",
          "LOVE",
          "INHABITING",
          "UNDERPERFORMING",
          "OVERPERFORMING",
          "EGO1",
          "EGO2",
          "EGO3",
          "EGO4",
          "LEGENDARY",
          "FUGITIVE",
          "DEBT",
          "HARD_BOILED",
          "ELSEWHERE",
          "SCATTERED",
          "STATIC",
          "ECHO",
          "FIRST_BORN",
          "COFFEE_EXIT",
          "RETIRED",
          "REDACTED",
          "OVERUNDER",
          "UNDEROVER",
          "PSYCHIC",
          "FIERY",
          "AAA",
          "AA",
          "YOLKED",
          "REPLICA",
          "DUST",
        ],
        UA = ["REPLICA"];
      function GA(e) {
        var t = !0;
        return (
          e.permAttr.length > 0 &&
            e.permAttr.forEach(function (e) {
              UA.includes(e) && (t = !1);
            }),
          t
        );
      }
      function HA(e) {
        if (e.permAttr.length > 0) {
          var t = [];
          if (
            (e.permAttr.forEach(function (a) {
              var n =
                  void 0 === e.state.permModSources ||
                  void 0 === e.state.permModSources[a] ||
                  e.state.permModSources[a].length < 1,
                r = !WA.includes(a);
              n && r && t.push(a);
            }),
            t.length > 0)
          )
            return {
              id: e.id,
              fullName: e.name,
              mods: t,
              stars: {
                batting: e.hittingRating,
                pitching: e.pitchingRating,
                baserunning: e.baserunningRating,
                defense: e.defenseRating,
              },
              items: e.items,
            };
        }
      }
      function YA(e, t, a) {
        var n = e.hittingRating + e.pitchingRating + e.baserunningRating + e.defenseRating;
        if (Math.abs(n - a) <= t)
          return {
            id: e.id,
            fullName: e.name,
            mods: e.permAttr,
            stars: {
              batting: e.hittingRating,
              pitching: e.pitchingRating,
              baserunning: e.baserunningRating,
              defense: e.defenseRating,
            },
            items: e.items,
          };
      }
      function zA(e) {
        switch (e) {
          case G.Magician:
            return ["I", "The Magician"];
          case G.HighPriestess:
            return ["II", "The High Priestess"];
          case G.Empress:
            return ["III", "The Empress"];
          case G.Emperor:
            return ["IIII", "The Emperor"];
          case G.Heirophant:
            return ["V", "The Hierophant"];
          case G.Lover:
            return ["VI", "The Lover"];
          case G.Chariot:
            return ["VII", "The Chariot"];
          case G.Justice:
            return ["VIII", "Justice"];
          case G.Hermit:
            return ["VIIII", "The Hermit"];
          case G.Fortune:
            return ["X", "The Wheel of Fortune"];
          case G.Strength:
            return ["XI", "Strength"];
          case G.HangedMan:
            return ["XII", "The Hanged Man"];
          case G.XIII:
            return ["XIII", ""];
          case G.Temperance:
            return ["XIIII", "Temperance"];
          case G.Devil:
            return ["XV", "The Devil"];
          case G.Tower:
            return ["XVI", "The Tower"];
          case G.Star:
            return ["XVII", "The Star"];
          case G.Moon:
            return ["XVIII", "The Moon"];
          case G.Sun:
            return ["XVIIII", "The Sun"];
          case G.Judgment:
            return ["XX", "Judgment"];
          case G.Fool:
            return ["", "Fool"];
          default:
            return ["----", "-----"];
        }
      }
      function XA(e, t) {
        var a,
          n = qA(e),
          r = null !== (a = e.evolution) && void 0 !== a ? a : 0,
          l = ZA(2, e.items);
        return t ? fo(n, r, l, t) : fo(n, r, l);
      }
      function JA(e, t) {
        var a,
          n = (function (e) {
            return e.pitchingRating;
          })(e),
          r = null !== (a = e.evolution) && void 0 !== a ? a : 0,
          l = ZA(1, e.items);
        return t ? fo(n, r, l, t) : fo(n, r, l);
      }
      function ZA(e, t) {
        var a = 0;
        if (void 0 === t || 0 === t.length) return a;
        var n,
          r = Object(z.a)(t);
        try {
          for (r.s(); !(n = r.n()).done; ) {
            var l = n.value;
            if (!(l.health <= 0))
              switch (e) {
                case 0:
                  a += void 0 === l.baserunningRating ? 0 : l.baserunningRating;
                  break;
                case 1:
                  a += void 0 === l.pitchingRating ? 0 : l.pitchingRating;
                  break;
                case 2:
                  a += void 0 === l.hittingRating ? 0 : l.hittingRating;
                  break;
                case 3:
                  a += void 0 === l.defenseRating ? 0 : l.defenseRating;
                  break;
                case 4:
                  (a += void 0 === l.defenseRating ? 0 : l.defenseRating),
                    (a += void 0 === l.baserunningRating ? 0 : l.baserunningRating),
                    (a += void 0 === l.pitchingRating ? 0 : l.pitchingRating),
                    (a += void 0 === l.hittingRating ? 0 : l.hittingRating);
              }
          }
        } catch (i) {
          r.e(i);
        } finally {
          r.f();
        }
        return TA(5 * a, 1);
      }
      function qA(e) {
        return e.hittingRating;
      }
      function KA(e) {
        return Number((e / 0.2).toFixed(1));
      }
      function _A(e, t) {
        var a = Object(r.useContext)(CA.context);
        return void 0 === ne.GetTiers(e, a.snackData) ? t : t + 1;
      }
      var $A,
        ed = a(262);
      function td(e) {
        var t = e.toString(),
          a = t.split(".");
        return "00" == a[1] ? a[0] : "0" === a[0] && a[1] ? "." + a[1] : t;
      }
      function ad(e) {
        return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      }
      var nd = ["title", "titleId"];
      function rd() {
        return (rd =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ld(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function id(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ld(e, nd);
        return (
          <svg
            {...rd(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {$A ||
              ($A = (
                <image
                  id="_01-Rodeo_A"
                  data-name="01-Rodeo_A"
                  x={79.5}
                  y={79.5}
                  width={97}
                  height={97}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var od,
        sd = r.forwardRef(id),
        cd = (a.p, ["title", "titleId"]);
      function ud() {
        return (ud =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function md(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ad(e, t) {
        var a = e.title,
          n = e.titleId,
          l = md(e, cd);
        return (
          <svg
            {...ud(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {od ||
              (od = (
                <image
                  id="_01-Rodeo_B"
                  data-name="01-Rodeo_B"
                  x={72.5}
                  y={68.5}
                  width={111}
                  height={119}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var dd,
        fd = r.forwardRef(Ad),
        hd = (a.p, ["title", "titleId"]);
      function gd() {
        return (gd =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function pd(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ed(e, t) {
        var a = e.title,
          n = e.titleId,
          l = pd(e, hd);
        return (
          <svg
            {...gd(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {dd ||
              (dd = (
                <image
                  id="_02-Loge_A"
                  data-name="02-Loge_A"
                  x={94}
                  y={86.5}
                  width={68}
                  height={83}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var vd,
        bd = r.forwardRef(Ed),
        wd = (a.p, ["title", "titleId"]);
      function yd() {
        return (yd =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Bd(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Od(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Bd(e, wd);
        return (
          <svg
            {...yd(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {vd ||
              (vd = (
                <image
                  id="_02-Loge_B"
                  data-name="02-Loge_B"
                  x={43}
                  y={80.5}
                  width={170}
                  height={95}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Id,
        Sd = r.forwardRef(Od),
        Cd = (a.p, ["title", "titleId"]);
      function kd() {
        return (kd =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Nd(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Td(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Nd(e, Cd);
        return (
          <svg
            {...kd(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Id ||
              (Id = (
                <image
                  id="_03-Pine_A"
                  data-name="03-Pine_A"
                  x={51.5}
                  y={59.5}
                  width={153}
                  height={137}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var xd,
        Pd = r.forwardRef(Td),
        Md = (a.p, ["title", "titleId"]);
      function Ld() {
        return (Ld =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Rd(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Dd(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Rd(e, Md);
        return (
          <svg
            {...Ld(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {xd ||
              (xd = (
                <image
                  id="_03-Pine_B"
                  data-name="03-Pine_B"
                  x={91}
                  y={50}
                  width={74}
                  height={156}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Fd,
        Qd = r.forwardRef(Dd),
        jd = (a.p, ["title", "titleId"]);
      function Vd() {
        return (Vd =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Wd(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ud(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Wd(e, jd);
        return (
          <svg
            {...Vd(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Fd ||
              (Fd = (
                <image
                  id="_04-Boreal_A"
                  data-name="04-Boreal_A"
                  x={72}
                  y={45}
                  width={112}
                  height={166}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Gd,
        Hd = r.forwardRef(Ud),
        Yd = (a.p, ["title", "titleId"]);
      function zd() {
        return (zd =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Xd(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Jd(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Xd(e, Yd);
        return (
          <svg
            {...zd(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Gd ||
              (Gd = (
                <image
                  id="_04-Boreal_B"
                  data-name="04-Boreal_B"
                  x={58}
                  y={58}
                  width={140}
                  height={140}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Zd,
        qd = r.forwardRef(Jd),
        Kd = (a.p, ["title", "titleId"]);
      function _d() {
        return (_d =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function $d(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ef(e, t) {
        var a = e.title,
          n = e.titleId,
          l = $d(e, Kd);
        return (
          <svg
            {..._d(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Zd ||
              (Zd = (
                <image
                  id="_05-Palmero_A"
                  data-name="05-Palmero_A"
                  x={49.5}
                  y={45}
                  width={157}
                  height={166}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var tf,
        af = r.forwardRef(ef),
        nf = (a.p, ["title", "titleId"]);
      function rf() {
        return (rf =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function lf(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function of(e, t) {
        var a = e.title,
          n = e.titleId,
          l = lf(e, nf);
        return (
          <svg
            {...rf(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {tf ||
              (tf = (
                <image
                  id="_05-Palmero_B"
                  data-name="05-Palmero_B"
                  x={49}
                  y={57}
                  width={158}
                  height={142}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var sf,
        cf = r.forwardRef(of),
        uf = (a.p, ["title", "titleId"]);
      function mf() {
        return (mf =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Af(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function df(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Af(e, uf);
        return (
          <svg
            {...mf(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {sf ||
              (sf = (
                <image
                  id="_06-Silverada_A"
                  data-name="06-Silverada_A"
                  x={39.5}
                  y={101.5}
                  width={177}
                  height={53}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ff,
        hf = r.forwardRef(df),
        gf = (a.p, ["title", "titleId"]);
      function pf() {
        return (pf =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Ef(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function vf(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Ef(e, gf);
        return (
          <svg
            {...pf(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ff ||
              (ff = (
                <image
                  id="_06-Silverada_B"
                  data-name="06-Silverada_B"
                  x={60}
                  y={64}
                  width={136}
                  height={128}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var bf,
        wf = r.forwardRef(vf),
        yf = (a.p, ["title", "titleId"]);
      function Bf() {
        return (Bf =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Of(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function If(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Of(e, yf);
        return (
          <svg
            {...Bf(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {bf ||
              (bf = (
                <image
                  id="_07-Douglas_A"
                  data-name="07-Douglas_A"
                  x={30}
                  y={43}
                  width={196}
                  height={170}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Sf,
        Cf = r.forwardRef(If),
        kf = (a.p, ["title", "titleId"]);
      function Nf() {
        return (Nf =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Tf(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function xf(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Tf(e, kf);
        return (
          <svg
            {...Nf(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Sf ||
              (Sf = (
                <image
                  id="_07-Douglas_B"
                  data-name="07-Douglas_B"
                  x={38}
                  y={51}
                  width={180}
                  height={154}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Pf,
        Mf = r.forwardRef(xf),
        Lf = (a.p, ["title", "titleId"]);
      function Rf() {
        return (Rf =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Df(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ff(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Df(e, Lf);
        return (
          <svg
            {...Rf(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Pf ||
              (Pf = (
                <image
                  id="_08-Hillcrest_A"
                  data-name="08-Hillcrest_A"
                  x={35}
                  y={35}
                  width={186}
                  height={186}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Qf,
        jf = r.forwardRef(Ff),
        Vf = (a.p, ["title", "titleId"]);
      function Wf() {
        return (Wf =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Uf(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Gf(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Uf(e, Vf);
        return (
          <svg
            {...Wf(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Qf ||
              (Qf = (
                <image
                  id="_08-Hillcrest_B"
                  data-name="08-Hillcrest_B"
                  x={41}
                  y={41}
                  width={174}
                  height={174}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Hf,
        Yf = r.forwardRef(Gf),
        zf = (a.p, ["title", "titleId"]);
      function Xf() {
        return (Xf =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Jf(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Zf(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Jf(e, zf);
        return (
          <svg
            {...Xf(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Hf ||
              (Hf = (
                <image
                  id="_09-Twede_A"
                  data-name="09-Twede_A"
                  x={48}
                  y={35}
                  width={160}
                  height={186}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var qf,
        Kf = r.forwardRef(Zf),
        _f = (a.p, ["title", "titleId"]);
      function $f() {
        return ($f =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function eh(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function th(e, t) {
        var a = e.title,
          n = e.titleId,
          l = eh(e, _f);
        return (
          <svg
            {...$f(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {qf ||
              (qf = (
                <image
                  id="_09-Twede_B"
                  data-name="09-Twede_B"
                  x={36}
                  y={21}
                  width={184}
                  height={214}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var ah,
        nh = r.forwardRef(th);
      a.p;
      !(function (e) {
        (e[(e.GameWidget = 0)] = "GameWidget"), (e[(e.TeamModal = 1)] = "TeamModal");
      })(ah || (ah = {}));
      var rh = function (e) {
          return (
            <div className={ih(e.style)} aria-label={e.stadium.nickname} style={{ background: e.stadium.mainColor }}>
              <div className="Team-Stadium-IconA" aria-hidden={!0} style={{ filter: oh(e.stadium.secondaryColor) }}>
                {(function (e) {
                  switch (e) {
                    case 0:
                      return <af />;
                    case 1:
                      return <hf />;
                    case 2:
                      return <Cf />;
                    case 3:
                      return <jf />;
                    case 4:
                      return <Kf />;
                    case 5:
                      return <sd />;
                    case 6:
                      return <bd />;
                    case 7:
                      return <Pd />;
                    case 8:
                      return <Hd />;
                  }
                  return <ce.d />;
                })(e.index)}
              </div>
              <div className="Team-Stadium-IconB" aria-hidden={!0} style={{ filter: oh(e.stadium.tertiaryColor) }}>
                {(function (e) {
                  switch (e) {
                    case 0:
                      return <cf />;
                    case 1:
                      return <wf />;
                    case 2:
                      return <Mf />;
                    case 3:
                      return <Yf />;
                    case 4:
                      return <nh />;
                    case 5:
                      return <fd />;
                    case 6:
                      return <Sd />;
                    case 7:
                      return <Qd />;
                    case 8:
                      return <qd />;
                  }
                  return <ce.d />;
                })(e.index)}
              </div>
            </div>
          );
        },
        lh = function (e) {
          return (
            <div className={ih(e.style)} style={{ background: "#b8b8b8" }}>
              {String.fromCodePoint(Number("0x2753"))}
            </div>
          );
        };
      function ih(e) {
        switch (e) {
          case ah.GameWidget:
            return "Team-Stadium-IconSmall";
          case ah.TeamModal:
            return "Team-Stadium-IconLarge";
        }
        return "";
      }
      function oh(e) {
        switch (e) {
          case "#ab8287":
            return "brightness(0) saturate(100%) invert(75%) sepia(9%) saturate(1312%) hue-rotate(304deg) brightness(75%) contrast(69%)";
          case "#d9c1c3":
            return "brightness(0) saturate(100%) invert(87%) sepia(7%) saturate(512%) hue-rotate(306deg) brightness(97%) contrast(78%)";
          case "#275b62":
            return "brightness(0) saturate(100%) invert(30%) sepia(13%) saturate(1852%) hue-rotate(139deg) brightness(93%) contrast(86%)";
          case "#5fa7b0":
            return "brightness(0) saturate(100%) invert(65%) sepia(11%) saturate(1418%) hue-rotate(138deg) brightness(93%) contrast(84%)";
          case "#9e3d47":
            return "brightness(0) saturate(100%) invert(31%) sepia(11%) saturate(3538%) hue-rotate(306deg) brightness(93%) contrast(89%)";
          case "#c2656e":
            return "brightness(0) saturate(100%) invert(51%) sepia(26%) saturate(809%) hue-rotate(305deg) brightness(89%) contrast(98%)";
          case "#fff2fb":
            return "brightness(0) saturate(100%) invert(90%) sepia(15%) saturate(265%) hue-rotate(295deg) brightness(103%) contrast(106%)";
          case "#e8c1dc":
            return "brightness(0) saturate(100%) invert(88%) sepia(13%) saturate(679%) hue-rotate(283deg) brightness(92%) contrast(98%)";
          case "#bb8fc4":
            return "brightness(0) saturate(100%) invert(59%) sepia(21%) saturate(559%) hue-rotate(244deg) brightness(100%) contrast(92%)";
          case "#eadcef":
            return "brightness(0) saturate(100%) invert(92%) sepia(15%) saturate(365%) hue-rotate(217deg) brightness(98%) contrast(92%)";
          case "#634675":
            return "brightness(0) saturate(100%) invert(30%) sepia(7%) saturate(3229%) hue-rotate(233deg) brightness(91%) contrast(85%)";
          case "#0e0812":
            return "brightness(0) saturate(100%) invert(3%) sepia(8%) saturate(6955%) hue-rotate(242deg) brightness(94%) contrast(98%)";
          case "#692277":
            return "brightness(0) saturate(100%) invert(19%) sepia(35%) saturate(3250%) hue-rotate(266deg) brightness(90%) contrast(99%)";
          case "#9f51ad":
            return "brightness(0) saturate(100%) invert(44%) sepia(24%) saturate(1257%) hue-rotate(245deg) brightness(88%) contrast(96%)";
          case "#4d3d00":
            return "brightness(0) saturate(100%) invert(17%) sepia(87%) saturate(1402%) hue-rotate(36deg) brightness(102%) contrast(101%)";
          case "#8a6e00":
            return "brightness(0) saturate(100%) invert(42%) sepia(12%) saturate(3820%) hue-rotate(15deg) brightness(96%) contrast(101%)";
          case "#ffdbe7":
            return "brightness(0) saturate(100%) invert(90%) sepia(12%) saturate(1113%) hue-rotate(296deg) brightness(102%) contrast(110%)";
          case "#f57aa5":
            return "brightness(0) saturate(100%) invert(75%) sepia(51%) saturate(2864%) hue-rotate(295deg) brightness(98%) contrast(96%)";
          case "#111112":
            return "brightness(0) saturate(100%) invert(6%) sepia(1%) saturate(2148%) hue-rotate(202deg) brightness(103%) contrast(100%)";
          case "#434345":
            return "brightness(0) saturate(100%) invert(21%) sepia(5%) saturate(276%) hue-rotate(201deg) brightness(97%) contrast(81%)";
          case "#ffb8C6":
            return "brightness(0) saturate(100%) invert(80%) sepia(13%) saturate(1025%) hue-rotate(303deg) brightness(95%) contrast(114%)";
          case "#c7425c":
            return "brightness(0) saturate(100%) invert(32%) sepia(32%) saturate(2355%) hue-rotate(312deg) brightness(98%) contrast(87%)";
          case "#0b7517":
            return "brightness(0) saturate(100%) invert(27%) sepia(19%) saturate(6004%) hue-rotate(106deg) brightness(98%) contrast(91%)";
          case "#073b0e":
            return "brightness(0) saturate(100%) invert(16%) sepia(13%) saturate(7050%) hue-rotate(100deg) brightness(83%) contrast(95%)";
          case "#0a5c50":
            return "brightness(0) saturate(100%) invert(25%) sepia(12%) saturate(4579%) hue-rotate(130deg) brightness(98%) contrast(92%)";
          case "#0b231d":
            return "brightness(0) saturate(100%) invert(8%) sepia(9%) saturate(6849%) hue-rotate(128deg) brightness(94%) contrast(91%)";
          case "#d4daec":
            return "brightness(0) saturate(100%) invert(91%) sepia(4%) saturate(851%) hue-rotate(191deg) brightness(97%) contrast(91%)";
          case "#91a1c9":
            return "brightness(0) saturate(100%) invert(71%) sepia(12%) saturate(867%) hue-rotate(185deg) brightness(90%) contrast(85%)";
          case "#1c436b":
            return "brightness(0) saturate(100%) invert(18%) sepia(31%) saturate(2365%) hue-rotate(183deg) brightness(96%) contrast(86%)";
          case "#111a22":
            return "brightness(0) saturate(100%) invert(7%) sepia(39%) saturate(651%) hue-rotate(166deg) brightness(98%) contrast(94%)";
          case "#474400":
            return "brightness(0) saturate(100%) invert(25%) sepia(17%) saturate(2552%) hue-rotate(23deg) brightness(96%) contrast(103%)";
          case "#b5af26":
            return "brightness(0) saturate(100%) invert(72%) sepia(42%) saturate(685%) hue-rotate(16deg) brightness(85%) contrast(99%)";
          case "#d17588":
            return "brightness(0) saturate(100%) invert(62%) sepia(18%) saturate(1155%) hue-rotate(298deg) brightness(86%) contrast(88%)";
          case "#f8e7ee":
            return "brightness(0) saturate(100%) invert(88%) sepia(30%) saturate(85%) hue-rotate(290deg) brightness(101%) contrast(94%)";
          case "#7acca5":
            return "brightness(0) saturate(100%) invert(84%) sepia(11%) saturate(1225%) hue-rotate(97deg) brightness(89%) contrast(83%)";
          case "#dbfaec":
            return "brightness(0) saturate(100%) invert(88%) sepia(31%) saturate(131%) hue-rotate(96deg) brightness(105%) contrast(96%)";
          case "#a65a5a":
            return "brightness(0) saturate(100%) invert(40%) sepia(10%) saturate(2260%) hue-rotate(314deg) brightness(101%) contrast(87%)";
          case "#e8b5b5":
            return "brightness(0) saturate(100%) invert(100%) sepia(100%) saturate(1144%) hue-rotate(290deg) brightness(87%) contrast(110%)";
          case "#e5dae6":
            return "brightness(0) saturate(100%) invert(90%) sepia(13%) saturate(143%) hue-rotate(248deg) brightness(100%) contrast(86%)";
          case "#a589ab":
            return "brightness(0) saturate(100%) invert(69%) sepia(9%) saturate(920%) hue-rotate(243deg) brightness(83%) contrast(87%)";
          case "#ffa96b":
            return "brightness(0) saturate(100%) invert(86%) sepia(8%) saturate(1857%) hue-rotate(328deg) brightness(96%) contrast(97%)";
          case "#ffd8c7":
            return "brightness(0) saturate(100%) invert(77%) sepia(31%) saturate(241%) hue-rotate(328deg) brightness(107%) contrast(103%)";
          case "#ffaf96":
            return "brightness(0) saturate(100%) invert(85%) sepia(26%) saturate(505%) hue-rotate(321deg) brightness(105%) contrast(102%)";
          case "#ffddc4":
            return "brightness(0) saturate(100%) invert(70%) sepia(91%) saturate(322%) hue-rotate(312deg) brightness(101%) contrast(101%)";
          case "#a8fff5":
            return "brightness(0) saturate(100%) invert(13%) sepia(99%) saturate(3642%) hue-rotate(168deg) brightness(106%) contrast(100%)";
          case "#00332d":
            return "brightness(0) saturate(100%) invert(16%) sepia(19%) saturate(2553%) hue-rotate(129deg) brightness(91%) contrast(102%)";
          case "#ba9c65":
            return "brightness(0) saturate(100%) invert(63%) sepia(35%) saturate(434%) hue-rotate(0deg) brightness(93%) contrast(89%)";
          case "#ffe0a8":
            return "brightness(0) saturate(100%) invert(89%) sepia(18%) saturate(750%) hue-rotate(338deg) brightness(101%) contrast(101%)";
          default:
            return "";
        }
      }
      var sh = function (e) {
          var t = e.stadium;
          return void 0 === t || null === t.model ? (
            <lh style={e.style} stadium={e.stadium} />
          ) : (
            <rh stadium={t} index={t.model} style={e.style} />
          );
        },
        ch = a(0);
      function uh(e) {
        return {
          started: e.gameStart,
          complete: e.gameComplete,
          shame: e.shame,
          inning: e.inning,
          topOfInning: e.topOfInning,
          outs: e.halfInningOuts,
          outsNeeded: e.topOfInning ? e.awayOuts : e.homeOuts,
          balls: e.atBatBalls,
          ballsNeeded: e.topOfInning ? e.awayBalls : e.homeBalls,
          strikes: e.atBatStrikes,
          strikesNeeded: e.topOfInning ? e.awayStrikes : e.homeStrikes,
          bases: e.topOfInning ? e.awayBases : e.homeBases,
          weather: e.weather,
          playCount: e.playCount,
        };
      }
      function mh(e) {
        var t, a, n;
        Object(r.useContext)(M.context).user;
        if (e.complete)
          (a = "Complete"),
            (t = "Final" + (e.inning <= 9 ? "" : " (".concat(e.inning + 1, ")"))),
            (n = "Final" + (e.inning <= 9 ? "" : ", completed in inning ".concat(e.inning + 1)));
        else if (e.started)
          if (e.shame) (t = "Shame"), (a = "Shame");
          else if (-1 === e.inning) (a = "Live"), (t = "Live - 1 \u25b2"), (n = "Live, Top of Inning 1");
          else {
            a = "Live";
            var i = e.topOfInning ? "\u25b2" : "\u25bc";
            (t = "Live - ".concat(e.inning + 1, " ").concat(i)),
              (n = "Live, ".concat(e.topOfInning ? "Top" : "Bottom", " of Inning ").concat(e.inning + 1));
          }
        else (t = "Upcoming"), (a = "Upcoming");
        return (
          <div className="Widget-StatusBar">
            <div className={"Widget-Status Widget-Status--".concat(a)} aria-label={n} role="text">
              {t}
            </div>
            {e.started ? <Xu type={e.weather} tooltip={!0} /> : null}
          </div>
        );
      }
      function Ah(e, t) {
        var a, n;
        return (
          t && ((a = lo(e.homeTeam, t)), (n = lo(e.awayTeam, t))),
          {
            homeTeamName: e.homeTeamNickname,
            homeTeamRecord: a,
            homeTeamScore: td(dh(e)),
            awayTeamName: e.awayTeamNickname,
            awayTeamRecord: n,
            awayTeamScore: td(fh(e)),
            seriesIndex: e.seriesIndex,
            seriesLength: e.seriesLength,
          }
        );
      }
      function dh(e) {
        return e.homeScore;
      }
      function fh(e) {
        return e.awayScore;
      }
      function hh(e, t) {
        var a,
          n,
          r = dh(t),
          l = fh(t);
        return 1 ===
          (null === t ||
          void 0 === t ||
          null === (a = t.state) ||
          void 0 === a ||
          null === (n = a.postseason) ||
          void 0 === n
            ? void 0
            : n.bracket)
          ? e
            ? l > r
            : r > l
          : e
          ? r > l
          : l > r;
      }
      function gh(e) {
        var t = Object(r.useContext)(M.context).user,
          a = u.collection.find(function (t) {
            return t.id === e;
          });
        return a ? [a.background, a.color] : t.lightMode ? ["#000000", "#ffffff"] : ["#ffffff", "#000000"];
      }
      function ph(e) {
        var t = Object(r.useContext)(S.context),
          a = Ah(e.data, t.standings);
        return <Eh data={e.data} metaInfo={a} index={e.index} />;
      }
      function Eh(e) {
        var t,
          a,
          n,
          i,
          o = e.data,
          s = e.metaInfo,
          u = Object(r.useContext)(M.context).user,
          d = Object(r.useContext)(Y.context).activeBets,
          f = Object(r.useContext)(xo.context),
          h = Object(r.useContext)(S.context),
          g = uh(o),
          p = mh(g),
          E = (function (e) {
            Object(r.useContext)(M.context).user;
            for (var t = [], a = 0; a < e.ballsNeeded - 1; a++)
              t.push(
                <div className="Widget-Outs-Dots" aria-hidden="true" key={a}>
                  {a < e.balls ? "\u25cf" : "\u25cb"}
                </div>
              );
            for (var n = [], i = 0; i < e.strikesNeeded - 1; i++)
              n.push(
                <div className="Widget-Outs-Dots" aria-hidden="true" key={i}>
                  {i < e.strikes ? "\u25cf" : "\u25cb"}
                </div>
              );
            for (var o = [], s = 0; s < e.outsNeeded - 1; s++)
              o.push(
                <div className="Widget-Outs-Dots" aria-hidden="true" key={s}>
                  {s < e.outs ? "\u25cf" : "\u25cb"}
                </div>
              );
            return (
              <l.a.Fragment>
                <li className="Widget-Outs-Row" aria-label={"".concat(e.balls, " Balls")} role="text">
                  <div className="Widget-Outs-Label">Balls</div>
                  <div className="Widget-Outs-DotList">{t}</div>
                </li>
                <li className="Widget-Outs-Row" aria-label={"".concat(e.strikes, " Strikes")} role="text">
                  <div className="Widget-Outs-Label">Strikes</div>
                  <div className="Widget-Outs-DotList">{n}</div>
                </li>
                <li className="Widget-Outs-Row" aria-label={"".concat(e.outs, " Outs")} role="text">
                  <div className="Widget-Outs-Label">Outs</div>
                  <div className="Widget-Outs-DotList">{o}</div>
                </li>
              </l.a.Fragment>
            );
          })(g),
          v = o.topOfInning ? o.awayTeamColor : o.homeTeamColor,
          b = o.topOfInning ? o.homeTeamColor : o.awayTeamColor;
        dh(o), fh(o);
        function w() {
          return o.homeScore > o.awayScore ? o.homeTeam : o.awayTeam;
        }
        function y() {
          return o.homeScore > o.awayScore ? o.awayTeam : o.homeTeam;
        }
        function B() {
          return o.homeScore > o.awayScore ? o.homeTeamNickname : o.awayTeamNickname;
        }
        function O() {
          return o.homeScore > o.awayScore ? o.homeTeamSecondaryColor : o.awayTeamSecondaryColor;
        }
        function I(e) {
          return e === o.homeTeam ? o.homeTeamNickname : e === o.awayTeam ? o.awayTeamNickname : "Null Team";
        }
        function C(e) {
          return e === o.homeTeam
            ? o.homeTeamSecondaryColor
            : e === o.awayTeam
            ? o.awayTeamSecondaryColor
            : "Null Color";
        }
        function k() {
          return (
            <svg xmlns="http://www.w3.org/2000/svg" className="GameWidget-DunDun" viewBox="100 -20 312 412">
              <path
                className="GameWidget-DunDun-DunDun"
                d="M257.97 20.22C150.394 88.557 72.1 275.18 69.874 494.374h375.188c-2.2-219.194-79.52-405.817-187.094-474.156zm-18.845 163.06l18.344 36.282 18.342-36.28c9.99 2.326 19.72 6.537 29.063 12.437l4.156 48.56 20.095-28.624c7.938 8.123 15.48 17.558 22.594 28.156L345.436 279l18.375-15.344c24.39 44.295 42.05 103.6 49.532 170.78-10.036-32.144-26.553-60.393-47.625-82.342l4-35.813L344.093 333c-6.098-4.53-12.452-8.595-19.03-12.156l-3.345-40.97-26.314 28.876c-7.31-2.074-14.792-3.58-22.437-4.438l-15.5-33.25-15.5 33.282c-8.14.916-16.12 2.522-23.876 4.812l-24.875-27.28-3.157 38.874c-6.645 3.585-13.065 7.68-19.22 12.25l-25.624-16.72 4.03 35.814c-21.08 21.95-37.618 50.19-47.656 82.344 7.482-67.188 25.17-126.485 49.562-170.782L169.5 279l-6.28-35.188c7.37-10.983 15.213-20.71 23.468-29.03l19.25 27.374 3.937-46.312c9.4-5.963 19.193-10.22 29.25-12.563z"
                fill-opacity="1"
              />
            </svg>
          );
        }
        (n = o.gameComplete && hh(!0, o) ? { border: 2, borderColor: "#fffffff", borderStyle: "solid" } : {}),
          (i = o.gameComplete && hh(!1, o) ? { border: 2, borderColor: "#fffffff", borderStyle: "solid" } : {});
        var N = (function (e) {
            for (
              var t = {
                  onFirst: !1,
                  onSecond: !1,
                  onThird: !1,
                  onFourth: !1,
                  playerOnFirst: void 0,
                  playerOnSecond: void 0,
                  playerOnThird: void 0,
                  playerOnFourth: void 0,
                  modOnFirst: "",
                  modOnSecond: "",
                  modOnThird: "",
                  modOnFourth: "",
                },
                a = 0;
              a < e.baserunnerCount;
              a++
            ) {
              var n = e.baseRunnerNames[a],
                r = e.basesOccupied[a],
                l = e.baseRunnerMods[a];
              switch (r) {
                case 0:
                  (t.onFirst = !0), (t.playerOnFirst = n), (t.modOnFirst = l);
                  break;
                case 1:
                  (t.onSecond = !0), (t.playerOnSecond = n), (t.modOnSecond = l);
                  break;
                case 2:
                  (t.onThird = !0), (t.playerOnThird = n), (t.modOnThird = l);
                  break;
                case 3:
                  (t.onFourth = !0), (t.playerOnFourth = n), (t.modOnFourth = l);
              }
            }
            return t;
          })(o),
          T =
            N.onFirst &&
            N.onSecond &&
            N.onThird &&
            (!(g.bases > 4) || N.onFourth) &&
            g.ballsNeeded - 1 === g.balls &&
            g.outsNeeded - 1 === g.outs &&
            g.strikesNeeded - 1 === g.strikes,
          x = u.lightMode ? ["#000000", "#ffffff"] : ["#ffffff", "#000000"],
          P = u.lightMode ? ["#000000", "#ffffff"] : ["#ffffff", "#000000"],
          L = u.lightMode ? ["#000000", "#ffffff"] : ["#ffffff", "#000000"],
          R = u.lightMode ? ["#000000", "#ffffff"] : ["#ffffff", "#000000"];
        N.onFirst && (" first", (x = gh(N.modOnFirst))),
          N.onSecond && (" second", (P = gh(N.modOnSecond))),
          N.onThird && (" third", (L = gh(N.modOnThird))),
          N.onFourth && (" fourth", (R = gh(N.modOnFourth)));
        var D = 0,
          F = "0 0 255 197";
        g.bases > 4 && ((D = 30), (F = "0 0 285 197"));
        var Q = N.playerOnFirst || N.playerOnSecond || N.playerOnThird || N.playerOnFourth,
          j = (
            <ul className="Widget-Outs" aria-label="The Count">
              {E}
            </ul>
          ),
          V = Object(c.g)(),
          W = o.topOfInning ? o.homePitcherMod : o.awayPitcherMod,
          U = o.topOfInning ? o.awayBatterMod : o.homeBatterMod,
          G =
            g.complete || !g.started ? (
              <div />
            ) : (
              <ul className="Widget-AtBat" aria-label="Current Pitcher and Batter">
                <li className="Widget-PlayerLine" role="text">
                  <div className="Widget-PlayerStatusIcon Widget-PlayerStatusIcon--Pitching" aria-label="Pitching" />
                  <div className="Widget-PlayerStatusLabel">Pitching</div>
                  <div className="Widget-PlayerAttributes">
                    <Lt id={W} />
                    <div
                      className="Widget-PlayerLineNameWrapper"
                      aria-haspopup={!0}
                      style={{ background: u.lightMode ? kA(b, 0.25) : kA(b, 0.5) }}
                    >
                      <A
                        background={V}
                        path={"/player/".concat(o.topOfInning ? o.homePitcher : o.awayPitcher)}
                        className="Widget-PlayerLineName"
                      >
                        {o.topOfInning ? (
                          <l.a.Fragment>
                            {FA(o.homeTeamEmoji)} {o.homePitcherName}
                          </l.a.Fragment>
                        ) : (
                          <l.a.Fragment>
                            {FA(o.awayTeamEmoji)} {o.awayPitcherName}
                          </l.a.Fragment>
                        )}
                      </A>
                    </div>
                  </div>
                </li>
                <li className="Widget-PlayerLine" role="text">
                  <div className="Widget-PlayerStatusIcon Widget-PlayerStatusIcon--Batting" aria-label="Batting" />
                  <div className="Widget-PlayerStatusLabel">Batting</div>
                  <div className="Widget-PlayerAttributes">
                    <Lt id={U} />
                    <div
                      className="Widget-PlayerLineNameWrapper"
                      aria-haspopup={!0}
                      style={{ background: u.lightMode ? kA(v, 0.25) : kA(v, 0.5) }}
                    >
                      {o.homeBatterName || o.awayBatterName ? (
                        <A
                          background={V}
                          path={"/player/".concat(o.topOfInning ? o.awayBatter : o.homeBatter)}
                          className="Widget-PlayerLineName"
                        >
                          {o.topOfInning ? (
                            <l.a.Fragment>
                              {FA(o.awayTeamEmoji)} {o.awayBatterName}
                            </l.a.Fragment>
                          ) : (
                            <l.a.Fragment>
                              {FA(o.homeTeamEmoji)} {o.homeBatterName}
                            </l.a.Fragment>
                          )}
                        </A>
                      ) : (
                        <div className="Widget-PlayerLineName" role="text" aria-label="No One at Bat">
                          -
                        </div>
                      )}
                    </div>
                  </div>
                </li>
              </ul>
            ),
          H = null;
        if (g.started && u.isSignedIn) H = null;
        else if (g.started) H = <div />;
        else if (u.isSignedIn) {
          var z,
            X = d[o.id],
            J = (null === X || void 0 === X ? void 0 : X.length) || 0,
            Z = J > 0 ? X[0] : void 0;
          void 0 !== Z && (z = Z.targets[0] === o.homeTeam ? o.homeTeamName : o.awayTeamName),
            (H = (
              <Ws.a className="GameWidget-Button-Centered">
                {J > 0 ? (
                  <div className="GameWidget-UpcomingBet">
                    <tc style={{ width: "20px", height: "20px" }} />{" "}
                    {J > 0 ? "".concat(Z.amount, " on ").concat(z) : "No active bets"}
                  </div>
                ) : void 0 !== u.snacks.Max_Bet ? (
                  u.coins ? (
                    <Vs.a className="Widget-Button" variant="success">
                      <A background={V} path={"/bet/".concat(o.id)}>
                        Place a Bet
                      </A>
                    </Vs.a>
                  ) : (
                    <Vs.a className="Widget-Button" variant="secondary" disabled={!0}>
                      <m.b to={{ pathname: "/shop/".concat(ne.BEG) }}>No Coins</m.b>
                    </Vs.a>
                  )
                ) : (
                  <Ct.a
                    placement="top"
                    overlay={
                      <St.a id="tooltip-stadium">
                        <strong>Snake Oil is required to bet on games.</strong>
                      </St.a>
                    }
                  >
                    <m.b to={{ pathname: "/shop/".concat(ne.MAX_BET) }}>
                      <Vs.a className="Widget-Button" variant="secondary" disabled={!0}>
                        No Snake Oil
                      </Vs.a>
                    </m.b>
                  </Ct.a>
                )}
              </Ws.a>
            ));
        } else
          H = (
            <a href="/login">
              <Vs.a className="Widget-Button" variant="success">
                Login to Play
              </Vs.a>
            </a>
          );
        var q = null,
          K = null,
          _ = "";
        if (null !== o.stadiumId) {
          var $ = f.stadiums.find(function (e) {
            return e.id === o.stadiumId;
          });
          $ &&
            ((K = <sh stadium={$} style={ah.GameWidget} />),
            (_ = $.nickname),
            (q = (
              <div className="GameWidget-Upcoming-Body">
                <ed.a className="GameWidget-Upcoming-Icon" style={{ filter: "invert(1)", padding: "5px" }} />
                <div className="GameWidget-Upcoming-Label" aria-hidden="true">
                  BALLPARK
                </div>
                <div className="GameWidget-Upcoming-Content">
                  <div className="GameWidget-Upcoming-Stadium">
                    <span className="GameWidget-Upcoming-StadiumLabel" aria-hidden="true">
                      {_}
                    </span>
                    <div className="sr-only" role="text" aria-label="Playing at: " />
                    {K}
                  </div>
                </div>
              </div>
            )));
        }
        var te = null,
          ae = null,
          re = d[o.id],
          le = ((null === re || void 0 === re ? void 0 : re.length) || 0) > 0 ? re[0] : void 0;
        if (g.started) {
          var ie = void 0 !== le ? le.payout : 0;
          (te =
            void 0 !== le && le.targets[0] === o.homeTeam ? (
              <div className="GameWidget-ScoreBet" role="text">
                <div className="GameWidget-ScoreBet-Bet">
                  <tc style={{ width: "20px", height: "20px" }} />
                  <div className="GameWidget-ScoreBet-Amount">
                    <div className="sr-only" role="text" aria-label="You Bet " />
                    {le.amount}
                  </div>
                </div>
                <div className="GameWidget-ScoreBet-Winnings">
                  <div className="GameWidget-ScoreBet-Triangle" />
                  <div className="sr-only" role="text" aria-label="To Win " />
                  {ie}
                </div>
              </div>
            ) : null),
            (ae =
              void 0 !== le && le.targets[0] === o.awayTeam ? (
                <div className="GameWidget-ScoreBet" role="text">
                  <div className="GameWidget-ScoreBet-Bet">
                    <tc style={{ width: "20px", height: "20px" }} />
                    <div className="GameWidget-ScoreBet-Amount">
                      <div className="sr-only" role="text" aria-label="You Bet " />
                      {le.amount}
                    </div>
                  </div>
                  <div className="GameWidget-ScoreBet-Winnings">
                    <div className="GameWidget-ScoreBet-Triangle" />
                    <div className="sr-only" role="text" aria-label="To Win " />
                    {ie}
                  </div>
                </div>
              ) : null);
        }
        var oe,
          se,
          ce,
          ue = null;
        if (g.complete) {
          var Ae = w() === o.homeTeam ? o.homeOdds - o.awayOdds : o.awayOdds - o.homeOdds;
          ue = (
            <div className="GameWidget-Outcome" role="list" aria-label="Outcomes">
              <div className="GameWidget-Outcome-Blurb">
                The{" "}
                {
                  ((se = B()),
                  (ce = Ae) > 0.25
                    ? (function (e) {
                        switch (e) {
                          case "Wild Wings":
                            return "heavily flavored";
                          case "Mild Wings":
                            return "heavily but mildly flavored";
                        }
                        return "heavily favored";
                      })(se)
                    : ce > 0
                    ? (function (e) {
                        switch (e) {
                          case "Wild Wings":
                            return "flavored";
                          case "Mild Wings":
                            return "mildly flavored";
                        }
                        return "favored";
                      })(se)
                    : ce < -0.25
                    ? "heavy underdog"
                    : ce < 0
                    ? "underdog"
                    : "")
                }
                 
                <span
                  className="GameWidget-Outcome-Callout"
                  style={{
                    color: u.lightMode ? NA(O()) : O(),
                    background: u.lightMode ? O() : "none",
                    padding: u.lightMode ? "0 4px" : "initial",
                  }}
                >
                  {B()}
                </span>
                 won the game.
              </div>
              {o.shame ? (
                <div className="GameWidget-Outcome-Blurb">
                  The  
                  <span
                    className="GameWidget-Outcome-Callout"
                    style={{
                      color: u.lightMode ? NA(C(y())) : C(y()),
                      background: u.lightMode ? kA(C(y()), 0.25) : "none",
                      padding: u.lightMode ? "0 4px" : "initial",
                    }}
                  >
                    {I(y())}
                  </span>
                   were <span className="GameWidget-Outcome-Callout"> shamed!</span>
                </div>
              ) : null}
              {void 0 !== le ? (
                <div className="GameWidget-Outcome-Blurb">
                  You bet{" "}
                  <span className="GameWidget-Outcome-Callout">
                    <tc style={{ height: "18px", width: "18px" }} />
                     {le.amount}
                  </span>
                   on the  
                  <span
                    className="GameWidget-Outcome-Callout"
                    style={{
                      color: u.lightMode ? NA(C(le.targets[0])) : C(le.targets[0]),
                      background: u.lightMode ? kA(C(le.targets[0]), 0.25) : "none",
                      padding: u.lightMode ? "0 4px" : "initial",
                    }}
                  >
                    {I(le.targets[0])}
                  </span>
                   and{" "}
                  {w() == le.targets[0] ? (
                    <span>
                      won{" "}
                      <span className="GameWidget-Outcome-Callout">
                        <tc style={{ height: "18px", width: "18px" }} />
                         {le.payout}
                      </span>
                      .
                    </span>
                  ) : (
                    <span>lost.</span>
                  )}
                </div>
              ) : null}
              {void 0 !== o.outcomes && o.outcomes.length > 0
                ? o.outcomes.map(function (e, t) {
                    return (
                      <div key={t} className="GameWidget-Outcome-Blurb">
                        {e}
                      </div>
                    );
                  })
                : null}
            </div>
          );
        } else
          ue = g.started ? (
            <l.a.Fragment>
              <div className={"Widget-Display-Visual" + (T ? " Widget-Display-Visual-Max" : "")}>
                <div className={"Widget-Display-Body" + (u.lightMode ? " Widget-Display-Body-LightMode" : "")}>
                  {!g.complete && g.started && (
                    <l.a.Fragment>
                      {
                        ((oe = N),
                        (
                          <div className="Widget-Bases">
                            <div id="tooltip" style={{ display: "none", position: "absolute" }} />
                            <svg
                              role={Q ? "group" : "text"}
                              aria-label={Q ? "Bases" : "No Runners on Base"}
                              viewBox={F}
                              version="1.1"
                            >
                              <Ct.a
                                key="bottom-1"
                                placement="bottom"
                                overlay={
                                  <St.a id="tooltip-bottom">
                                    <strong>{oe.playerOnFirst}</strong> <Mt id={oe.modOnFirst} />
                                  </St.a>
                                }
                              >
                                <g
                                  aria-label={"".concat(
                                    oe.playerOnFirst
                                      ? "First Base, "
                                          .concat(oe.playerOnFirst, " On")
                                          .concat(oe.modOnFirst ? " With ".concat(oe.modOnFirst) : "")
                                      : ""
                                  )}
                                  role="text"
                                  id="base1"
                                  className="st0"
                                  transform="matrix(0.7071,-0.7071,0.7071,0.7071,-40.4706,152.625)"
                                  style={{ fill: N.onFirst ? x[0] : "none", stroke: x[0] }}
                                >
                                  <rect x={141.95 + D} y={105.74 + D} width="70.31" height="70.31" />
                                  <Bt
                                    id={oe.modOnFirst}
                                    x={149.95 + D}
                                    y={113.74 + D}
                                    className="Widget-Bases-Icon"
                                    style={{ color: x[1] }}
                                  />
                                </g>
                              </Ct.a>
                              <Ct.a
                                key="top"
                                placement="top"
                                overlay={
                                  <St.a id="tooltip-bottom">
                                    <strong>{oe.playerOnSecond}</strong> <Mt id={oe.modOnSecond} />
                                  </St.a>
                                }
                              >
                                <g
                                  aria-label={"".concat(
                                    oe.playerOnSecond
                                      ? "Second Base, "
                                          .concat(oe.playerOnSecond, " On")
                                          .concat(oe.modOnSecond ? " With ".concat(oe.modOnSecond) : "")
                                      : ""
                                  )}
                                  role="text"
                                  id="base2"
                                  className="st0"
                                  transform="matrix(0.7071,-0.7071,0.7071,0.7071,-16.7558,95.4764)"
                                  style={{ fill: N.onSecond ? P[0] : "none", stroke: P[0] }}
                                >
                                  <rect x={84.83 + D} y={48.54 + D} width="70.31" height="70.31" />
                                  <Bt
                                    id={oe.modOnSecond}
                                    x={92.83 + D}
                                    y={56.54 + D}
                                    className="Widget-Bases-Icon"
                                    style={{ color: P[1] }}
                                  />
                                </g>
                              </Ct.a>
                              <Ct.a
                                key="bottom-2"
                                placement="bottom"
                                overlay={
                                  <St.a id="tooltip-bottom">
                                    <strong>{oe.playerOnThird}</strong> <Mt id={oe.modOnThird} />
                                  </St.a>
                                }
                              >
                                <g
                                  aria-label={"".concat(
                                    oe.playerOnThird
                                      ? "Third Base, "
                                          .concat(oe.playerOnThird, " On")
                                          .concat(oe.modOnThird ? " With ".concat(oe.modOnThird) : "")
                                      : ""
                                  )}
                                  id="base3"
                                  className="st0"
                                  transform="matrix(0.7071,-0.7071,0.7071,0.7071,-74.0296,71.6061)"
                                  style={{ fill: N.onThird ? L[0] : "none", stroke: L[0] }}
                                >
                                  <rect x={27.38 + D} y={105.74 + D} width="70.31" height="70.31" />
                                  <Bt
                                    id={oe.modOnThird}
                                    x={35.38 + D}
                                    y={113.74 + D}
                                    className="Widget-Bases-Icon"
                                    style={{ color: L[1] }}
                                  />
                                </g>
                              </Ct.a>
                              {g.bases > 4 ? (
                                <Ct.a
                                  key="top-2"
                                  placement="top"
                                  overlay={
                                    <St.a id="tooltip-top">
                                      <strong>{oe.playerOnFourth}</strong> <Mt id={oe.modOnFourth} />
                                    </St.a>
                                  }
                                >
                                  <g
                                    aria-label={"".concat(
                                      oe.playerOnFourth
                                        ? "Fourth Base, "
                                            .concat(oe.playerOnFourth, " On")
                                            .concat(oe.modOnFourth ? " With ".concat(oe.modOnFourth) : "")
                                        : ""
                                    )}
                                    id="base4"
                                    className="st0"
                                    transform="matrix(0.7071,-0.7071,0.7071,0.7071,-74.0296,71.6061)"
                                    style={{ fill: N.onFourth ? R[0] : "none", stroke: R[0] }}
                                  >
                                    <rect x={27.38 + D} y={25.04 + D} width="70.31" height="70.31" />
                                    <Bt
                                      id={oe.modOnFourth}
                                      x={35.38 + D}
                                      y={33.04 + D}
                                      className="Widget-Bases-Icon"
                                      style={{ color: R[1] }}
                                    />
                                  </g>
                                </Ct.a>
                              ) : null}
                            </svg>
                          </div>
                        ))
                      }
                      {j}
                      {G}
                      <div className="Widget-Log">
                        {o.lastUpdate}
                        <span className="Widget-Log-Ledger"> {o.scoreLedger}</span>
                        <span className="Widget-Log-Score"> {o.scoreUpdate}</span>
                      </div>
                    </l.a.Fragment>
                  )}
                </div>
              </div>
            </l.a.Fragment>
          ) : (
            <l.a.Fragment>
              <div className="GameWidget-Upcoming-Info" aria-labelledby={"upcoming" + e.index}>
                <div className="GameWidget-Upcoming-Header" id={"upcoming" + e.index}>
                  Game Information
                </div>
                <div className="GameWidget-Upcoming-InfoBody">
                  <div className="GameWidget-Upcoming-Body" role="list" aria-label="Pitchers for This Game">
                    <div className="GameWidget-Upcoming-Icon GameWidget-Upcoming-Icon--Pitcher" aria-hidden="true" />
                    <div className="GameWidget-Upcoming-Label" aria-hidden="true">
                      PITCHERS
                    </div>
                    <div className="GameWidget-Upcoming-Content">
                      <div className="Widget-PlayerLine">
                        <div
                          className="GameWidget-Upcoming-Pitchers-Wrapper"
                          style={{ background: u.lightMode ? kA(o.awayTeamColor, 0.25) : kA(o.awayTeamColor, 0.5) }}
                        >
                          <A background={V} path={"/player/".concat(o.awayPitcher)} className="Widget-PlayerLineName">
                            {FA(o.awayTeamEmoji)} {o.awayPitcherName}
                            <div className="sr-only" aria-label={"for the " + s.awayTeamName} role="text" />
                          </A>
                        </div>
                      </div>
                      <div className="Widget-PlayerLine">
                        <div
                          className="GameWidget-Upcoming-Pitchers-Wrapper"
                          style={{ background: u.lightMode ? kA(o.homeTeamColor, 0.25) : kA(o.homeTeamColor, 0.5) }}
                        >
                          <A background={V} path={"/player/".concat(o.homePitcher)} className="Widget-PlayerLineName">
                            {FA(o.homeTeamEmoji)} {o.homePitcherName}
                            <div className="sr-only" aria-label={"for the " + s.homeTeamName} role="text" />
                          </A>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="GameWidget-Upcoming-Body">
                    <me.b className="GameWidget-Upcoming-Icon" />
                    <div className="GameWidget-Upcoming-Label" aria-hidden="true">
                      WEATHER
                    </div>
                    <div className="GameWidget-Upcoming-Weather">
                      <span
                        className="GameWidget-Upcoming-WeatherLabel"
                        aria-hidden="true"
                        aria-label={"Sun 2" === Ju(g.weather) ? "Sun Two" : ""}
                      >
                        {Ju(g.weather)}
                      </span>
                      <Xu type={g.weather} tooltip={!0} />
                    </div>
                  </div>
                  {q}
                </div>
              </div>
              <div className="GameWidget-Upcoming-Bets" aria-labelledby={"chances" + e.index}>
                <div className="GameWidget-Upcoming-Header" id={"chances" + e.index}>
                  Chances of Winning
                </div>
                <div className="GameWidget-Upcoming-Odds">
                  <div
                    className="GameWidget-Upcoming-OddsTeam"
                    role="text"
                    aria-label={
                      o.homeOdds > o.awayOdds
                        ? "The " +
                          o.homeTeamNickname +
                          " have a " +
                          Math.round(100 * o.homeOdds) +
                          "% chance of winning."
                        : "The " +
                          o.awayTeamNickname +
                          " have a " +
                          Math.round(100 * o.awayOdds) +
                          "% chance of winning."
                    }
                  >
                    <div
                      className="GameWidget-Upcoming-Favorites-Team"
                      style={{
                        color: u.lightMode
                          ? o.homeOdds > o.awayOdds
                            ? NA(o.homeTeamSecondaryColor)
                            : NA(o.awayTeamSecondaryColor)
                          : o.homeOdds > o.awayOdds
                          ? o.homeTeamSecondaryColor
                          : o.awayTeamSecondaryColor,
                        background: u.lightMode
                          ? o.homeOdds > o.awayOdds
                            ? o.homeTeamSecondaryColor
                            : o.awayTeamSecondaryColor
                          : "none",
                        padding: u.lightMode ? "2px 8px" : "initial",
                        lineHeight: u.lightMode ? "1.6rem" : "initial",
                      }}
                    >
                      {o.homeOdds > o.awayOdds ? o.homeTeamNickname : o.awayTeamNickname}
                    </div>
                    <div className="GameWidget-Upcoming-Favorites-Percentage">
                      {(o.homeOdds > o.awayOdds ? Math.round(100 * o.homeOdds) : Math.round(100 * o.awayOdds)) + "%"}
                    </div>
                  </div>
                  <div
                    className="GameWidget-Upcoming-OddsTeam"
                    role="text"
                    aria-label={
                      o.homeOdds > o.awayOdds
                        ? "The " +
                          o.awayTeamNickname +
                          " have a " +
                          Math.round(100 * o.awayOdds) +
                          "% chance of winning."
                        : "The " +
                          o.homeTeamNickname +
                          " have a " +
                          Math.round(100 * o.homeOdds) +
                          "% chance of winning."
                    }
                  >
                    <div
                      className="GameWidget-Upcoming-Favorites-Team"
                      style={{
                        color: u.lightMode
                          ? o.homeOdds > o.awayOdds
                            ? NA(o.awayTeamSecondaryColor)
                            : NA(o.homeTeamSecondaryColor)
                          : o.homeOdds > o.awayOdds
                          ? o.awayTeamSecondaryColor
                          : o.homeTeamSecondaryColor,
                        background: u.lightMode
                          ? o.homeOdds > o.awayOdds
                            ? o.awayTeamSecondaryColor
                            : o.homeTeamSecondaryColor
                          : "none",
                        padding: u.lightMode ? "2px 8px" : "initial",
                        lineHeight: u.lightMode ? "1.6rem" : "initial",
                      }}
                    >
                      {o.homeOdds > o.awayOdds ? o.awayTeamNickname : o.homeTeamNickname}
                    </div>
                    <div className="GameWidget-Upcoming-Favorites-Percentage">
                      {(o.homeOdds > o.awayOdds ? Math.round(100 * o.awayOdds) : Math.round(100 * o.homeOdds)) + "%"}
                    </div>
                  </div>
                </div>
                <div className="GameWidget-Upcoming-BetButtons">{H}</div>
              </div>
            </l.a.Fragment>
          );
        var de = !1;
        o.lastUpdate.includes("CONSUMERS") && (de = !0);
        var fe = null;
        g.started &&
          (fe = (
            <div className="Widget-Log" aria-label="Log">
              {de ? <k /> : null}
              <div className="Widget-Log-Content">
                {o.lastUpdate.split("\n").map(function (e, t) {
                  return (
                    <div className={"Widget-Log-Line" + (de ? " Widget-Log-UhOh" : "")} key={t}>
                      {e}
                    </div>
                  );
                })}
                {"" !== o.scoreLedger
                  ? o.scoreLedger.split("\n").map(function (e, t) {
                      return (
                        <div className="Widget-Log-Line Widget-Log-Ledger" key={t}>
                          {e}
                        </div>
                      );
                    })
                  : null}
                {"" !== o.scoreUpdate
                  ? o.scoreUpdate.split("\n").map(function (e, t) {
                      return (
                        <div className="Widget-Log-Line Widget-Log-Score" key={t}>
                          {e}
                        </div>
                      );
                    })
                  : null}
              </div>
              <div className="Widget-Log-PlayCount" role="text" aria-label={"Play #" + g.playCount}>
                {g.playCount}
              </div>
              {H}
            </div>
          ));
        var he = g.started ? "GameWidget-Full-Live" : "GameWidget-Full-Upcoming",
          ge = !1,
          pe = !1,
          Ee = void 0,
          ve = void 0;
        void 0 !== f &&
          PA(h.sim, "SIM_SHOW_LEVELS") &&
          ((Ee = f.teams.find(function (e) {
            return e.id === o.homeTeam;
          })),
          (ve = f.teams.find(function (e) {
            return e.id === o.awayTeam;
          })),
          Ee && (ge = Ee.level > 4),
          ve && (pe = ve.level > 4));
        var be = Ee && Ee.seasAttr.includes("PARTY_TIME"),
          we = ve && ve.seasAttr.includes("PARTY_TIME");
        return (
          <li
            className={"GameWidget ".concat(g.complete ? "IsComplete" : "", " ").concat(he)}
            aria-label={"".concat(s.awayTeamName, " versus ").concat(s.homeTeamName)}
          >
            <div className="Widget-Header-Wrapper">
              <div role="group" aria-label="Game Status Bar" className="Widget-Header">
                <div className="Widget-StatusBar-WithStadium">
                  {p}
                  <div className="Widget-StadiumLabel">
                    {g.started ? (
                      <Ct.a
                        placement="top"
                        overlay={
                          <St.a id="tooltip-stadium">
                            <strong>{_}</strong>
                          </St.a>
                        }
                      >
                        <div className="Widget-Stadium-Icon">{K}</div>
                      </Ct.a>
                    ) : null}
                  </div>
                  {(null === (t = o.state) || void 0 === t ? void 0 : t.holidayInning) ? (
                    <div className="Widget-State">
                      <Ct.a
                        placement="top"
                        overlay={
                          <St.a id="tooltip-stadium">
                            <strong>Holiday Inning</strong>
                          </St.a>
                        }
                      >
                        <div className="Widget-State-Icon">
                          <xt id="HOTEL_MOTEL" />
                        </div>
                      </Ct.a>
                    </div>
                  ) : null}
                  {(null === (a = o.state) || void 0 === a ? void 0 : a.prizeMatch) ? (
                    <div className="Widget-State">
                      <A background={V} path={"/item/".concat(o.state.prizeMatch.itemId)}>
                        <Ct.a
                          placement="top"
                          overlay={
                            <St.a id="tooltip-stadium">
                              <strong>Prize Match</strong>
                              <br />
                              <l.a.Fragment>{o.state.prizeMatch.itemName}</l.a.Fragment>
                            </St.a>
                          }
                        >
                          <div className="Widget-State-Icon">
                            <xt id="SIM_FAIRGROUNDS" />
                          </div>
                        </Ct.a>
                      </A>
                    </div>
                  ) : null}
                </div>
                {(function (e) {
                  var t,
                    a,
                    n = e.isPostseason
                      ? "first to +/-".concat(e.seriesLength)
                      : "".concat(e.seriesIndex, " of ").concat(e.seriesLength);
                  if (
                    void 0 ===
                      (null === e ||
                      void 0 === e ||
                      null === (t = e.state) ||
                      void 0 === t ||
                      null === (a = t.postseason) ||
                      void 0 === a
                        ? void 0
                        : a.bracket) ||
                    !e.isPostseason
                  )
                    return (
                      <div
                        className="Widget-ScoreLabel Widget-ScoreLabel--Series"
                        aria-label={n + " Games"}
                        role="text"
                      >
                        {n}
                      </div>
                    );
                  var r = e.state.postseason.bracket;
                  return 0 === r ? (
                    <Ct.a
                      key="top-1"
                      placement="top"
                      overlay={
                        <St.a id="tooltip-top">
                          <strong>Overbracket</strong>
                        </St.a>
                      }
                    >
                      <div
                        className="Widget-ScoreLabel Widget-ScoreLabel--Series"
                        aria-label={n + " Games"}
                        role="text"
                      >
                        {n}
                        <ch.b.Provider value={{ color: "orange", size: "20px" }}>
                          <ee.j />
                        </ch.b.Provider>
                      </div>
                    </Ct.a>
                  ) : 1 === r ? (
                    <Ct.a
                      key="top-1"
                      placement="top"
                      overlay={
                        <St.a id="tooltip-top">
                          <strong>Underbracket</strong>
                        </St.a>
                      }
                    >
                      <div
                        className="Widget-ScoreLabel Widget-ScoreLabel--Series"
                        aria-label={n + " Games"}
                        role="text"
                      >
                        {n}
                        <ch.b.Provider value={{ color: "purple", size: "20px" }}>
                          <ee.i />
                        </ch.b.Provider>
                      </div>
                    </Ct.a>
                  ) : null;
                })(o)}
              </div>
              <div role="group" aria-label="The Teams" className="Widget-ScoreBacking">
                <A background={V} path={"/team/".concat(o.awayTeam)} className="GameWidget-ScoreLine">
                  <div>
                    <div
                      className="GameWidget-ScoreTeamColorBar"
                      aria-hidden={!0}
                      style={{ background: o.awayTeamColor }}
                    >
                      {FA(o.awayTeamEmoji)}
                    </div>
                  </div>
                  <div className="GameWidget-ScoreTeam">
                    <div
                      className="GameWidget-ScoreName"
                      style={{
                        color: u.lightMode ? NA(o.awayTeamSecondaryColor) : o.awayTeamSecondaryColor,
                        background: u.lightMode ? o.awayTeamSecondaryColor : "none",
                        padding: u.lightMode ? "2px 8px" : "initial",
                        lineHeight: u.lightMode ? "1.6rem" : "initial",
                      }}
                    >
                      {s.awayTeamName}
                      {pe ? <Eo /> : null}
                      {we ? (
                        <div style={{ fontSize: "14px", marginTop: "2px", marginLeft: "8px" }}>{FA("0x1F389")}</div>
                      ) : null}
                    </div>
                    <div className="GameWidget-ScoreTeamInfo">
                      {o.isPostseason ? (
                        <div className="GameWidget-ScoreRecord" aria-label={"".concat(s.awayTeamRecord.wins, " Wins")}>
                          {io(s.awayTeamRecord)}
                        </div>
                      ) : (
                        <div
                          className="GameWidget-ScoreRecord"
                          aria-label={""
                            .concat(s.awayTeamRecord.nonlosses, " Nonlosses ")
                            .concat(s.awayTeamRecord.losses)}
                        >
                          {oo(s.awayTeamRecord)}
                        </div>
                      )}
                      <div
                        className="GameWidget-WinChance"
                        aria-label={"".concat(Math.round(100 * o.awayOdds), "% Chance of Winning")}
                        style={{
                          color: u.lightMode ? NA(o.awayTeamSecondaryColor) : o.awayTeamSecondaryColor,
                          background: u.lightMode ? o.awayTeamSecondaryColor : "none",
                          padding: u.lightMode ? "2px 8px" : "initial",
                          lineHeight: u.lightMode ? "1.2rem" : "initial",
                        }}
                      >
                        {Math.round(100 * o.awayOdds)}%
                      </div>
                      {ae}
                    </div>
                  </div>
                  <div className="GameWidget-ScoreNumber" aria-label={"".concat(s.awayTeamScore, " Runs")} style={i}>
                    {s.awayTeamScore}
                  </div>
                </A>
                <A background={V} path={"/team/".concat(o.homeTeam)} className="GameWidget-ScoreLine">
                  <div>
                    <div
                      className="GameWidget-ScoreTeamColorBar"
                      aria-hidden={!0}
                      style={{ background: o.homeTeamColor }}
                    >
                      {FA(o.homeTeamEmoji)}
                    </div>
                  </div>
                  <div className="GameWidget-ScoreTeam">
                    <div
                      className="GameWidget-ScoreName"
                      style={{
                        color: u.lightMode ? NA(o.homeTeamSecondaryColor) : o.homeTeamSecondaryColor,
                        background: u.lightMode ? o.homeTeamSecondaryColor : "none",
                        padding: u.lightMode ? "2px 8px" : "initial",
                        lineHeight: u.lightMode ? "1.6rem" : "initial",
                      }}
                    >
                      {s.homeTeamName}
                      {ge ? <Eo /> : null}
                      {be ? (
                        <div style={{ fontSize: "14px", marginTop: "2px", marginLeft: "8px" }}>{FA("0x1F389")}</div>
                      ) : null}
                    </div>
                    <div className="GameWidget-ScoreTeamInfo">
                      {o.isPostseason ? (
                        <div className="GameWidget-ScoreRecord" aria-label={"".concat(s.homeTeamRecord.wins, " Wins")}>
                          {io(s.homeTeamRecord)}
                        </div>
                      ) : (
                        <div
                          className="GameWidget-ScoreRecord"
                          aria-label={""
                            .concat(s.homeTeamRecord.nonlosses, " Nonlosses ")
                            .concat(s.homeTeamRecord.losses)}
                        >
                          {oo(s.homeTeamRecord)}
                        </div>
                      )}
                      <div
                        className="GameWidget-WinChance"
                        aria-label={"".concat(Math.round(100 * o.homeOdds), "% Chance of Winning")}
                        style={{
                          color: u.lightMode ? NA(o.homeTeamSecondaryColor) : o.homeTeamSecondaryColor,
                          background: u.lightMode ? o.homeTeamSecondaryColor : "none",
                          padding: u.lightMode ? "2px 8px" : "initial",
                          lineHeight: u.lightMode ? "1.2rem" : "initial",
                        }}
                      >
                        {Math.round(100 * o.homeOdds)}%
                      </div>
                      {te}
                    </div>
                  </div>
                  <div className="GameWidget-ScoreNumber" aria-label={"".concat(s.homeTeamScore, " Runs")} style={n}>
                    {s.homeTeamScore}
                  </div>
                </A>
              </div>
            </div>
            {ue}
            {fe}
          </li>
        );
      }
      function vh(e) {
        var t = (function (e, t) {
          var a = t.find(function (t) {
              return t.homeTeam === e.homeTeam || t.homeTeam === e.awayTeam;
            }),
            n = void 0 !== a && a.homeTeam === e.homeTeam;
          return {
            homeTeamName: e.homeTeamNickname,
            homeTeamRecord:
              void 0 === a ? new oe() : { wins: n ? a.homeWins : a.awayWins, nonlosses: 0, losses: 0, games: 0 },
            homeTeamScore: td(dh(e)),
            awayTeamName: e.awayTeamNickname,
            awayTeamRecord:
              void 0 === a ? new oe() : { wins: n ? a.awayWins : a.homeWins, nonlosses: 0, losses: 0, games: 0 },
            awayTeamScore: td(fh(e)),
            seriesIndex: void 0 === a ? -1 : a.gamesPlayed,
            seriesLength: void 0 === a ? -1 : a.gamesNeeded,
          };
        })(e.data, e.matchups);
        return <Eh data={e.data} metaInfo={t} index={e.index} />;
      }
      a(189);
      var bh,
        wh = a(122),
        yh = a(73),
        Bh = (a(190), ["placement", "scheduleUpdate", "arrowProps", "outOfBoundaries", "show"]),
        Oh = ["placement", "scheduleUpdate", "arrowProps", "outOfBoundaries", "show"],
        Ih = function (e) {
          var t = Object(r.useRef)(null),
            a = e.content,
            n = e.children,
            i = e.url,
            o = e.className,
            c = e.buttonClassname,
            u = e.handleClick,
            m = Object(r.useState)(!1),
            A = Object(s.a)(m, 2),
            d = A[0],
            f = A[1],
            h = Object(r.useState)(!1),
            g = Object(s.a)(h, 2),
            p = g[0],
            E = g[1],
            v = Object(r.useContext)(M.context).user;
          Object(r.useEffect)(function () {
            var e = window.matchMedia("(max-width: 1080px)");
            return (
              e.addListener(w),
              w(e),
              function () {
                e.removeListener(w);
              }
            );
          }, []);
          var b,
            w = function (e) {
              e.matches ? E(!0) : E(!1);
            },
            y = function () {
              clearTimeout(b), f(!0);
            },
            B = function () {
              b = setTimeout(function () {
                f(!1);
              }, 100);
            },
            O = (
              <yh.a target={t.current} show={d} placement="bottom">
                {function (e) {
                  e.placement, e.scheduleUpdate, e.arrowProps, e.outOfBoundaries, e.show;
                  var t = Object(wh.a)(e, Bh);
                  return (
                    <div
                      {...Object.assign({}, t, {
                        style: Object(C.a)(Object(C.a)({}, t.style), {}, { top: "12px" }),
                        className: "Overlay ".concat(o) + (v.lightMode ? " Overlay-LightMode" : ""),
                        onMouseOver: y,
                        onMouseOut: B,
                      })}
                    >
                      <div className={"Overlay-Arrow" + (v.lightMode ? " Overlay-Arrow-LightMode" : "")} />
                      {a}
                    </div>
                  );
                }}
              </yh.a>
            );
          return (
            p &&
              (O = (
                <yh.a target={t.current} show={d} placement="top">
                  {function (e) {
                    e.placement, e.scheduleUpdate, e.arrowProps, e.outOfBoundaries, e.show;
                    var t = Object(wh.a)(e, Oh);
                    return (
                      <div
                        {...Object.assign({}, t, {
                          style: Object(C.a)(Object(C.a)({}, t.style), {}, { bottom: "12px" }),
                          className: "Overlay ".concat(o) + (v.lightMode ? " Overlay-LightMode" : ""),
                          onMouseOver: y,
                          onMouseOut: B,
                        })}
                      >
                        <div
                          className={
                            "Overlay-Arrow Overlay-Arrow-Bottom" + (v.lightMode ? " Overlay-Arrow-LightMode" : "")
                          }
                        />
                        {a}
                      </div>
                    );
                  }}
                </yh.a>
              )),
            i ? (
              <l.a.Fragment>
                <a href={i} ref={t} onMouseOver={y} onMouseOut={B} className={c}>
                  {n}
                </a>
                {O}
              </l.a.Fragment>
            ) : u ? (
              <l.a.Fragment>
                <button ref={t} onMouseOver={y} onMouseOut={B} onClick={u} className={c}>
                  {n}
                </button>
                {O}
              </l.a.Fragment>
            ) : (
              <l.a.Fragment>
                <div ref={t} onMouseOver={y} onMouseOut={B} className={c}>
                  {n}
                </div>
                {O}
              </l.a.Fragment>
            )
          );
        },
        Sh = ["title", "titleId"];
      function Ch() {
        return (Ch =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function kh(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Nh(e, t) {
        var a = e.title,
          n = e.titleId,
          l = kh(e, Sh);
        return (
          <svg
            {...Ch(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 128,
                height: 128,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {bh || (bh = <image id="account" x={37} y={29} width={182} height={198} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Th = r.forwardRef(Nh);
      a.p, a(129);
      function xh() {
        window.scrollTo({ top: 0, behavior: "smooth" });
      }
      var Ph,
        Mh = function () {
          return (
            <div
              className="ScrollToTop-Small"
              aria-label="Go To Top"
              role="button"
              onClick={function () {
                return xh();
              }}
            >
              <ee.a />
            </div>
          );
        },
        Lh = function () {
          var e = Object(r.useState)(!1),
            t = Object(s.a)(e, 2),
            a = t[0],
            n = t[1],
            i = Object(r.useState)(!1),
            o = Object(s.a)(i, 2),
            c = o[0],
            u = o[1];
          Object(r.useEffect)(function () {
            window.addEventListener("scroll", A);
          }, []),
            Object(r.useEffect)(function () {
              var e = window.matchMedia("(max-width: 1080px)");
              e.addListener(m), m(e);
            }, []);
          var m = function (e) {
              e.matches ? u(!0) : u(!1);
            },
            A = function () {
              window.pageYOffset > 550 ? n(!0) : n(!1);
            };
          return (
            <div
              className="ScrollToTop"
              style={{ display: a && !c ? "block" : "none" }}
              onClick={function () {
                return xh();
              }}
              aria-label="Go To Top"
              role="button"
            >
              <ee.a /> Go To Top
            </div>
          );
        };
      !(function (e) {
        (e[(e.Blue = 0)] = "Blue"), (e[(e.Purple = 1)] = "Purple");
      })(Ph || (Ph = {}));
      var Rh = function () {
          var e = Object(r.useContext)(M.context),
            t = e.user,
            a = (e.clearUser, e.setUser),
            n = (Object(r.useContext)(S.context), Object(r.useContext)(xo.context)),
            i = (Object(c.f)(), Object(r.useState)(!1)),
            o = Object(s.a)(i, 2),
            u = o[0],
            m = o[1],
            d = Object(ks.useToasts)().addToast,
            g = Object(c.g)(),
            p = ["PEANUTS", "EVERYONE LOVES PEANUTS", "CRACK IT OPEN", "CRACK IT OPEN NOW"],
            E = ["SO GOOD", "YUMMY", "SO GREAT"],
            v = Object(r.useRef)(Math.floor(Math.random() * p.length)),
            b = Object(r.useRef)(Math.floor(Math.random() * E.length)),
            w = (
              <div className="CoinOverlay-Content">
                <div className="CoinOverlay-Content-Body">Earn Coins by placing bets on upcoming games</div>
              </div>
            ),
            y = (
              <div className="CoinOverlay-Content">
                <div className="CoinOverlay-Content-Body">Buy Votes at Concessions to spend in the Offseason</div>
              </div>
            ),
            B = (
              <div className="CoinOverlay-Content">
                <div className="CoinOverlay-Content-Body">{u ? E[b.current] : p[v.current]}</div>
              </div>
            ),
            O = null;
          if (null !== t.favoriteTeam) {
            var I = n.teams.find(function (e) {
              return e.id === t.favoriteTeam;
            });
            if (I) {
              var k = DA(I);
              O = (
                <div
                  className="Navigation-FavoriteTeamEmoji"
                  style={{ background: I.mainColor }}
                  aria-label={"Your Favorite Team: ".concat(I.location, " ").concat(I.nickname)}
                >
                  <A background={g} path={"/team/".concat(I.id)} className="Navigation-Icon-Link">
                    {k}
                  </A>
                </div>
              );
            }
          }
          var N = null;
          null !== t.idol &&
            (N = (
              <A background={g} path={"/player/".concat(t.idol)} className="Navigation-IdolizedPlayer">
                <qs className="Navigation-Icon" aria-label="Your Idol" />
              </A>
            ));
          return (
            <l.a.Fragment>
              <div className="Navigation-User-Top">
                <Ih className="CoinOverlay" buttonClassname="Navigation-CurrencyButton" content={w} url="/upcoming">
                  <tc className="Navigation-Currency-Icon" aria-label="Coins" />
                   {t.coins}
                </Ih>
                {t.unlockedElection ? (
                  <Ih className="CoinOverlay" buttonClassname="Navigation-CurrencyButton" content={y} url="/shop">
                    <ya className="Navigation-Currency-Icon" aria-label="Votes" />
                     {void 0 !== t.snacks[ne.VOTES] ? t.snacks[ne.VOTES] : 0}
                  </Ih>
                ) : null}
                {void 0 !== t.snacks.Peanuts ? (
                  <div className="Peanut-Container">
                    <Ih
                      className="CoinOverlay"
                      buttonClassname="Navigation-CurrencyButton"
                      content={B}
                      handleClick={
                        u
                          ? void 0
                          : function () {
                              (function () {
                                var e = Object(h.a)(
                                  f.a.mark(function e() {
                                    var n, r, l;
                                    return f.a.wrap(function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            if (!(t.snacks.Peanuts > 0)) {
                                              e.next = 9;
                                              break;
                                            }
                                            return (
                                              m(!0),
                                              (r = (n = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144])[
                                                Math.min(t.squirrels, n.length - 1)
                                              ]),
                                              (l = Math.min(r, t.snacks.Peanuts)),
                                              (e.next = 7),
                                              km("/api/eatADangPeanut", JSON.stringify({ amount: l }))
                                                .then(
                                                  Object(h.a)(
                                                    f.a.mark(function e() {
                                                      return f.a.wrap(function (e) {
                                                        for (;;)
                                                          switch ((e.prev = e.next)) {
                                                            case 0:
                                                              return (
                                                                (e.next = 2),
                                                                new Promise(function (e) {
                                                                  return setTimeout(e, 2300);
                                                                })
                                                              );
                                                            case 2:
                                                            case "end":
                                                              return e.stop();
                                                          }
                                                      }, e);
                                                    })
                                                  )
                                                )
                                                .catch(function (e) {
                                                  d(e, { appearance: "error" });
                                                })
                                                .finally(
                                                  Object(h.a)(
                                                    f.a.mark(function e() {
                                                      return f.a.wrap(function (e) {
                                                        for (;;)
                                                          switch ((e.prev = e.next)) {
                                                            case 0:
                                                              (t.snacks.Peanuts -= l),
                                                                a(Object(C.a)({}, t)),
                                                                d(
                                                                  "You consumed "
                                                                    .concat(l, " Peanut")
                                                                    .concat(l > 1 ? "s" : "", "."),
                                                                  { appearance: "success" }
                                                                ),
                                                                m(!1);
                                                            case 4:
                                                            case "end":
                                                              return e.stop();
                                                          }
                                                      }, e);
                                                    })
                                                  )
                                                )
                                            );
                                          case 7:
                                            e.next = 10;
                                            break;
                                          case 9:
                                            d("You have no peanuts.", { appearance: "error" });
                                          case 10:
                                          case "end":
                                            return e.stop();
                                        }
                                    }, e);
                                  })
                                );
                                return function () {
                                  return e.apply(this, arguments);
                                };
                              })()();
                            }
                      }
                    >
                      <span className="Peanut-Line">
                        <span className="Peanut-Icon">
                          {u ? "" : <mn aria-label="Peanuts" className="Navigation-Currency-Icon" />}
                        </span>
                         {t.snacks.Peanuts}
                      </span>
                    </Ih>
                    <div className={u ? "Peanut-Eating" : "Peanut"}>
                      <mn className="Navigation-Currency-Icon" />
                    </div>
                  </div>
                ) : null}
                <Ih
                  className="CoinOverlay"
                  content={
                    <div className="CoinOverlay-Content">
                      <div className="CoinOverlay-Content-Body">Your Account</div>
                    </div>
                  }
                >
                  <A background={g} path="/account" className="Navigation-Inventory">
                    <Th className="Navigation-Icon" aria-label="Account" />
                  </A>
                </Ih>
                <Mh />
              </div>
              <div className="Navigation-User-Bottom">
                <Ih
                  className="CoinOverlay"
                  content={
                    <div className="CoinOverlay-Content">
                      <div className="CoinOverlay-Content-Body">Your Favorite Team</div>
                    </div>
                  }
                >
                  {O}
                </Ih>
                <Ih
                  className="CoinOverlay"
                  content={
                    <div className="CoinOverlay-Content">
                      <div className="CoinOverlay-Content-Body">Your Idol</div>
                    </div>
                  }
                >
                  {N}
                </Ih>
                <a href="/auth/logout" className="Navigation-Button">
                  Log Out
                </a>
              </div>
            </l.a.Fragment>
          );
        },
        Dh = function () {
          return (
            <l.a.Fragment>
              <Qh isModal={!0} path="/signup">
                Signup
              </Qh>
              <Qh isModal={!0} path="/login">
                Login
              </Qh>
            </l.a.Fragment>
          );
        };
      function Fh(e) {
        var t = Object(r.useContext)(S.context),
          a = Object(r.useContext)(M.context).user,
          n = Object(r.useState)(!1),
          i = Object(s.a)(n, 2),
          o = (i[0], i[1], Object(r.useState)(!1)),
          u = Object(s.a)(o, 2),
          m = u[0],
          d = u[1],
          f = Object(r.useState)(!1),
          h = Object(s.a)(f, 2),
          g = h[0],
          p = h[1],
          E = Object(r.useState)(!1),
          v = Object(s.a)(E, 2),
          b = v[0],
          w = v[1],
          y = Object(r.useState)(!1),
          B = Object(s.a)(y, 2),
          O = B[0],
          I = B[1],
          C = Object(r.useState)(!1),
          k = Object(s.a)(C, 2),
          N = k[0],
          T = k[1],
          x = (Object(r.useRef)(null), Object(r.useRef)(null)),
          P = Object(r.useRef)(null),
          L = Object(r.useRef)(null),
          R = Object(r.useRef)(null),
          F = Object(c.g)();
        Object(r.useEffect)(function () {
          var e = window.matchMedia("(max-width: 1080px)");
          return (
            e.addListener(Q),
            Q(e),
            document.addEventListener("click", j, !1),
            function () {
              e.removeListener(Q), document.removeEventListener("click", j, !1);
            }
          );
        }, []);
        var Q = function (e) {
            e.matches ? I(!0) : I(!1);
          },
          j = function (e) {
            x.current && !x.current.contains(e.target) && T(!1),
              P.current && !P.current.contains(e.target) && d(!1),
              L.current && !L.current.contains(e.target) && p(!1),
              R.current && !R.current.contains(e.target) && w(!1),
              x.current && !x.current.contains(e.target) && T(!1);
          },
          V = [],
          W = [];
        t &&
          t.sim &&
          (t.sim.phase >= 15
            ? (V.push({ text: "The Cup", path: "/" }),
              a &&
                a.isSignedIn &&
                (V.push({ text: "Bulletin", path: "/bulletin" }),
                W.push({ text: "League", path: "/league" }),
                W.push({ text: "Election", path: "/offseason", locked: !a.unlockedElection }),
                W.push({ text: "Shop", path: "/shop", locked: !a.unlockedShop }),
                W.push({ text: "Book", path: "/thebook" }),
                W.push({ text: "The Hall", path: "/thehall", glow: Ph.Blue })))
            : 14 !== t.sim.phase
            ? (V.push({ text: "Home", path: "/" }),
              a &&
                a.isSignedIn &&
                (V.push({
                  text: "League",
                  path: "/league",
                  subpaths: [
                    {
                      text:
                        t.sim.phase === D.Rest ||
                        t.sim.phase === D.Preseason ||
                        t.sim.phase === D.SeasonEnd ||
                        t.sim.phase === D.PostseasonEnd ||
                        t.sim.phase === D.Election
                          ? "Standings"
                          : t.sim.phase === D.PrePostseason || t.sim.phase === D.EarlyPostseasonEnd
                          ? "Postseason"
                          : t.sim.phase === D.EarlySiesta || t.sim.phase === D.LateSiesta
                          ? "Events"
                          : "Watch Live",
                      path: "/league",
                    },
                    {
                      text: "Place Bets",
                      path: "/upcoming",
                      phases: [D.Earlseason, D.Midseason, D.Lateseason, D.EarlyPostseason, D.Postseason],
                    },
                    { text: "Postseason", path: "/bracket", phases: [D.EarlyPostseason, D.Postseason] },
                    {
                      text: "Standings",
                      path: "/standings",
                      phases: [
                        D.Earlseason,
                        D.EarlySiesta,
                        D.Midseason,
                        D.LateSiesta,
                        D.Lateseason,
                        D.PrePostseason,
                        D.EarlyPostseason,
                        D.EarlyPostseasonEnd,
                        D.Postseason,
                      ],
                    },
                    { text: "Idols", path: "/leaderboard" },
                  ],
                }),
                V.push({ text: "Shop", path: "/shop", locked: !a.unlockedShop, ids: !0 }),
                V.push({
                  text: "Vote",
                  path: "/offseason",
                  subpaths: [
                    { text: "Election", path: "/offseason", locked: !a.unlockedElection },
                    { text: "Renovation", path: "/renovation" },
                    { text: "Gift Shop", path: "/giftshop" },
                  ],
                }),
                V.push({
                  text: "Info",
                  path: "/thebook",
                  subpaths: PA(t.sim, "SIM_DEPTH_CHART")
                    ? [
                        { text: "The Book", path: "/thebook" },
                        { text: "Library", path: "/library", ids: !0 },
                        { text: "Depth", path: "/depth", glow: Ph.Purple },
                        { text: "The Hall", path: "/thehall", glow: Ph.Blue },
                      ]
                    : [
                        { text: "The Book", path: "/thebook" },
                        { text: "Library", path: "/library", ids: !0 },
                        { text: "The Hall", path: "/thehall", glow: Ph.Blue },
                      ],
                })))
            : V.push({ text: "League", path: "/league" }));
        var U = function () {
            T(!N);
          },
          G = function () {
            d(!m);
          },
          H = function () {
            p(!g);
          },
          Y = function () {
            w(!b);
          },
          z = a.isFetching ? null : a.isSignedIn ? <Rh /> : <Dh />,
          X = (function (e, a) {
            var n = 0;
            return e.map(function (e, r) {
              if (e.subpaths && e.subpaths.length > 0) {
                var i = null,
                  o = void 0,
                  s = void 0;
                return (
                  "League" === e.text
                    ? ((i = P), (o = G), (s = m))
                    : "Vote" === e.text
                    ? ((i = L), (o = H), (s = g))
                    : "Info" === e.text && ((i = R), (o = Y), (s = b)),
                  (n += 1),
                  (
                    <div className={"Navigation-Dropdown Navigation-Dropdown-" + e.text} key={n}>
                      {a ? (
                        <div className="Navigation-Header Navigation-Header-Dropdown" ref={i} onClick={o}>
                          {e.text} <ee.h />
                        </div>
                      ) : (
                        <Qh key={n} path={e.path} glow={e.glow} subpaths={e.subpaths} ids={e.ids}>
                          {e.text} <ee.h />
                        </Qh>
                      )}
                      <div
                        className={"Navigation-Dropdown-Content Navigation-Dropdown-Content-" + e.text}
                        style={s ? { maxHeight: "230px" } : {}}
                        onClick={function (e) {
                          O && U();
                        }}
                      >
                        {e.subpaths.map(function (e, a) {
                          if (void 0 === e.text) return null;
                          var r = !0;
                          return (
                            e.phases &&
                              e.phases.length > 0 &&
                              ((r = !1),
                              e.phases.forEach(function (e) {
                                var a;
                                (null === t || void 0 === t || null === (a = t.sim) || void 0 === a
                                  ? void 0
                                  : a.phase) === e && (r = !0);
                              })),
                            (n += 1),
                            r ? (
                              <Qh key={n} path={e.path} glow={e.glow} ids={e.ids}>
                                {e.text} {e.locked ? <ee.e /> : null}
                              </Qh>
                            ) : (
                              void 0
                            )
                          );
                        })}
                      </div>
                    </div>
                  )
                );
              }
              return (
                (n += 1),
                (
                  <Qh key={n} path={e.path} subpaths={e.subpaths} ids={e.ids}>
                    {e.text} {e.locked ? <ee.e /> : null}
                  </Qh>
                )
              );
            });
          })(V, O),
          J = O ? (
            <l.a.Fragment>
              <div className="Navigation-Header Navigation-Header-Dropdown" onClick={U}>
                <_.Bb className="Navigation-Toggle-Icon" />
              </div>
              <div className="Navigation-Dropdown Navigation-Dropdown-Hamburger">
                <div
                  className="Navigation-Dropdown-Content Navigation-Dropdown-Content-Hamburger"
                  style={N ? { maxHeight: "400px" } : {}}
                >
                  {X}
                </div>
              </div>
            </l.a.Fragment>
          ) : (
            <div className="Navigation-Main">
              {X}
              <A key={0} path="/search" background={F} className="Navigation-CurrencyButton Navigation-Search">
                <ee.o />
              </A>
            </div>
          );
        return (
          <nav className="Navigation" ref={x}>
            {J}
            <div className="Navigation-Top Navigation-Toggle">
              <A key={-1} path="/search" background={F} className="Navigation-CurrencyButton Navigation-Search">
                <ee.o />
              </A>
              {z}
            </div>
            {O ? null : <div className="Navigation-User">{z}</div>}
          </nav>
        );
      }
      function Qh(e) {
        Object(r.useContext)(M.context).user;
        var t = e.path,
          a = e.isModal,
          n = e.subpaths,
          i = e.glow,
          o = (e.onClick, Object(c.g)()),
          s = o.pathname,
          u = !("/login" === s || "/signup" === s),
          m =
            s === t ||
            void 0 !==
              (null === n || void 0 === n
                ? void 0
                : n.find(function (e) {
                    return e.path === s;
                  }));
        return (
          (e.ids ||
            void 0 !==
              (null === n || void 0 === n
                ? void 0
                : n.find(function (e) {
                    return !0 === e.ids;
                  }))) &&
            (m =
              s.includes(t) ||
              void 0 !==
                (null === n || void 0 === n
                  ? void 0
                  : n.find(function (e) {
                      return s.includes(e.path);
                    }))),
          (
            <A
              background={u && a && o}
              path={t}
              className={
                "Navigation-Button" +
                (m ? " Navigation-Button-Current" : "") +
                (i === Ph.Blue && m ? " Navigation-Button-Blue" : "") +
                (i === Ph.Purple ? " Navigation-Button-Purple" : "")
              }
            >
              {e.children}
            </A>
          )
        );
      }
      function jh() {
        return (
          <nav className="Navigation">
            <div className="Navigation-User">
              <Dh />
            </div>
          </nav>
        );
      }
      function Vh(e) {
        var t = Object(c.g)(),
          a = Object(r.useState)(""),
          n = Object(s.a)(a, 2),
          i = n[0],
          o = n[1],
          u = Object(r.useState)([]),
          m = Object(s.a)(u, 2),
          d = m[0],
          f = m[1],
          h = Object(r.useState)(""),
          g = Object(s.a)(h, 2),
          p = g[0],
          E = g[1],
          v = Object(r.useContext)(em.context);
        Object(r.useEffect)(
          function () {
            if (v) {
              f(v);
              var e = v[Math.floor(Math.random() * v.length)];
              E(e.name);
            }
          },
          [v]
        );
        var b = [];
        return (
          void 0 !== d &&
            d.length > 0 &&
            (b = d.filter(function (e) {
              return e.name.toLowerCase().includes(i);
            })),
          (
            <Fs {...Object.assign({}, e, { className: "Search" })}>
              <div className="ModalForm-Header">Search</div>
              <q.a>
                <q.a.Group controlId="exampleForm.ControlInput1" className="Search-Bar">
                  <ee.o className="Search-Icon" />
                  <q.a.Control
                    type="text"
                    autoComplete="off"
                    className="Search-Bar-Inside"
                    placeholder={p}
                    onChange={function (e) {
                      return o(e.target.value.toLowerCase());
                    }}
                    onKeyPress={function (e) {
                      "Enter" === e.key && e.preventDefault();
                    }}
                  />
                </q.a.Group>
              </q.a>
              <div className="Search-Results">
                {b.map(function (e) {
                  return (
                    <div className="Search-Results-Line">
                      <A background={t} path={"/player/" + e.id} className="Search-Results-Link">
                        {e.name}
                      </A>
                    </div>
                  );
                })}
              </div>
            </Fs>
          )
        );
      }
      a(191);
      var Wh = a(120);
      function Uh(e) {
        var t;
        console.log(
          null ===
            (t = Object({
              NODE_ENV: "production",
              PUBLIC_URL: "https://d35iw2jmbg6ut8.cloudfront.net",
              WDS_SOCKET_HOST: void 0,
              WDS_SOCKET_PATH: void 0,
              WDS_SOCKET_PORT: void 0,
              FAST_REFRESH: !0,
            })) || void 0 === t
            ? void 0
            : t.REACT_APP_GOOGLE_TRACKING_ID
        ),
          Wh.a.event({ category: "Sponsor Clicked", action: "".concat(e) });
      }
      function Gh() {
        return (
          <div className="Advertisement-SiteHeader">
            <div className="Advertisement-SiteHeader-Line">
              This season is brought to you by
              <a
                className="Advertisement-SiteHeader-Callout"
                href="https://www.TWOFREAKINSWORDS.com/"
                onClick={function () {
                  return Uh("TWO FREAKIN SWORDS (MainPage/Title)");
                }}
                target="_blank"
              >
                TWO FREAKIN SWORDS
              </a>
              <a
                href="https://www.TWOFREAKINSWORDS.com/"
                onClick={function () {
                  return Uh("TWO FREAKIN SWORDS (MainPage/Title)");
                }}
                target="_blank"
              >
                The fun of a sword fight. The danger of a card game.
              </a>
            </div>
          </div>
        );
      }
      function Hh() {
        var e,
          t = Object(r.useContext)(S.context);
        return (
          <l.a.Fragment>
            <Gh />
            <div className="League-Nav">
              {9 !== (null === (e = t.sim) || void 0 === e ? void 0 : e.phase) ? (
                <l.a.Fragment>
                  <Qh path="/league">Watch Live</Qh>
                  <Qh path="/upcoming">Place Bets</Qh>
                  <Qh path="/standings">Standings</Qh>
                  {PA(t.sim, "UNLOCKED_IDOLS") ? <Qh path="/leaderboard">Idols</Qh> : null}
                </l.a.Fragment>
              ) : null}
            </div>
          </l.a.Fragment>
        );
      }
      function Yh() {
        return (
          <l.a.Fragment>
            <div className="League-Nav">
              <Qh path="/league">Standings</Qh>
              <Qh path="/leaderboard">Idols</Qh>
            </div>
          </l.a.Fragment>
        );
      }
      function zh() {
        return (
          <l.a.Fragment>
            <Gh />
            <div className="League-Nav">
              <Qh path="/league">Watch Live</Qh>
              <Qh path="/upcoming">Place Bets</Qh>
              <Qh path="/bracket">Postseason</Qh>
              <Qh path="/standings">Standings</Qh>
              <Qh path="/leaderboard">Idols</Qh>
            </div>
          </l.a.Fragment>
        );
      }
      function Xh() {
        return (
          <l.a.Fragment>
            <div className="League-Nav">
              <Qh path="/league">Postseason</Qh>
              <Qh path="/standings">Standings</Qh>
              <Qh path="/leaderboard">Idols</Qh>
            </div>
          </l.a.Fragment>
        );
      }
      function Jh() {
        return (
          <l.a.Fragment>
            <Gh />
            <div className="League-Nav">
              <Qh path="/league">Watch Live</Qh>
              <Qh path="/upcoming">Place Bets</Qh>
              <Qh path="/bracket">Bracket</Qh>
              <Qh path="/tournament">Teams</Qh>
              <Qh path="/leaderboard">Idols</Qh>
            </div>
          </l.a.Fragment>
        );
      }
      function Zh() {
        return (
          <l.a.Fragment>
            <div className="League-Nav">
              <Qh path="/league">Bracket</Qh>
              <Qh path="/tournament">Teams</Qh>
              <Qh path="/leaderboard">Idols</Qh>
            </div>
          </l.a.Fragment>
        );
      }
      function qh() {
        return (
          <l.a.Fragment>
            <div className="League-Nav">
              <Qh path="/league">Events</Qh>
              <Qh path="/standings">Standings</Qh>
              <Qh path="/leaderboard">Idols</Qh>
            </div>
          </l.a.Fragment>
        );
      }
      (void 0 ===
        Object({
          NODE_ENV: "production",
          PUBLIC_URL: "https://d35iw2jmbg6ut8.cloudfront.net",
          WDS_SOCKET_HOST: void 0,
          WDS_SOCKET_PATH: void 0,
          WDS_SOCKET_PORT: void 0,
          FAST_REFRESH: !0,
        }).REACT_APP_CLIENT_ANALYTICS_ENABLED ||
        Object({
          NODE_ENV: "production",
          PUBLIC_URL: "https://d35iw2jmbg6ut8.cloudfront.net",
          WDS_SOCKET_HOST: void 0,
          WDS_SOCKET_PATH: void 0,
          WDS_SOCKET_PORT: void 0,
          FAST_REFRESH: !0,
        }).REACT_APP_CLIENT_ANALYTICS_ENABLED) &&
        Wh.a.initialize("UA-171524925-1");
      a(192);
      var Kh = function (e) {
          var t = e.dateString,
            a = Object(r.useState)(),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1];
          Object(r.useContext)(M.context).user;
          return (
            Object(r.useEffect)(
              function () {
                var e,
                  a = function () {
                    var e = (new Date(Date.parse(t)).getTime() - new Date().getTime()) / 1e3,
                      a = Math.max(Math.floor(e / 3600), 0);
                    e -= 3600 * a;
                    var n = Math.max(Math.floor(e / 60), 0);
                    e -= 60 * n;
                    var r = Math.max(Math.floor(e), 0);
                    o({ hours: a, minutes: n, seconds: r });
                  };
                return (
                  a(),
                  (e = setInterval(a, 1e3)),
                  function () {
                    clearInterval(e);
                  }
                );
              },
              [t]
            ),
            (
              <span className="Countdown">
                <span className="Countdown-Number">{null === i || void 0 === i ? void 0 : i.hours}</span>Hours
                <span className="Countdown-Number">{null === i || void 0 === i ? void 0 : i.minutes}</span>Minutes
                <span className="Countdown-Number">{null === i || void 0 === i ? void 0 : i.seconds}</span>Seconds
              </span>
            )
          );
        },
        _h = (a(130), l.a.createContext({ topIdols: [{ id: "", place: 0 }], data: void 0 })),
        $h = function (e) {
          var t = e.children,
            a = Object(c.g)().pathname,
            n = Object(r.useState)({ topIdols: [{ id: "", place: 0 }], data: void 0 }),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1];
          return (
            Object(r.useEffect)(
              function () {
                fetch("/api/getIdols", { credentials: "include" })
                  .then(function (e) {
                    return e.json();
                  })
                  .then(function (e) {
                    var t = [];
                    e &&
                      e.idols.length &&
                      e.idols.forEach(function (e, a) {
                        e && t.push({ id: e, place: a + 1 });
                      });
                    var a = { topIdols: t, data: void 0 };
                    void 0 !== e.data && (a.data = e.data), u(a);
                  })
                  .catch(function (e) {
                    console.log(e);
                  });
              },
              [a]
            ),
            (<_h.Provider value={o}>{t}</_h.Provider>)
          );
        };
      $h.context = _h;
      var eg = $h;
      function tg() {
        var e,
          t,
          a,
          n,
          i = Object(r.useContext)(xo.context),
          o = Object(r.useContext)(eg.context),
          c = Object(r.useState)([]),
          u = Object(s.a)(c, 2),
          m = u[0],
          A = u[1];
        function d(e) {
          if (null !== e.leagueTeamId)
            return i.teams.find(function (t) {
              return t.id === e.leagueTeamId;
            });
        }
        Object(r.useEffect)(
          function () {
            for (var e = [], t = 0; t <= o.topIdols.length - 1; t++) e.push(o.topIdols[t].id);
            (function () {
              var t = Object(h.a)(
                f.a.mark(function t() {
                  var a, n, r, l;
                  return f.a.wrap(function (t) {
                    for (;;)
                      switch ((t.prev = t.next)) {
                        case 0:
                          if (!(e.length > 0)) {
                            t.next = 6;
                            break;
                          }
                          return (t.next = 3), Ym(e);
                        case 3:
                          if (((a = t.sent), (n = []), void 0 !== a)) {
                            for (
                              r = function () {
                                var e = a[l],
                                  t = d(e),
                                  r = o.topIdols.find(function (t) {
                                    return t.id === e.id;
                                  });
                                void 0 === r && (r = { id: "", place: 0 }),
                                  n.push({ player: e, place: r.place, team: t, deceased: e.deceased });
                              },
                                l = a.length - 1;
                              l >= 0;
                              l--
                            )
                              r();
                            A(
                              n.sort(function (e, t) {
                                return e.place > t.place ? 1 : -1;
                              })
                            );
                          }
                        case 6:
                        case "end":
                          return t.stop();
                      }
                  }, t);
                })
              );
              return function () {
                return t.apply(this, arguments);
              };
            })()();
          },
          [o]
        );
        var g = Object(r.useContext)(S.context);
        if (!g || !g.sim) return null;
        var p = void 0 !== g.sim.season ? g.sim.season : -1,
          E = 7 == (null === (e = g.sim) || void 0 === e ? void 0 : e.phase),
          v =
            p > 11 &&
            (null === (t = g.sim) || void 0 === t ? void 0 : t.phase) >= 2 &&
            (null === (a = g.sim) || void 0 === a ? void 0 : a.phase) <= 7,
          b = o.data;
        void 0 !== b && (b = Object.values(o.data)[0]);
        var w =
          m.length < 1 || void 0 === m ? (
            <js />
          ) : (
            <ag
              info={m}
              playoffs={E}
              icons={!1}
              line={v}
              lineIndex={b}
              prepostseason={null === (n = g.sim) || void 0 === n ? void 0 : n.endseasonDate}
            />
          );
        return <l.a.Fragment>{w}</l.a.Fragment>;
      }
      function ag(e) {
        Object(r.useContext)(M.context).user;
        var t = [],
          a = [],
          n = e.line ? " Leaderboard-Player-Position-MVP" : void 0;
        if (void 0 === e.info || e.info.length < 1) return <js />;
        if (void 0 !== e.lineIndex && e.line)
          for (var i = 0; i < e.info.length; i++)
            i <= e.lineIndex
              ? t.push(<rg info={e.info[i]} key={e.info[i].place} showIcons={e.icons} numStyle={n} />)
              : a.push(<rg info={e.info[i]} key={e.info[i].place} showIcons={e.icons} />);
        else
          for (i = 0; i < e.info.length; i++) t.push(<rg info={e.info[i]} key={e.info[i].place} showIcons={e.icons} />);
        return (
          <l.a.Fragment>
            <h3 className="Leaderboard-Header">
              <_.Kb className="Leaderboard-Trophy" />
              MVP Voting
              <_.Kb className="Leaderboard-Trophy" />
            </h3>
            <div className="Leaderboard-Description-Box">
              <div className="Leaderboard-Description">
                MVPs are selected each Endseason. Players above the line will be named season MVPs and will receive an
                Ego Boost.
              </div>
              <div className="Leaderboard-Description">Go to a Player's page to choose them as your Idol.</div>
            </div>
            <Kh dateString={e.prepostseason} />
            <div className="Leaderboard-List">
              <ul
                className={"Leaderboard-Player-Container" + (e.icons ? " Leaderboard-Player-Container-WithIcon" : "")}
              >
                {t}
                {e.line ? (
                  <l.a.Fragment>
                    <ng />
                    {a}
                  </l.a.Fragment>
                ) : (
                  <ul
                    className={
                      "Leaderboard-Player-Container" + (e.icons ? " Leaderboard-Player-Container-WithIcon" : "")
                    }
                  >
                    {a}
                  </ul>
                )}
              </ul>
            </div>
          </l.a.Fragment>
        );
      }
      function ng() {
        return (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            role="img"
            aria-label="MVP Line. This is a wavy gold line."
            className="MVPLine"
            viewBox="0 0 650 20"
          >
            <g>
              <title>MVP Line</title>
              <desc>This is a wavy gold line.</desc>
              <path
                strokeWidth="3"
                d="M 0 10 Q 10 0, 20 10 Q 30 20, 40 10 Q 50 0, 60 10 Q 70 20, 80 10 Q 90 0, 100 10 Q 110 20, 120 10 Q 130 0, 140 10 Q 150 20, 160 10 Q 170 0, 180 10 Q 190 20, 200 10 Q 210 0, 220 10 Q 230 20, 240 10 Q 250 0, 260 10 Q 270 20, 280 10 Q 290 0, 300 10 Q 310 20, 320 10 Q 330 0, 340 10 Q 350 20, 360 10 Q 370 0, 380 10 Q 390 20, 400 10 Q 410 0, 420 10 Q 430 20, 440 10 Q 450 0, 460 10 Q 470 20, 480 10 Q 490 0, 500 10 Q 510 20, 520 10 Q 530 0, 540 10 Q 550 20, 560 10 Q 570 0, 580 10 Q 590 20, 600 10 Q 610 0, 620 10 Q 630 20, 640 10 Q 650 0, 660 10"
              />
            </g>
          </svg>
        );
      }
      function rg(e) {
        var t = Object(c.g)(),
          a = Object(r.useContext)(M.context).user,
          n = [],
          i = [],
          o = [],
          s = "Leaderboard-Player-Position";
        if (
          (e.showIcons &&
            e.info.deceased &&
            (o.includes(e.info.place) || i.includes(e.info.place) || n.includes(e.info.place)) &&
            (s += " Leaderboard-Icon-Confirmed"),
          void 0 !== e.numStyle && (s += e.numStyle),
          void 0 !== e.info)
        ) {
          var u,
            m,
            d,
            f,
            h,
            g,
            p,
            E,
            v,
            b,
            w,
            y,
            B,
            O = [];
          return (
            a.idol === (null === (u = e.info.player) || void 0 === u ? void 0 : u.id) && O.push("Your Idol"),
            (null === (m = e.info.player) || void 0 === m ? void 0 : m.permAttr.includes("SHELLED")) &&
              O.push("Shelled"),
            (null === (d = e.info.player) || void 0 === d ? void 0 : d.permAttr.includes("ELSEWHERE")) &&
              O.push("Elsewhere"),
            (null === (f = e.info.player) || void 0 === f ? void 0 : f.deceased) && O.push("Dead"),
            void 0 !== e.numStyle && O.push("MVP"),
            (null === (h = e.info.player) || void 0 === h ? void 0 : h.permAttr.includes("SCATTERED")) &&
              O.push("Scattered"),
            (
              <div
                className={"Leaderboard-Player-Wrapper" + (e.showIcons ? " Leaderboard-Player-Wrapper-WithIcon" : "")}
              >
                <div className="Leaderboard-Icon-Wrapper">
                  {e.showIcons && [].includes(e.info.place) ? <_.bc className="Leaderboard-Icon-Microphone" /> : null}
                  {e.showIcons && i.includes(e.info.place) ? (
                    <me.i className={e.info.deceased ? "Leaderboard-Icon-Confirmed" : "Leaderboard-Icon-Eclipse"} />
                  ) : null}
                  {e.showIcons && o.includes(e.info.place) ? (
                    <me.f className={e.info.deceased ? "Leaderboard-Icon-Confirmed" : "Leaderboard-Icon-Blood"} />
                  ) : null}
                  {e.showIcons && n.includes(e.info.place) ? (
                    <_.r className={e.info.deceased ? "Leaderboard-Icon-Confirmed" : "Leaderboard-Icon-Birds"} />
                  ) : null}
                  {e.showIcons && e.monitor ? <_.wb className="Leaderboard-Icon-Monitor" /> : null}
                </div>
                <A
                  background={t}
                  path={"/player/".concat(null === (g = e.info.player) || void 0 === g ? void 0 : g.id)}
                  className="Leaderboard-Player"
                >
                  {(null === (p = e.info.player) || void 0 === p ? void 0 : p.permAttr.includes("SHELLED")) ? (
                    <div className={"Leaderboard-Shelled" + +(Math.floor(5 * Math.random()) + 1)} aria-hidden="true">
                      SHELLED
                    </div>
                  ) : null}
                  {(null === (E = e.info.player) || void 0 === E ? void 0 : E.permAttr.includes("ELSEWHERE")) ? (
                    <div className="Leaderboard-Away-Status" aria-hidden="true">
                      elsewhere...
                    </div>
                  ) : null}
                  <div className="Leaderboard-Player-Name-Container">
                    <div className={s} aria-label={"Rank " + e.info.place + "."} role="text">
                      {e.info.place}
                    </div>
                    {e.info.deceased ? (
                      <div
                        className="Leaderboard-Player-Deceased-Icon"
                        style={{ filter: a.lightMode ? "invert(1)" : "initial" }}
                      />
                    ) : null}
                    <div
                      className={
                        "Leaderboard-Player-Name" +
                        ((null === (v = e.info.player) || void 0 === v ? void 0 : v.permAttr.includes("ELSEWHERE"))
                          ? " Leaderboard-Away"
                          : "")
                      }
                    >
                      {a.idol === (null === (b = e.info.player) || void 0 === b ? void 0 : b.id) ? (
                        <qs aria-hidden="true" className="ModalItem-Icons" />
                      ) : (
                        ""
                      )}{" "}
                      {(null === (w = e.info.player) || void 0 === w ? void 0 : w.permAttr.includes("SCATTERED"))
                        ? go(null === (y = e.info.player) || void 0 === y ? void 0 : y.name)
                        : null === (B = e.info.player) || void 0 === B
                        ? void 0
                        : B.name}
                    </div>
                  </div>
                  <div className="Leaderboard-Team-Container">
                    <div
                      className="Leaderboard-Team-Color"
                      aria-hidden="true"
                      style={{ background: void 0 !== e.info.team ? e.info.team.mainColor : "#999999" }}
                    >
                      <div className="Leaderboard-Team-Emoji">{DA(e.info.team)}</div>
                    </div>
                    <div className="sr-only" aria-label=" of the " role="text" />
                    <div className="Leaderboard-Team-Name">
                      <span className="Leaderboard-Team-Name-Location">
                        {void 0 !== e.info.team ? e.info.team.fullName : "Null Team"}
                      </span>
                    </div>
                  </div>
                  <div
                    className="sr-only"
                    aria-label={"." + (O.length > 0 ? " Current Status: " + O.join(", ") + "." : "")}
                  />
                </A>
              </div>
            )
          );
        }
        return null;
      }
      var lg;
      a(55);
      function ig() {
        var e = Object(r.useContext)(S.context),
          t = Object(r.useContext)(xo.context),
          a = Object(r.useState)(0),
          n = Object(s.a)(a, 2),
          i = (n[0], n[1], Object(c.g)());
        if (!e || !e.sim || !e.standings) return null;
        if (!t || !t.leagues) return null;
        var o = t.leagues.find(function (t) {
          var a;
          return t.id === (null === (a = e.season) || void 0 === a ? void 0 : a.league);
        });
        if (void 0 === o) return null;
        var u = [];
        if (t)
          for (var m = 0; m < o.subleagues.length; m++)
            u.push(<og key={m} league={o} subleague={o.subleagues[m]} standings={e.standings} />);
        var d =
          void 0 !== o ? (
            <ul role="list" className="Standings-Subleague-Container" aria-label={o.name}>
              {u}
            </ul>
          ) : (
            <js />
          );
        return (
          <div className="Standings-League">
            <div className="Standings-League-Header">
              <h3>{o.name}</h3>
              <A
                background={i}
                path="/leagueinfo"
                className="Navigation-Button Navigation-Button-Current Standings-Button"
              >
                Info
              </A>
            </div>
            {PA(e.sim, "SUNSUN") ? (
              <div className="League-Sunsun">
                <mt />
                <nm />
              </div>
            ) : null}
            {d}
          </div>
        );
      }
      function og(e) {
        var t = Object(r.useContext)(xo.context).subleagues.find(function (t) {
          return t.id === e.subleague;
        });
        if (void 0 === t) return null;
        for (var a = [], n = 0; n < t.divisions.length; n++)
          a.push(<sg key={n} league={e.league} division={t.divisions[n]} standings={e.standings} />);
        return (
          <div className="Standings-Subleague">
            <h4 className="Standings-Subleague-Header">{t.name}</h4>
            <ul className="Standings-Division-Container" aria-label={t.name}>
              {a}
            </ul>
          </div>
        );
      }
      function sg(e) {
        var t = Object(r.useContext)(xo.context),
          a = t.tiebreakers.find(function (t) {
            return t.id === e.league.tiebreakers;
          });
        if (void 0 === a) return null;
        var n = t.divisions.find(function (t) {
          return t.id === e.division;
        });
        if (void 0 === n) return null;
        n.teams.sort(function (t, n) {
          var r = lo(t, e.standings),
            l = lo(n, e.standings),
            i = a.order.indexOf(t),
            o = a.order.indexOf(n);
          return r.wins > l.wins ? -1 : r.wins < l.wins ? 1 : i < o ? -1 : o < i ? 1 : 0;
        });
        var i = n.teams.map(function (t, a) {
          var n = lo(t, e.standings);
          return <cg key={a} team={t} record={n} />;
        });
        return (
          <div className="Standings-Division">
            <h5 className="Standings-Division-Header">{n.name}</h5>
            <div className="Standings-Division-LabelRow">
              <span className="Standings-Division-Label" aria-hidden="true">
                Teams
              </span>
              <span className="Standings-Division-Label" aria-hidden="true">
                Wins
              </span>
              <span className="Standings-Division-Label" aria-hidden="true">
                Record
              </span>
            </div>
            <ul className="Standings-Team-Container" aria-label={n.name}>
              {i}
            </ul>
          </div>
        );
      }
      function cg(e) {
        var t = Object(c.g)(),
          a = Object(r.useContext)(xo.context),
          n = Object(r.useContext)(S.context),
          i = Object(r.useContext)(M.context).user,
          o = a.teams.find(function (t) {
            return t.id === e.team;
          });
        return void 0 === o ? null : (
          <A background={t} path={"/team/".concat(o.id)} className="Standings-Team">
            <div className="Standings-Team-Name-Container">
              <div className="Standings-Team-Color" aria-hidden="true" style={{ background: o.mainColor }}>
                <div className="Standings-Team-Emoji">{DA(o)}</div>
              </div>
              <div className="Standings-Team-Name" style={Ao(i, o)}>
                {o.fullName}
                {PA(n.sim, "SIM_SHOW_LEVELS") && o.level > 4 ? <Eo /> : null}
                {o.seasAttr.includes("PARTY_TIME") ? (
                  <div style={{ fontSize: "14px", marginTop: "2px", marginLeft: "8px" }}>{FA("0x1F389")}</div>
                ) : null}
              </div>
            </div>
            <div className="Standings-Team-Wins" aria-label={" with " + e.record.wins + " Wins,"} role="text">
              {io(e.record)}
            </div>
            <div
              className="Standings-Team-Record"
              aria-label={e.record.nonlosses + " Non-Losses, and " + e.record.losses + " Losses"}
              role="text"
            >
              {oo(e.record)}
            </div>
          </A>
        );
      }
      !(function (e) {
        (e[(e.Live = 0)] = "Live"),
          (e[(e.Upcoming = 1)] = "Upcoming"),
          (e[(e.TheHall = 2)] = "TheHall"),
          (e[(e.Standings = 3)] = "Standings"),
          (e[(e.Leaderboard = 4)] = "Leaderboard");
      })(lg || (lg = {}));
      var ug = function (e) {
        var t,
          a = e.path,
          n = Object(r.useContext)(S.context),
          i = Object(r.useContext)(M.context).user,
          o = Object(r.useContext)(Y.context),
          s = void 0 === n.schedule;
        function c() {
          switch (a) {
            case "/upcoming":
              return lg.Upcoming;
            case "/leaderboard":
              return lg.Leaderboard;
            case "/standings":
              return lg.Standings;
            default:
              return lg.Live;
          }
        }
        if (!n.sim) return null;
        var u,
          m = c() === lg.Upcoming ? { schedule: n.tomorrowSchedule, sort: 0 } : { schedule: n.schedule, sort: 1 },
          A = c() === lg.Upcoming ? n.sim.day + 1 : n.sim.day,
          d =
            void 0 === m.schedule ? null : (
              <ul>
                {null ===
                  (t = (function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                      t = arguments.length > 1 ? arguments[1] : void 0;
                    if (!i || !o || void 0 === e) return e;
                    for (var a = [], n = 0; n < e.length; n++) a.push(e[n]);
                    return (
                      a.sort(),
                      (a = a.sort(function (e, a) {
                        var n = e.homeTeam == i.favoriteTeam || e.awayTeam == i.favoriteTeam,
                          r = a.homeTeam == i.favoriteTeam || a.awayTeam == i.favoriteTeam;
                        if (n) return -1;
                        if (r) return 1;
                        if (!e.gameComplete && a.gameComplete) return -1;
                        if (e.gameComplete && !a.gameComplete) return 1;
                        var l = void 0 !== o.activeBets[e.id] && o.activeBets[e.id].length > 0,
                          s = void 0 !== o.activeBets[a.id] && o.activeBets[a.id].length > 0,
                          c = l ? o.activeBets[e.id][0] : void 0,
                          u = s ? o.activeBets[a.id][0] : void 0;
                        if (l && s) {
                          if (c.amount > u.amount) return -1;
                          if (u.amount > c.amount) return 1;
                        } else {
                          if (l) return 0 === t ? 1 : -1;
                          if (s) return 0 === t ? -1 : 1;
                        }
                        return Math.max(e.homeOdds, e.awayOdds) > Math.max(a.homeOdds, a.awayOdds) ? -1 : 1;
                      }))
                    );
                  })(m.schedule, m.sort)) || void 0 === t
                  ? void 0
                  : t.map(function (e, t) {
                      return <ph index={t} key={t} data={e} />;
                    })}
              </ul>
            ),
          f =
            void 0 === m.schedule || (void 0 !== m.schedule && m.schedule.length <= 0) ? (
              <div className="League-Body">There are no season games scheduled for Day {A + 1}.</div>
            ) : (
              <div>
                <div className="League-Countdown">
                  {c() === lg.Upcoming ? <Kh dateString={xA().toString()} /> : null}
                  <div role="text" aria-label="Until Next Set of Games" className="sr-only" />
                </div>
                {d}
              </div>
            ),
          h = void 0 !== n && void 0 !== n.sim ? n.sim.season : -1;
        switch (c()) {
          case lg.Leaderboard:
            u = <tg />;
            break;
          case lg.Standings:
            u = <ig />;
            break;
          case lg.Live:
          case lg.Upcoming:
            u = s ? <js /> : f;
        }
        return (
          <l.a.Fragment>
            <h2 className="League-Header">
              Season<span className="League-Number">{h + 1}</span>Day<span className="League-Number">{A + 1}</span>
            </h2>
            <Hh />
            {u}
            <Lh />
          </l.a.Fragment>
        );
      };
      a(193);
      function mg(e) {
        var t,
          a = Object(r.useContext)(S.context).postseasons[e.playoffIndex];
        return (
          <div className="PlayoffSetup-Header">
            {null === a || void 0 === a || null === (t = a.playoffs) || void 0 === t ? void 0 : t.name}
          </div>
        );
      }
      function Ag(e) {
        Object(r.useContext)(M.context).user;
        var t = Object(r.useContext)(S.context),
          a = t.postseasons[e.playoffIndex].round,
          n = t.postseasons[e.playoffIndex].allRounds;
        if (void 0 === n || void 0 === a) return null;
        n.sort(function (e, t) {
          return e.roundNumber < t.roundNumber ? -1 : 1;
        });
        var i = [];
        return (
          n.forEach(function (t) {
            if (t.roundNumber <= a.roundNumber) {
              var n = "PlayoffSetup-Navigation-Button";
              t.roundNumber === e.index && (n += " PlayoffSetup-Navigation-Button-Current"),
                i.push(
                  <button
                    className={n}
                    onClick={function () {
                      e.setIndex(t.roundNumber);
                    }}
                  >
                    {t.name}
                  </button>
                );
            }
          }),
          (<div className="PlayoffSetup-Navigation">{i}</div>)
        );
      }
      function dg(e) {
        var t = Object(r.useContext)(S.context),
          a = t.postseasons[e.playoffIndex].allRounds,
          n = t.postseasons[e.playoffIndex].allMatchups;
        if (void 0 === a || void 0 === n) return null;
        var i = a.find(function (t) {
          return t.roundNumber === e.roundNumber;
        });
        if (void 0 === i) return null;
        var o = [];
        if (
          (i.matchups.forEach(function (e) {
            var t = n.find(function (t) {
              return t.id === e;
            });
            t && o.push(t);
          }),
          1 === o.length)
        )
          return (
            <div className="PlayoffSetup-Body">
              <div className="PlayoffSetup-MatchupGroup">{hg(t.postseasons[e.playoffIndex], i.roundNumber, o)}</div>
            </div>
          );
        var s = Math.round(o.length / 2),
          c = [].concat(o).splice(0, s),
          u = [].concat(o).splice(s, s);
        return (
          <div className="PlayoffSetup-Body">
            <div className="PlayoffSetup-MatchupGroup">
              {hg(t.postseasons[e.playoffIndex].playoffs, i.roundNumber, c)}
            </div>
            <div className="PlayoffSetup-MatchupGroup">
              {hg(t.postseasons[e.playoffIndex].playoffs, i.roundNumber, u)}
            </div>
          </div>
        );
      }
      function fg(e, t) {
        return e
          ? (t.homeWins >= t.gamesNeeded && t.homeWins > t.awayWins) ||
              (t.homeWins <= -t.gamesNeeded && t.homeWins < t.awayWins)
          : (t.awayWins >= t.gamesNeeded && t.awayWins > t.homeWins) ||
              (t.awayWins <= -t.gamesNeeded && t.awayWins < t.homeWins);
      }
      function hg(e, t, a) {
        var n = Object(r.useContext)(xo.context),
          i = (Object(r.useContext)(S.context), Object(c.g)());
        Object(r.useContext)(M.context).user;
        return void 0 === n
          ? null
          : null === a || void 0 === a
          ? void 0
          : a.map(function (e, t) {
              var a = e.homeTeam
                  ? n.teams.find(function (t) {
                      return t.id === e.homeTeam;
                    })
                  : void 0,
                r = e.awayTeam
                  ? n.teams.find(function (t) {
                      return t.id === e.awayTeam;
                    })
                  : void 0;
              if (void 0 === a && void 0 === r) return null;
              var o = null !== e.homeSeed ? e.homeSeed : void 0,
                s = null !== e.awaySeed ? e.awaySeed : void 0;
              return void 0 === r && a ? (
                <div className="PlayoffSetup-Matchup" key={t}>
                  <A background={i} path={"/team/".concat(a.id)} className="PlayoffSetup-MatchupTeam-Group">
                    <div className="PlayoffSetup-MatchupTeam-Info">
                      {void 0 !== o ? <div className="PlayoffSetup-Seed">{o + 1}</div> : null}
                      {a ? (
                        <div className="PlayoffSetup-MatchupTeam-Icon" style={{ background: a.mainColor }}>
                          {DA(a)}
                        </div>
                      ) : null}
                      <div className="PlayoffSetup-MatchupTeam">
                        <div className="PlayoffSetup-MatchupTeam-Desktop">{a.fullName}</div>
                        <div className="PlayoffSetup-MatchupTeam-Mobile">{a.nickname}</div>
                        {a.level > 4 ? <Eo /> : null}
                      </div>
                    </div>
                    <div className="PlayoffSetup-MatchupTeam-Info">
                      <div className="PlayoffSetup-Bye">idling...</div>
                    </div>
                  </A>
                </div>
              ) : (
                <div className="PlayoffSetup-Matchup" key={t}>
                  <A
                    background={i}
                    path={"/team/".concat(null === a || void 0 === a ? void 0 : a.id)}
                    className="PlayoffSetup-MatchupTeam-Group"
                  >
                    <div className="PlayoffSetup-MatchupTeam-Info">
                      {void 0 !== o ? <div className="PlayoffSetup-Seed">{o + 1}</div> : null}
                      {a ? (
                        <div className="PlayoffSetup-MatchupTeam-Icon" style={{ background: a.mainColor }}>
                          {DA(a)}
                        </div>
                      ) : null}
                      {a ? (
                        <div className="PlayoffSetup-MatchupTeam">
                          <div className="PlayoffSetup-MatchupTeam-Desktop">{a.fullName}</div>
                          <div className="PlayoffSetup-MatchupTeam-Mobile">{a.nickname}</div>
                          {a.level > 4 ? <Eo /> : null}
                        </div>
                      ) : (
                        <div className="PlayoffSetup-Bye">idling...</div>
                      )}
                    </div>
                    <div className="PlayoffSetup-MatchupTeam-Info">
                      <div
                        className={
                          "PlayoffSetup-MatchupTeam-Wins" + (fg(!0, e) ? " PlayoffSetup-MatchupTeam-WinsComplete" : "")
                        }
                      >
                        {e.homeWins}
                      </div>
                    </div>
                  </A>
                  <A
                    background={i}
                    path={"/team/".concat(null === r || void 0 === r ? void 0 : r.id)}
                    className="PlayoffSetup-MatchupTeam-Group"
                  >
                    <div className="PlayoffSetup-MatchupTeam-Info">
                      {void 0 !== s ? <div className="PlayoffSetup-Seed">{s + 1}</div> : null}
                      {r ? (
                        <div className="PlayoffSetup-MatchupTeam-Icon" style={{ background: r.mainColor }}>
                          {DA(r)}
                        </div>
                      ) : null}
                      {r ? (
                        <div className="PlayoffSetup-MatchupTeam">
                          <div className="PlayoffSetup-MatchupTeam-Desktop">{r.fullName}</div>
                          <div className="PlayoffSetup-MatchupTeam-Mobile">{r.nickname}</div>
                          {r.level > 4 ? <Eo /> : null}
                        </div>
                      ) : (
                        <div className="PlayoffSetup-Bye">idling...</div>
                      )}
                    </div>
                    <div className="PlayoffSetup-MatchupTeam-Info">
                      <div
                        className={
                          "PlayoffSetup-MatchupTeam-Wins" + (fg(!1, e) ? " PlayoffSetup-MatchupTeam-WinsComplete" : "")
                        }
                      >
                        {e.awayWins}
                      </div>
                    </div>
                  </A>
                </div>
              );
            });
      }
      var gg,
        pg = function (e) {
          var t = Object(r.useContext)(S.context),
            a = Object(r.useState)(t.postseasons[0].round ? t.postseasons[0].round.roundNumber : 0),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1];
          return void 0 === t || void 0 === t.postseasons[e.playoffIndex].round ? null : (
            <div className="PlayoffSetup">
              <mg playoffIndex={e.playoffIndex} />
              <Ag playoffIndex={e.playoffIndex} index={i} setIndex={o} />
              <dg playoffIndex={e.playoffIndex} roundNumber={i} />
            </div>
          );
        };
      !(function (e) {
        (e[(e.Live = 0)] = "Live"),
          (e[(e.Upcoming = 1)] = "Upcoming"),
          (e[(e.Leaderboard = 2)] = "Leaderboard"),
          (e[(e.Standings = 3)] = "Standings"),
          (e[(e.Postseason = 4)] = "Postseason");
      })(gg || (gg = {}));
      var Eg = function (e) {
          var t,
            a,
            n,
            i,
            o,
            s,
            c,
            u,
            m,
            A,
            d,
            f,
            h = e.path,
            g = Object(r.useContext)(S.context),
            p = Object(r.useContext)(M.context).user,
            E = Object(r.useContext)(Y.context),
            v = void 0 === g.schedule;
          if (void 0 === g.postseasons) return null;
          function b() {
            switch (h) {
              case "/upcoming":
                return gg.Upcoming;
              case "/leaderboard":
                return gg.Leaderboard;
              case "/standings":
                return gg.Standings;
              case "/bracket":
                return gg.Postseason;
              default:
                return gg.Live;
            }
          }
          function w() {
            var e, t;
            return b() === gg.Live
              ? (null === (e = g.sim) || void 0 === e ? void 0 : e.day) || -1
              : (null === (t = g.sim) || void 0 === t ? void 0 : t.day) || 0;
          }
          if (!g.sim) return null;
          var y,
            B = [],
            O = [],
            I = Object(z.a)(g.postseasons);
          try {
            for (I.s(); !(y = I.n()).done; ) {
              var C = y.value;
              void 0 !== (null === C || void 0 === C ? void 0 : C.matchups) && B.push.apply(B, Object(J.a)(C.matchups)),
                void 0 !== (null === C || void 0 === C ? void 0 : C.tomorrowMatchups) &&
                  O.push.apply(O, Object(J.a)(C.tomorrowMatchups));
            }
          } catch (Q) {
            I.e(Q);
          } finally {
            I.f();
          }
          var k,
            N = b() === gg.Live ? g.schedule : g.tomorrowSchedule,
            T = b() === gg.Live ? B : O,
            x =
              void 0 === N || (void 0 !== N && N.length <= 0) ? null : (
                <ul>
                  {null ===
                    (t = (function () {
                      var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                      if (!p || !E || void 0 === e) return e;
                      for (var t = [], a = 0; a < e.length; a++) {
                        var n,
                          r,
                          l =
                            void 0 ===
                            (null === (n = e[a].state) || void 0 === n || null === (r = n.postseason) || void 0 === r
                              ? void 0
                              : r.bracket)
                              ? 0
                              : e[a].state.postseason.bracket + 1;
                        void 0 === t[l + 1] && (t[l + 1] = []), t[l + 1].push(e[a]);
                      }
                      var i = [];
                      return (
                        t.forEach(function (e) {
                          e.sort(),
                            (e = e.sort(function (e, t) {
                              var a = e.homeTeam == p.favoriteTeam || e.awayTeam == p.favoriteTeam,
                                n = t.homeTeam == p.favoriteTeam || t.awayTeam == p.favoriteTeam;
                              if (a) return -1;
                              if (n) return 1;
                              if (!e.gameComplete && t.gameComplete) return -1;
                              if (e.gameComplete && !t.gameComplete) return 1;
                              var r = void 0 !== E[e.id] && E[e.id].length > 0,
                                l = void 0 !== E[t.id] && E[t.id].length > 0,
                                i = r ? E[e.id][0] : void 0,
                                o = l ? E[t.id][0] : void 0;
                              if (r && l) {
                                if (i.amount > o.amount) return -1;
                                if (o.amount > i.amount) return 1;
                              } else {
                                if (r) return -1;
                                if (l) return 1;
                              }
                              return Math.max(e.homeOdds, e.awayOdds) > Math.max(t.homeOdds, t.awayOdds) ? -1 : 1;
                            })),
                            i.push.apply(i, Object(J.a)(e));
                        }),
                        i
                      );
                    })(N)) || void 0 === t
                    ? void 0
                    : t.map(function (e, t) {
                        return <vh index={t} key={t} data={e} matchups={T} />;
                      })}
                </ul>
              ),
            P =
              void 0 !==
              (null === g ||
              void 0 === g ||
              null === (a = g.postseasons[0]) ||
              void 0 === a ||
              null === (n = a.round) ||
              void 0 === n
                ? void 0
                : n.roundNumber)
                ? null === g ||
                  void 0 === g ||
                  null === (i = g.postseasons[0]) ||
                  void 0 === i ||
                  null === (o = i.round) ||
                  void 0 === o
                  ? void 0
                  : o.roundNumber
                : -1,
            L =
              void 0 !==
              (null === g ||
              void 0 === g ||
              null === (s = g.postseasons[0]) ||
              void 0 === s ||
              null === (c = s.tomorrowRound) ||
              void 0 === c
                ? void 0
                : c.roundNumber)
                ? null === g ||
                  void 0 === g ||
                  null === (u = g.postseasons[0]) ||
                  void 0 === u ||
                  null === (m = u.tomorrowRound) ||
                  void 0 === m
                  ? void 0
                  : m.roundNumber
                : -1,
            R = (b() === gg.Live ? P : L) + 1;
          switch (b()) {
            case gg.Postseason:
              for (var D = [], F = 0; F < g.postseasons.length; F++) D.push(<pg playoffIndex={F} />);
              k = <l.a.Fragment>{D}</l.a.Fragment>;
              break;
            case gg.Leaderboard:
              k = <tg />;
              break;
            case gg.Standings:
              k = <ig />;
              break;
            default:
              k = v ? (
                <js />
              ) : (
                <div>
                  {null !== x ? (
                    <div>
                      <div className="League-Countdown">
                        {b() === gg.Upcoming ? <Kh dateString={xA().toString()} /> : null}
                      </div>
                      <ul>{x}</ul>
                    </div>
                  ) : (
                    <div className="League-Body">
                      There are no postseason games yet scheduled for Day {w() + 1}. Check back when the current batch
                      of games finish.
                    </div>
                  )}
                </div>
              );
          }
          return (
            <l.a.Fragment>
              <h2 className="League-Header">
                <div className="League-Header-Group">
                  {(null === (A = g.postseasons[0].round) || void 0 === A ? void 0 : A.special) ? (
                    <l.a.Fragment>
                      {null === (d = g.postseasons[0].round) || void 0 === d ? void 0 : d.name} 
                    </l.a.Fragment>
                  ) : (
                    "Postseason Round"
                  )}
                </div>
                {(null === (f = g.postseasons[0].round) || void 0 === f ? void 0 : f.special) ? null : (
                  <span className="League-Number">{R}</span>
                )}
                Day<span className="League-Number">{w() + 1}</span>
              </h2>
              <zh />
              {k}
            </l.a.Fragment>
          );
        },
        vg = function (e) {
          var t,
            a,
            n = e.path,
            i = Object(r.useContext)(S.context),
            o = Object(r.useContext)(M.context).user,
            s = Object(r.useContext)(xo.context);
          if (void 0 === i || void 0 === i.sim || void 0 === s) return null;
          if (void 0 === i.postseasons) return null;
          var c = [],
            u = [],
            m = [],
            A = [];
          if (
            (i.postseasons.forEach(function (e) {
              var t;
              if (
                void 0 !== (null === e || void 0 === e || null === (t = e.playoffs) || void 0 === t ? void 0 : t.winner)
              ) {
                var a = s.teams.find(function (t) {
                  var a;
                  return (
                    t.id ===
                    (null === e || void 0 === e || null === (a = e.playoffs) || void 0 === a ? void 0 : a.winner)
                  );
                });
                void 0 !== a && (c.push(a), u.push(a.secondaryColor), m.push(a.fullName), A.push(e.playoffs.name));
              }
            }),
            c.length <= 0)
          )
            return null;
          for (var d = [], f = 0; f < c.length; f++)
            d.push(
              void 0 !== c[f] ? (
                <div className="League-Info-Body">
                  Your {A[f]} Champions are the{" "}
                  <span className="League-Info-Callout" style={Ao(o, c[f])}>
                    {m[f]}
                  </span>
                  !
                </div>
              ) : null
            );
          return (
            <div>
              <div className="League-Info">
                <div className="League-Header">
                  Season{" "}
                  {(null !==
                    (t = null === i || void 0 === i || null === (a = i.sim) || void 0 === a ? void 0 : a.season) &&
                  void 0 !== t
                    ? t
                    : 0) + 1}{" "}
                  is over.
                </div>
                {d}
                <div className="League-Info-End">
                  <a href="/offseason">The Election ends soon! Go cast your Votes.</a>
                </div>
              </div>
              <Yh />
              {"/leaderboard" === n ? <tg /> : <ig />}
            </div>
          );
        };
      a(194);
      function bg() {
        var e = Object(r.useState)([]),
          t = Object(s.a)(e, 2),
          a = t[0],
          n = t[1],
          i = Object(r.useState)(!1),
          o = Object(s.a)(i, 2),
          c = o[0],
          u = o[1];
        Object(r.useEffect)(function () {
          m();
        }, []);
        function m() {
          return A.apply(this, arguments);
        }
        function A() {
          return (A = Object(h.a)(
            f.a.mark(function e() {
              var t, a, r;
              return f.a.wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.next = 2), xm();
                    case 2:
                      if (((t = e.sent), (a = []), void 0 !== t)) {
                        e.next = 6;
                        break;
                      }
                      return e.abrupt("return");
                    case 6:
                      for (r = 0; r < t.length; r++) a.push(t[r].msg);
                      n(a), u(!0);
                    case 9:
                    case "end":
                      return e.stop();
                  }
              }, e);
            })
          )).apply(this, arguments);
        }
        var d = "EventTicker-Group";
        if (c) {
          for (var g = 0, p = 0; p < a.length; p++) g += a[p].length;
          var E = g / 5;
          d +=
            E > 300
              ? " EventTicker-Group-Animating-300"
              : E > 240
              ? " EventTicker-Group-Animating-240"
              : E > 180
              ? " EventTicker-Group-Animating-180"
              : E > 120
              ? " EventTicker-Group-Animating-120"
              : " EventTicker-Group-Animating-60";
        }
        return (
          <div className="EventTicker-Display">
            <div className="EventTicker-News">News:</div>
            <div className="EventTicker-Scroll">
              <div
                className={d}
                onAnimationEnd={function () {
                  u(!1), m();
                }}
              >
                {a.map(function (e, t) {
                  return (
                    <div className="EventTicker-Item" key={t}>
                      {e}
                    </div>
                  );
                })}
              </div>
            </div>
          </div>
        );
      }
      a(195);
      var wg = function () {
          var e,
            t,
            a = Object(r.useContext)(S.context),
            n = Object(r.useContext)(M.context).user,
            i = Object(r.useState)(""),
            o = Object(s.a)(i, 2),
            c = o[0],
            u = o[1],
            m = Object(r.useState)(0),
            A = Object(s.a)(m, 2),
            d = A[0],
            f = A[1];
          return (
            <header className="Header">
              <div className="Header-Links">
                <div className="Header-Logo">
                  <h1 className="Header-Title">
                    <a href="/">Blaseball</a>
                  </h1>
                  <div
                    className="Header-Logo-Tag"
                    onClick={function (e) {
                      return (function (e) {
                        switch (e) {
                          case 1:
                            u("red");
                            break;
                          case 2:
                            u("#ff510c");
                            break;
                          case 3:
                            u("#ffe40c");
                            break;
                          case 4:
                            u("#58ff0c");
                            break;
                          case 5:
                            u("#0cffaf");
                            break;
                          case 6:
                            u("#0c32ff");
                            break;
                          case 7:
                            u("#580cff");
                            break;
                          case 8:
                            u("#910cff");
                            break;
                          case 9:
                            u("#f70cff");
                            break;
                          default:
                            u("");
                        }
                        f(e > 8 ? 0 : e);
                      })(d + 1);
                    }}
                    style={{ background: c, color: NA(c), cursor: "pointer" }}
                  >
                    BETA
                  </div>
                  {(null === (e = a.sim) || void 0 === e ? void 0 : e.eraTitle) &&
                    (null === n || void 0 === n ? void 0 : n.isSignedIn) && (
                      <div className="Header-Logo-Era" style={{ color: a.sim.eraColor }}>
                        {a.sim.eraTitle}
                      </div>
                    )}
                  {(null === (t = a.sim) || void 0 === t ? void 0 : t.subEraTitle) &&
                    (null === n || void 0 === n ? void 0 : n.isSignedIn) && (
                      <div className="Header-Logo-SubEra" style={{ color: a.sim.subEraColor }}>
                        {a.sim.subEraTitle}
                      </div>
                    )}
                </div>
                <div className="Header-Social">
                  <div className="Header-Social-Patreon">
                    <div className="Header-Social-Patreon-Inner">
                      <a
                        className="Header-Social-Patreon-Icon"
                        href="https://www.patreon.com/blaseball"
                        target="_blank"
                        aria-label="Patreon"
                      >
                        Patreon
                      </a>
                    </div>
                  </div>
                  <div className="Header-Social-Follow">
                    <div className="Header-Social-Follow-Inner">
                      <a
                        className="Header-Social-Follow-Icon"
                        href="https://discord.gg/3uFgJhu"
                        target="_blank"
                        aria-label="Discord"
                      >
                        <ue.e aria-label="Discord Icon" />
                      </a>
                      <a
                        className="Header-Social-Follow-Icon"
                        href="https://twitter.com/blaseball"
                        target="_blank"
                        aria-label="Twitter"
                      >
                        <ue.j aria-label="Twitter Icon" />
                      </a>
                      <a
                        className="Header-Social-Follow-Icon"
                        href="https://www.instagram.com/blaseball/"
                        target="_blank"
                        aria-label="Instagram"
                      >
                        <ue.h aria-label="Instagram Icon" />
                      </a>
                      <a
                        className="Header-Social-Follow-Icon"
                        href="https://www.twitch.tv/blaseball/"
                        target="_blank"
                        aria-label="Twitch"
                      >
                        <ue.i aria-label="Twitch Icon" />
                      </a>
                      <a
                        className="Header-Social-Follow-Icon"
                        href="https://www.youtube.com/channel/UCsDnmZ2Rk_FevNS32DtctEA"
                        target="_blank"
                        aria-label="Youtube"
                      >
                        <ue.k aria-label="Youtube Icon" />
                      </a>
                    </div>
                  </div>
                </div>
              </div>
              {(null === n || void 0 === n ? void 0 : n.isSignedIn) && <bg />}
            </header>
          );
        },
        yg = (a(196), l.a.createContext({ players: [], teams: [] })),
        Bg = function (e) {
          var t = e.children,
            a = Object(c.g)().pathname,
            n = Object(r.useState)({ players: [], teams: [] }),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1];
          return (
            Object(r.useEffect)(
              function () {
                fetch("/api/getTribute", { credentials: "include" })
                  .then(function (e) {
                    return e.json();
                  })
                  .then(function (e) {
                    var t = [],
                      a = [];
                    e &&
                      (e.players &&
                        e.players.length &&
                        e.players.forEach(function (e, a) {
                          e && t.push({ id: e.playerId, peanuts: e.peanuts, place: a + 1 });
                        }),
                      e.teams &&
                        e.teams.length &&
                        e.teams.forEach(function (e, t) {
                          e && a.push({ id: e.teamId, peanuts: e.peanuts, place: t + 1 });
                        })),
                      u({ players: t, teams: a });
                  })
                  .catch(function (e) {
                    console.log(e);
                  });
              },
              [a]
            ),
            (<yg.Provider value={o}>{t}</yg.Provider>)
          );
        };
      Bg.context = yg;
      var Og = Bg;
      function Ig() {
        var e = Object(r.useContext)(xo.context),
          t = Object(r.useContext)(Og.context),
          a = Object(r.useState)([]),
          n = Object(s.a)(a, 2),
          i = n[0],
          o = n[1],
          c = Object(r.useState)([]),
          u = Object(s.a)(c, 2),
          m = u[0],
          A = u[1],
          d = Object(r.useState)(0),
          g = Object(s.a)(d, 2),
          p = g[0],
          E = g[1];
        Object(r.useEffect)(
          function () {
            for (var a = [], n = 0; n <= t.players.length - 1; n++) a.push(t.players[n].id);
            var r = [];
            for (n = 0; n <= t.teams.length - 1; n++) r.push(t.teams[n].id);
            (function () {
              var e = Object(h.a)(
                f.a.mark(function e() {
                  var n, r, l, i;
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if (!(a.length > 0)) {
                            e.next = 6;
                            break;
                          }
                          return (e.next = 3), Ym(a);
                        case 3:
                          if (((n = e.sent), (r = []), void 0 !== n)) {
                            for (
                              l = function () {
                                var e = n[i],
                                  a = t.players.find(function (t) {
                                    return t.id === e.id;
                                  });
                                void 0 === a && (a = { id: "", peanuts: 0, place: 0 }),
                                  r.push({ player: e, peanuts: a.peanuts, place: a.place });
                              },
                                i = n.length - 1;
                              i >= 0;
                              i--
                            )
                              l();
                            o(
                              r.sort(function (e, t) {
                                return e.place > t.place ? 1 : -1;
                              })
                            );
                          }
                        case 6:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function () {
                return e.apply(this, arguments);
              };
            })()();
            var l = [],
              i = function () {
                var a = e.teams.find(function (e) {
                    return e.id === r[n];
                  }),
                  i = void 0;
                a &&
                  (i = t.teams.find(function (e) {
                    return e.id === a.id;
                  })),
                  (void 0 !== i && void 0 !== a) || (i = { id: "", peanuts: 0, place: 0 }),
                  l.push({ team: a, peanuts: i.peanuts, place: i.place });
              };
            for (n = r.length - 1; n >= 0; n--) i();
            A(
              l.sort(function (e, t) {
                return e.place > t.place ? 1 : -1;
              })
            );
          },
          [t]
        );
        var v = Object(r.useContext)(S.context);
        if (!v || !v.sim) return null;
        void 0 !== v.sim.season && v.sim.season;
        var b = <js />;
        return (
          (i.length >= 1 || void 0 !== i) && 0 === p && (b = <Sg playerInfo={i} showLine={!1} />),
          (m.length >= 1 || void 0 !== m) && 1 === p && (b = <Cg teamInfo={m} />),
          (
            <div className="HallOfFlame">
              <div className="HallOfFlame-Header">
                <div className="HallOfFlame-Header-Deceased-Icon" /> Hall of Flame{" "}
                <div className="HallOfFlame-Header-Deceased-Icon HallOfFlame-Header-Deceased-Icon-Flipped" />
              </div>
              <div className="HallOfFlame-Description">Pay tribute.</div>
              <div className="League-Nav">
                <button
                  role="link"
                  aria-selected={0 === p}
                  className={
                    0 === p
                      ? "TheBook-Navigation-Button TheBook-Navigation-Button-Current"
                      : "TheBook-Navigation-Button"
                  }
                  onClick={function () {
                    E(0);
                  }}
                >
                  Players
                </button>
                <button
                  role="link"
                  aria-selected={1 === p}
                  className={
                    1 === p
                      ? "TheBook-Navigation-Button TheBook-Navigation-Button-Current"
                      : "TheBook-Navigation-Button"
                  }
                  onClick={function () {
                    E(1);
                  }}
                >
                  Teams
                </button>
              </div>
              {b}
              <Lh />
            </div>
          )
        );
      }
      function Sg(e) {
        var t = [],
          a = [];
        if (void 0 === e.playerInfo || e.playerInfo.length < 1) return <js />;
        for (var n = 0; n < e.playerInfo.length; n++)
          e.showLine
            ? n < 14
              ? t.push(<kg playerInfo={e.playerInfo[n]} key={e.playerInfo[n].place} glow={!0} />)
              : a.push(<kg playerInfo={e.playerInfo[n]} key={e.playerInfo[n].place} />)
            : t.push(<kg playerInfo={e.playerInfo[n]} key={e.playerInfo[n].place} />);
        return e.showLine ? (
          <div className="HallOfFlame-List">
            <ul className="HallOfFlame-Player-Container">
              {t}
              <hr
                className="MysteriousBlueLine"
                style={{
                  width: "100%",
                  margin: "20px 0",
                  borderColor: "#5988ff",
                  borderTopStyle: "solid",
                  borderTopWidth: "2px",
                  boxShadow: "0px 0px 15px 3px #5988ff",
                }}
              />
              {a}
            </ul>
          </div>
        ) : (
          <div className="HallOfFlame-List">
            <ul className="HallOfFlame-Player-Container">{t}</ul>
          </div>
        );
      }
      function Cg(e) {
        var t = [];
        if (void 0 === e.teamInfo || e.teamInfo.length < 1) return <js />;
        for (var a = 0; a < e.teamInfo.length; a++) t.push(<Ng teamInfo={e.teamInfo[a]} key={e.teamInfo[a].place} />);
        return (
          <div className="HallOfFlame-List">
            <ul className="HallOfFlame-Player-Container">{t}</ul>
          </div>
        );
      }
      function kg(e) {
        var t,
          a,
          n,
          i,
          o,
          s = Object(c.g)(),
          u = Object(r.useContext)(M.context).user;
        return void 0 !== e.playerInfo ? (
          <A
            background={s}
            path={"/player/".concat(null === (t = e.playerInfo.player) || void 0 === t ? void 0 : t.id)}
            className="HallOfFlame-Player"
          >
            <div className="HallOfFlame-Player-Name-Container">
              <div className="HallOfFlame-Player-Position" aria-hidden="true">
                {e.playerInfo.place}
              </div>
              <div className="HallOfFlame-Player-Name">
                {u.idol === (null === (a = e.playerInfo.player) || void 0 === a ? void 0 : a.id) ? (
                  <qs style={{ width: "25px", height: "25px" }} />
                ) : (
                  ""
                )}{" "}
                {(null === (n = e.playerInfo.player) || void 0 === n ? void 0 : n.permAttr.includes("SCATTERED"))
                  ? go(null === (i = e.playerInfo.player) || void 0 === i ? void 0 : i.name)
                  : null === (o = e.playerInfo.player) || void 0 === o
                  ? void 0
                  : o.name}
              </div>
            </div>
            <div className="sr-only" aria-label=" with " />
            <div className="HallOfFlame-Player-Tributes">
              {e.playerInfo.peanuts} <span aria-label="Tributes." />
            </div>
          </A>
        ) : null;
      }
      function Ng(e) {
        var t,
          a,
          n = Object(c.g)();
        Object(r.useContext)(M.context).user;
        return void 0 !== e.teamInfo ? (
          <A
            background={n}
            path={"/team/".concat(null === (t = e.teamInfo.team) || void 0 === t ? void 0 : t.id)}
            className="HallOfFlame-Player"
          >
            <div className="HallOfFlame-Player-Name-Container">
              <div className="HallOfFlame-Team-Position" aria-hidden="true">
                {e.teamInfo.place}
              </div>
              <div className="HallOfFlame-Player-Name">
                <div
                  className="Leaderboard-Team-Color HallOfFlame-Team-Color"
                  aria-hidden="true"
                  style={{ background: void 0 !== e.teamInfo.team ? e.teamInfo.team.mainColor : "#999999" }}
                >
                  <div className="Leaderboard-Team-Emoji">{DA(e.teamInfo.team)}</div>
                </div>
                {null === (a = e.teamInfo.team) || void 0 === a ? void 0 : a.fullName}
              </div>
            </div>
            <div className="sr-only" aria-label=" with " />
            <div className="HallOfFlame-Player-Tributes">
              {e.teamInfo.peanuts} <span aria-label="Tributes." />
            </div>
          </A>
        ) : null;
      }
      a(197);
      function Tg() {
        return (
          <div className="About-All">
            <div className="About-Header">Welcome to Blaseball.</div>
            <div className="About-Body">
              Blaseball is baseball at your mercy. Baseball perfected. Our players are inhuman. They play day and night.
              Rain or shine. They never grow sick. They never tire.
            </div>
            <div className="About-Body">
              This is our gift to you — the Fans. We hear your prayers at trade deadlines. We suffer your DH debates. No
              more. Democracy returns to blaseball. At the end of each week, you will vote on how to change the league.
              Everything from rules to rosters is in your hands.
            </div>
            <div className="About-Body">
              Of course, votes aren’t free. Cash is king. So do what you do best.{" "}
              <a className="Stubs-Highlight" href="/upcoming">
                Gamble.
              </a>{" "}
              Betting is allowed and encouraged. But parents fear not — your currencies and credit cards have no value
              here. Blaseball deals in its own dollar.
            </div>
            <div className="About-Body">
              Seasons run Monday to Thursday. The Postseason runs on Friday. Saturday is Election Day. On Sunday, we
              rest.
            </div>
            <div className="About-Body">
              <a target="_blank" href="https://discord.gg/3uFgJhu">
                Join the official<span className="Stubs-Highlight">Discord</span>
              </a>
              to commune with the rest of your kind. And take care to{" "}
              <a target="_blank" href="https://twitter.com/blaseball">
                follow the commissioner on<span className="Stubs-Highlight">Twitter.</span>
              </a>{" "}
              We expect he’ll need your help.
            </div>
            <div className="About-Body">
              <span className="Stubs-Serif">A warning:</span> beware the forbidden book.
            </div>
            <div className="About-Body">Rejoice. Play ball.</div>
            <div className="About-Body">
              <span className="Stubs-Serif">— The Blaseball Gods</span>
            </div>
          </div>
        );
      }
      function xg() {
        var e = Object(c.g)();
        return (
          <div className="About-All">
            <div className="About-Header">Welcome to Blaseball.</div>
            <div className="About-Desc">Baseball at your mercy.</div>
            <div className="About-QuoteList">
              <div className="About-Quote">
                <a
                  href="https://www.theparisreview.org/blog/2020/10/23/staff-picks-splorts-seers-and-sentences/"
                  target="_blank"
                  className="About-QuoteLine"
                >
                  “The most entertaining and unique
                  <br />
                  event on the internet right now.”
                </a>
                <a
                  href="https://www.theparisreview.org/blog/2020/10/23/staff-picks-splorts-seers-and-sentences/"
                  target="_blank"
                  className="About-QuoteAuthor"
                >
                  The Paris Review
                </a>
              </div>
              <A background={e} path="/signup" className="About-TicketLink">
                <div className="About-Ticket" />
              </A>
              <div className="About-Quote">
                <a
                  href="https://www.polygon.com/22174009/blaseball-game-of-the-year-2020"
                  target="_blank"
                  className="About-QuoteLine"
                >
                  “A place of joy, of sustained enthusiasm, of people eager to make stuff”
                </a>
                <a
                  href="https://www.polygon.com/22174009/blaseball-game-of-the-year-2020"
                  target="_blank"
                  className="About-QuoteAuthor"
                >
                  Polygon
                </a>
              </div>
              <div className="About-Quote">
                <a
                  href="https://www.latimes.com/entertainment-arts/story/2020-08-24/blaseball-online-browser-game-dungeons-dragons"
                  target="_blank"
                  className="About-QuoteLine"
                >
                  “A game of beautiful, communal idealism”
                </a>
                <a
                  href="https://www.latimes.com/entertainment-arts/story/2020-08-24/blaseball-online-browser-game-dungeons-dragons"
                  target="_blank"
                  className="About-QuoteAuthor"
                >
                  The Los Angeles Times
                </a>
              </div>
              <div className="About-Quote">
                <a href="https://www.polygon.com/best-games-2020" target="_blank" className="About-QuoteLine">
                  Top 10 Games of 2020
                </a>
                <a href="https://www.polygon.com/best-games-2020" target="_blank" className="About-QuoteAuthor">
                  Polygon
                </a>
                <a
                  href="https://www.latimes.com/entertainment-arts/story/2020-12-10/10-best-games-of-2020-pandemic-year-play-critical-storytelling-medium#:~:text=The%20Times%20Top%20Games%20of,Horizons%E2%80%9D%20and%20%E2%80%9CSpiritfarer.%E2%80%9D"
                  target="_blank"
                  className="About-QuoteAuthor"
                >
                  The Los Angeles Times
                </a>
                <a
                  href="https://www.vulture.com/article/best-video-games-2020.html"
                  target="_blank"
                  className="About-QuoteAuthor"
                >
                  Vulture
                </a>
              </div>
            </div>
            <div className="About-Body-Container">
              <div className="About-Body">
                Blaseball is baseball at your mercy. Baseball perfected. Our players are inhuman. They play day and
                night. Rain or shine. They never grow sick. They never tire.
              </div>
              <div className="About-Body">
                This is our gift to you — the Fans. We hear your prayers at trade deadlines. We suffer your DH debates.
                No more. Democracy returns to the national pastime. Each week, you vote to remake the league in your own
                image. Everything from rules to rosters is in your hands.
              </div>
              <div className="About-Body">
                Of course, votes aren’t free. Cash is king. So do what you do best. Gamble. Betting is allowed and
                encouraged. But parents fear not — your currencies and credit cards have no value here. Blaseball deals
                in its own dollar.
              </div>
              <div className="About-Body">
                Seasons run Monday to Friday. The Postseason runs on Saturday. On Sunday, we rest.
              </div>
              <div className="About-Body">Your first vote is on us. The fate of the league is on you.</div>
              <div className="About-Body">Rejoice. Play ball.</div>
              <div className="About-Body">
                <span className="Stubs-Serif">— The Blaseball Gods</span>
              </div>
            </div>
          </div>
        );
      }
      a(40);
      var Pg = function (e) {
          return (
            <Ct.a
              key="bottom-1"
              placement="bottom-start"
              overlay={
                <St.a id="tooltip" className="ModalItem-Help-Popup">
                  <div className="ModalItem-Help-Popup-Container">{e.children}</div>
                </St.a>
              }
            >
              {e.hover}
            </Ct.a>
          );
        },
        Mg = function (e) {
          var t = (
              <span className="ModalItem-Help-Icon" style={{ margin: !0 === e.noMargin ? 0 : "0 10px" }}>
                <ce.d />
              </span>
            ),
            a = (
              <div>
                {e.header ? <div className="ModalItem-Help-Header">{e.header}</div> : null}
                {e.lines.map(function (e, t) {
                  return (
                    <div className="ModalItem-Help-Text" key={t}>
                      {"\u26be ".concat(e)}
                    </div>
                  );
                })}
              </div>
            );
          return <Pg hover={t} children={a} />;
        },
        Lg = function (e) {
          var t = 100 * e.value;
          return 50 === t ? (
            <div className="Team-Stadium-Progress-Bar progress">
              <div
                className="progress-bar"
                role="progressbar"
                aria-valuenow={t}
                aria-valuemin={1}
                aria-valuemax={100}
                style={{ backgroundColor: e.color, width: "2%", marginLeft: "49%" }}
              />
            </div>
          ) : (
            <div className="Team-Stadium-Progress-Bar progress">
              <div
                className="progress-bar"
                role="progressbar"
                aria-valuenow={t}
                aria-valuemin={1}
                aria-valuemax={100}
                style={{
                  backgroundColor: e.color,
                  width: "".concat(t < 50 ? 50 - t : t - 50, "%"),
                  marginLeft: t < 50 ? "".concat(50 - (50 - t), "%") : "50%",
                  borderRadius: t < 50 ? "50px 0 0 50px" : "0 50px 50px 0",
                }}
              />
            </div>
          );
        },
        Rg = function (e) {
          var t = "";
          return (
            (t =
              e.value >= 0.75
                ? "ABSOLUTELY FILTHY"
                : e.value >= 0.5
                ? "KIND OF FILTHY"
                : e.value >= 0.25
                ? "UNCOMFORTABLE"
                : "GETTING UNCOMFORTABLE"),
            (
              <div className="Team-Stadium-Progress-Bar progress">
                <div
                  className="progress-bar progress-bar-striped"
                  role="progressbar"
                  aria-valuenow={100 * e.value}
                  aria-valuemin={0}
                  aria-valuemax={100}
                  style={{
                    backgroundColor: e.color,
                    width: "".concat(100 * e.value, "%"),
                    opacity: 0 === e.value ? 0 : 1,
                  }}
                />
                <div className="Team-Stadium-Progress-Text" style={{ color: e.secColor }}>
                  {t}
                </div>
              </div>
            )
          );
        },
        Dg = function (e) {
          var t = "";
          return (
            (t = e.value >= 0.75 ? "VERY HIGH" : e.value >= 0.5 ? "HIGH" : e.value >= 0.25 ? "MEDIUM" : "LOW"),
            (
              <div className="Team-Stadium-Progress-Bar progress">
                <div
                  className="progress-bar progress-bar-striped"
                  role="progressbar"
                  aria-valuenow={100 * e.value}
                  aria-valuemin={0}
                  aria-valuemax={100}
                  style={{
                    backgroundColor: e.color,
                    width: "".concat(100 * e.value, "%"),
                    opacity: 0 === e.value ? 0 : 1,
                  }}
                />
                <div className="Team-Stadium-Progress-Text" style={{ color: e.secColor }}>
                  {t}
                </div>
              </div>
            )
          );
        },
        Fg = function (e) {
          var t = "";
          return (
            (t =
              e.value >= 0.99
                ? "PEAK"
                : e.value >= 0.75
                ? "MAJOR"
                : e.value >= 0.5
                ? "DOPE"
                : e.value >= 0.25
                ? "MINOR"
                : "PEDESTRIAN"),
            (
              <div className="Team-Stadium-Progress-Bar progress">
                <div
                  className="progress-bar progress-bar-striped"
                  role="progressbar"
                  aria-valuenow={100 * e.value}
                  aria-valuemin={0}
                  aria-valuemax={100}
                  style={{
                    backgroundColor: e.color,
                    width: "".concat(100 * e.value, "%"),
                    opacity: 0 === e.value ? 0 : 1,
                  }}
                />
                <div className="Team-Stadium-Progress-Text" style={{ color: e.secColor }}>
                  {t}
                </div>
              </div>
            )
          );
        },
        Qg = function (e) {
          if (void 0 === e.stadium || void 0 === e.stadium.weather) return null;
          var t = e.stadium.weather[e.index];
          return void 0 === t || 0 === t ? null : (
            <div className={"Player-Info-Line" + (e.user.lightMode ? " Player-Info-Line-LightMode" : "")} key={e.index}>
              <div className="Player-Info-Line-Header">
                <Xu type={e.index} tooltip={!0} />
                <div className="Team-Stadium-Weather-Name">{Ju(e.index)}</div>
              </div>
              <div className="Player-Info-Line-Body">
                <jg value={t} index={e.index} />
              </div>
            </div>
          );
        },
        jg = function (e) {
          var t = [],
            a = "#ffffff",
            n = "#aaaaaa";
          if (e.value < 0) {
            for (var r = Math.abs(e.value); r > 0; r--) t.push(<le.b />);
            (a = zu[e.index].background), (n = zu[e.index].color);
          } else {
            for (r = e.value; r > 0; r--) t.push(<le.c />);
            (a = zu[e.index].color), (n = zu[e.index].background);
          }
          return (
            <div className="Team-Stadium-Weather-Arrows" style={{ color: a, background: n }} key={e.index}>
              {t}
            </div>
          );
        },
        Vg = function (e) {
          var t = e.team,
            a = e.stadium,
            n = e.user,
            i = Object(r.useContext)(S.context),
            o = (Object(c.g)(), RA(i.sim));
          if (n.favoriteTeam !== t.id) return null;
          var s = null === a.model && o;
          if (void 0 === n.snacks.Stadium_Access && s)
            return (
              <div className="Team-Construction-Content">
                <div className={"Team-Stadium-Help" + (n.lightMode ? " Team-Stadium-Help-LightMode" : "")}>
                  Construction is now available for {a.nickname}. To gain access to stadium construction, you must own a
                  Pizza Snack. Head to the shop to buy access.
                </div>
                <Vs.a className="Decrees-Submit-Button">
                  <m.b to={"/shop/".concat(ne.STADIUM)}>Go To Shop</m.b>
                </Vs.a>
              </div>
            );
          if (s)
            return (
              <div className="Team-Construction-Content">
                <div className={"Team-Stadium-Help" + (n.lightMode ? " Team-Stadium-Help-LightMode" : "")}>
                  Construction is now available for {a.nickname}. Help break ground on your team's Ballpark.
                </div>
                <Vs.a variant="success" className="Offseason-Button">
                  <m.b to="/renovation">Contribute</m.b>
                </Vs.a>
              </div>
            );
          if (null === a.model && !o) return null;
          if (void 0 === n.snacks.Stadium_Access && o) {
            return (
              <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                <div className="Player-Info-Line-Header">Renovation</div>
                <div className="Player-Info-Line-Body">
                  <Vs.a className="Decrees-Submit-Button">
                    <m.b to={"/shop/".concat(ne.STADIUM)}>Go To Shop</m.b>
                  </Vs.a>
                  <Mg
                    lines={[
                      "To gain access to stadium renovations, you must own a Pizza Snack. Head to the shop to buy access.",
                    ]}
                  />
                </div>
              </div>
            );
          }
          if (o) {
            return (
              <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                <div className="Player-Info-Line-Header">Renovation</div>
                <div className="Player-Info-Line-Body">
                  <Vs.a variant="success" className="Offseason-Button">
                    <m.b to="/renovation">Contribute</m.b>
                  </Vs.a>
                  <Mg lines={["The Construction phase is active! Go help your Team build its next Renovations."]} />
                </div>
              </div>
            );
          }
          return (
            <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
              <div className="Player-Info-Line-Header">Renovation</div>
              <div className="Player-Info-Line-Body">
                <Vs.a variant="secondary" disabled={!0} className="Offseason-Button">
                  Unavailable
                </Vs.a>
                <Mg
                  lines={[
                    "Construction is unavailable. Contribute to your Ballpark's Renovation between Days 27 (Earlsiesta) & 72 (Latesiesta).",
                  ]}
                />
              </div>
            </div>
          );
        },
        Wg = function (e) {
          var t = Object(r.useContext)(S.context),
            a = Object(r.useContext)(xo.context),
            n = Object(r.useContext)(M.context).user,
            i = (Object(c.g)(), e.team);
          if (void 0 === t) return null;
          if (void 0 === a || void 0 === a.teams) return null;
          if (void 0 === i) return null;
          var o = a.stadiums.find(function (e) {
            return e.id === i.stadium;
          });
          if (void 0 === o) return null;
          var s =
              o.mods.length > 0 ? (
                <l.a.Fragment>
                  <div className={"ModalItem-Attributes" + (n.lightMode ? " ModalItem-Attributes-LightMode" : "")}>
                    <div className={"AttributeBar" + (n.lightMode ? " AttributeBar-LightMode" : "")}>
                      {o.mods.map(function (e, t) {
                        return <Tt id={e} type={Ot.Permanent} key={t} context={It.Ballpark} />;
                      })}
                    </div>
                  </div>
                </l.a.Fragment>
              ) : null,
            u =
              null !== o.model ? (
                <l.a.Fragment>
                  <div className={"ModalItem-Subheader" + (n.lightMode ? " ModalItem-Subheader-LightMode" : "")}>
                    Stats
                  </div>
                  <div className="Team-Section">
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Grandiosity</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.grandiosity} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Fortification</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.fortification} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Obtuseness</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.obtuseness} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Ominousness</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.ominousness} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Inconvenience</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.inconvenience} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Viscosity</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.viscosity} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Forwardness</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.forwardness} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Mysticism</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.mysticism} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Elongation</div>
                      <div className="Player-Info-Line-Body">
                        <Lg value={o.elongation} color={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Filthiness</div>
                      <div className="Player-Info-Line-Body">
                        <Rg value={o.filthiness} color={o.mainColor} secColor={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Luxuriousness</div>
                      <div className="Player-Info-Line-Body">
                        <Dg value={o.luxuriousness} color={o.mainColor} secColor={o.secondaryColor} />
                      </div>
                    </div>
                    <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                      <div className="Player-Info-Line-Header">Hype</div>
                      <div className="Player-Info-Line-Body">
                        <Fg value={o.hype} color={o.mainColor} secColor={o.secondaryColor} />
                      </div>
                    </div>
                  </div>
                  <div className={"ModalItem-Subheader" + (n.lightMode ? " ModalItem-Subheader-LightMode" : "")}>
                    Weather
                  </div>
                  <div className="Team-Section">
                    {zu.map(function (e, t) {
                      return <Qg stadium={o} key={t} index={t} user={n} weather={e} />;
                    })}
                  </div>
                </l.a.Fragment>
              ) : null,
            m =
              null !== o.model ? (
                <div className={"Player-Info-Line" + (n.lightMode ? " Player-Info-Line-LightMode" : "")}>
                  <div className="Player-Info-Line-Header">Nickname</div>
                  <div className="Player-Info-Line-Body" style={{ fontStyle: "italic" }}>
                    "{o.nickname}"
                  </div>
                </div>
              ) : (
                <div className="Team-Stadium-Subheader">"{o.nickname}"</div>
              ),
            A = RA(t.sim),
            d =
              null !== o.model || A || n.favoriteTeam !== i.id ? null : (
                <div className={"Team-Stadium-Help" + (n.lightMode ? " Team-Stadium-Help-LightMode" : "")}>
                  Construction of {o.nickname} will begin next Earlsiesta.
                </div>
              ),
            f = (
              <div className="BadGateway-Wrapper">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 40 500 430" className="BadGateway">
                  <g transform="translate(-8,-27)">
                    <path
                      d="M248 88v32.652c-5.287.834-10.615 2.448-16 4.63V104h-16v29.16c-1.698.96-3.402 1.953-5.115 2.98-3.598 2.16-7.23 4.48-10.885 6.905V120h-16v34.19c-5.324 3.85-10.664 7.826-16 11.822V152h-16v25.965c-5.402 4.008-10.75 7.9-16 11.592V168h-16v32.213c-1.04.647-2.09 1.312-3.115 1.928-4.448 2.67-8.766 5.003-12.885 6.962V200H88V214.973c-2.89.67-5.575 1.027-8 1.027h-8v-32H24v304h48V232h8c2.658 0 5.324-.23 8-.652V488h16V226.717c5.272-2.138 10.6-4.82 16-7.877V488h16V208.955c5.294-3.512 10.637-7.264 16-11.144V488h16V344h16v144h16V162.443c5.462-3.838 10.81-7.427 16-10.656V296h16V142.898c5.793-2.754 11.188-4.755 16-5.87V296h16V137.027c4.812 1.116 10.207 3.117 16 5.87V296h16V151.787c5.19 3.23 10.538 6.818 16 10.656V488h16V344h16v144h16V197.81c5.363 3.88 10.706 7.633 16 11.145V488h16V218.84c5.4 3.056 10.728 5.74 16 7.877V488h16V231.348c2.676.422 5.342.652 8 .652h8v256h48V184h-48v32h-8c-2.425 0-5.11-.357-8-1.027V200h-16v9.102c-4.12-1.96-8.437-4.292-12.885-6.96-1.026-.617-2.075-1.282-3.115-1.93V168h-16V189.557c-5.252-3.69-10.598-7.584-16-11.592V152h-16v14.012c-5.336-3.996-10.676-7.97-16-11.823V120h-16v23.045c-3.654-2.424-7.287-4.746-10.885-6.904-1.713-1.027-3.417-2.02-5.115-2.98V104h-16v21.283c-5.385-2.183-10.713-3.797-16-4.63V88h-16zM48 120c-13.35 0-24 10.65-24 24s10.65 24 24 24 24-10.65 24-24-10.65-24-24-24zm416 0c-13.35 0-24 10.65-24 24s10.65 24 24 24 24-10.65 24-24-10.65-24-24-24zm-280 54.035V328h-16V185.988c1.6-1.198 3.203-2.39 4.8-3.588 3.75-2.81 7.484-5.608 11.2-8.365zm144 0c3.716 2.757 7.45 5.555 11.2 8.365 1.597 1.2 3.2 2.39 4.8 3.588V328h-16V174.035zM216 312v32h80v-32h-80zm0 48v128h16V360h-16zm32 0v128h16V360h-16zm32 0v128h16V360h-16z"
                      fill="#ff0f0f"
                      fill-opacity="1"
                    />
                  </g>
                </svg>
              </div>
            ),
            h = (
              <l.a.Fragment>
                {s}
                <div className={"ModalItem-Content" + (s ? " ModalItem-Content-WithAttributes" : "")}>
                  <div
                    className={"Team-Stadium-Header-Line" + (n.lightMode ? " Team-Stadium-Header-Line-LightMode" : "")}
                  >
                    <div className="Player-Info-Line-Header">
                      <sh stadium={o} style={ah.TeamModal} />
                    </div>
                    <div className="Team-Stadium-Header">{o.name}</div>
                  </div>
                  <div className="Team-Section">
                    {m}
                    <Vg stadium={o} team={i} user={n} />
                    {LA(i.nickname, a) ? f : null}
                  </div>
                  {u}
                  {d}
                </div>
              </l.a.Fragment>
            );
          return <l.a.Fragment>{h}</l.a.Fragment>;
        };
      function Ug(e, t, a) {
        var n = (function (e, t) {
            var a = 6 + Math.round(10 * e.buoyancy),
              n = Math.PI * ((2 / a) * t + 0.5);
            return 0.5 * (e.pressurization + e.cinnamon) * Math.sin(n) - 0.5 * e.pressurization + 0.5 * e.cinnamon;
          })(e, t),
          r = a.lightMode ? "-LightMode" : "";
        return e.permAttr.includes("SCATTERED") ? (
          <span className="sr-only" aria-label="No Vibes" />
        ) : n > 0.8 ? (
          <span
            className={"Team-Player-Vibe-Line ModalItem-Vibe-MostExcellent".concat(r)}
            aria-label="Most Excellent Vibes"
          >
            <span aria-hidden="true">
              <le.c className="Team-Player-Vibe-Line-Arrow" />
              <le.c className="Team-Player-Vibe-Line-Arrow" />
              <le.c className="Team-Player-Vibe-Line-Arrow" />
            </span>
          </span>
        ) : n > 0.4 ? (
          <span className={"Team-Player-Vibe-Line ModalItem-Vibe-Excellent".concat(r)} aria-label="Excellent Vibes">
            <span aria-hidden="true">
              <le.c className="Team-Player-Vibe-Line-Arrow" />
              <le.c className="Team-Player-Vibe-Line-Arrow" />
            </span>
          </span>
        ) : n > 0.1 ? (
          <span className={"Team-Player-Vibe-Line ModalItem-Vibe-Quality".concat(r)} aria-label="Quality Vibes">
            <span aria-hidden="true">
              <le.c className="Team-Player-Vibe-Line-Arrow" />
            </span>
          </span>
        ) : n > -0.1 ? (
          <span className={"Team-Player-Vibe-Line ModalItem-Vibe-Neutral".concat(r)} aria-label="Neutral Vibes">
            <span aria-hidden="true">
              <le.a className="Team-Player-Vibe-Line-Arrow" />
            </span>
          </span>
        ) : n > -0.4 ? (
          <span
            className={"Team-Player-Vibe-Line ModalItem-Vibe-LessThanIdeal".concat(r)}
            aria-label="Less Than Ideal Vibes"
          >
            <span aria-hidden="true">
              <le.b className="Team-Player-Vibe-Line-Arrow" />
            </span>
          </span>
        ) : n > -0.8 ? (
          <span
            className={"Team-Player-Vibe-Line ModalItem-Vibe-FarLessThanIdeal".concat(r)}
            aria-label="Far Less Than Ideal Vibes"
          >
            <span aria-hidden="true">
              <le.b className="Team-Player-Vibe-Line-Arrow" />
              <le.b className="Team-Player-Vibe-Line-Arrow" />
            </span>
          </span>
        ) : (
          <span
            className={"Team-Player-Vibe-Line ModalItem-Vibe-Terrible".concat(r)}
            aria-label="Honestly Terrible Vibes"
          >
            <span aria-hidden="true">
              <le.b className="Team-Player-Vibe-Line-Arrow" />
              <le.b className="Team-Player-Vibe-Line-Arrow" />
              <le.b className="Team-Player-Vibe-Line-Arrow" />
            </span>
          </span>
        );
      }
      function Gg(e, t, a) {
        if (void 0 === t || void 0 === a || void 0 === t.sim) return "";
        var n = a.leagues.find(function (e) {
          var a;
          return e.id === (null === (a = t.sim) || void 0 === a ? void 0 : a.league);
        });
        if (void 0 === n) return "";
        var r = a.tiebreakers.find(function (e) {
          return e.id === n.tiebreakers;
        });
        if (void 0 === r) return "";
        var l = r.order.indexOf(e);
        return "Ties #".concat(l + 1);
      }
      function Hg(e, t, a, n, r, i, o) {
        return e.map(function (e) {
          var s = [];
          t.idol === e.id && s.push("Your Idol"),
            e.permAttr.includes("SHELLED") && s.push("Shelled"),
            e.permAttr.includes("ELSEWHERE") && s.push("Elsewhere"),
            e.permAttr.includes("TRIPLE_THREAT") && s.push("A Triple Threat"),
            e.gameAttr.includes("WIRED") && s.push("Wired"),
            e.gameAttr.includes("TIRED") && s.push("Tired"),
            e.gameAttr.includes("COFFEE_RALLY") && s.push("Has a Free Refill"),
            e.permAttr.includes("SCATTERED") && s.push("Scattered");
          var c = <div />;
          switch (a) {
            case 1:
              c = (
                <div className="Team-Player-Ratings" aria-hidden="true">
                  {yo(e, It.Team)}
                </div>
              );
              break;
            case 2:
              c = (
                <div className="Team-Player-Ratings" aria-hidden="true">
                  {e.items.map(function (e, t) {
                    return (
                      <Ct.a
                        key={"bottom-" + t}
                        placement="bottom-start"
                        overlay={
                          <St.a id="tooltip" className="AttributeTooltip">
                            <div className="AttributeTooltip-Container">
                              <div className="AttributeTooltip-Header">{e.name}</div>
                              <div
                                className="AttributeTooltip-Description"
                                style={{ display: "flex", justifyContent: "center" }}
                              >
                                {vo(e.health, e.durability)}
                              </div>
                            </div>
                          </St.a>
                        }
                      >
                        <div className={"Team-Items-Box" + (-1 === e.durability ? " Team-Items-Box-Legendary" : "")}>
                          {0 === e.health ? <le.d className="Team-Items-Box-Broken" /> : null}
                          {bo(e.root.name)}
                        </div>
                      </Ct.a>
                    );
                  })}
                </div>
              );
              break;
            case 3:
              var u = ho(e);
              c = (
                <div className="Team-Player-Ratings" aria-hidden="true">
                  {u}
                </div>
              );
              break;
            default:
              var m = <l.a.Fragment />;
              (m = o ? ho(e) : i ? <l.a.Fragment>{XA(e, !0)}</l.a.Fragment> : <l.a.Fragment>{JA(e, !0)}</l.a.Fragment>),
                (c = (
                  <div className="Team-Player-Ratings" aria-hidden="true">
                    {m}
                  </div>
                ));
          }
          return o ? (
            <A background={r} path={"/player/".concat(e.id)} className="Team-Player-Line Team-Player-Line-Shadows">
              {c}
              <div className={"Team-Player-Header " + (e.permAttr.includes("ELSEWHERE") ? " Team-Player-Away" : "")}>
                {e.permAttr.includes("SHELLED") ? (
                  <div className={"Team-Player-Shelled" + (Math.floor(5 * Math.random()) + 1)} aria-hidden="true">
                    SHELLED
                  </div>
                ) : null}
                {e.permAttr.includes("ELSEWHERE") ? (
                  <div className="Team-Player-Away-Status" aria-hidden="true">
                    elsewhere...
                  </div>
                ) : null}
                {t.idol === e.id ? <qs aria-hidden="true" style={{ height: "25px", width: "25px" }} /> : ""}
                {e.gameAttr.includes("WIRED") ? <_.N className="ModalItem-Icons-Wired" aria-hidden="true" /> : ""}
                {e.gameAttr.includes("TIRED") ? <_.N className="ModalItem-Icons-Tired" aria-hidden="true" /> : ""}
                {e.permAttr.includes("COFFEE_RALLY") ? (
                  <_.N className="ModalItem-Icons-Refills" aria-hidden="true" />
                ) : (
                  ""
                )}
                {e.permAttr.includes("TRIPLE_THREAT") ? (
                  <_.N className="ModalItem-Icons-Threes" aria-hidden="true" style={{ gridColumn: 2 }} />
                ) : (
                  ""
                )}{" "}
                {null === e || void 0 === e ? void 0 : e.name}
              </div>
              <div className="sr-only" aria-label={"with " + KA(qA(e)) + " Stars."} />
              <div className="sr-only" aria-label={s.length > 0 ? "Current Status: " + s.join(", ") + "." : ""} />
            </A>
          ) : (
            <A background={r} path={"/player/".concat(e.id)} className="Team-Player-Line">
              <div className={"Team-Player-Header " + (e.permAttr.includes("ELSEWHERE") ? " Team-Player-Away" : "")}>
                {e.permAttr.includes("SHELLED") ? (
                  <div className={"Team-Player-Shelled" + (Math.floor(5 * Math.random()) + 1)} aria-hidden="true">
                    SHELLED
                  </div>
                ) : null}
                {e.permAttr.includes("ELSEWHERE") ? (
                  <div className="Team-Player-Away-Status" aria-hidden="true">
                    elsewhere...
                  </div>
                ) : null}
                {t.idol === e.id ? <qs aria-hidden="true" style={{ height: "25px", width: "25px" }} /> : ""}
                {e.gameAttr.includes("WIRED") ? <_.N className="ModalItem-Icons-Wired" aria-hidden="true" /> : ""}
                {e.gameAttr.includes("TIRED") ? <_.N className="ModalItem-Icons-Tired" aria-hidden="true" /> : ""}
                {e.permAttr.includes("COFFEE_RALLY") ? (
                  <_.N className="ModalItem-Icons-Refills" aria-hidden="true" />
                ) : (
                  ""
                )}
                {e.permAttr.includes("TRIPLE_THREAT") ? (
                  <_.N className="ModalItem-Icons-Threes" aria-hidden="true" />
                ) : (
                  ""
                )}{" "}
                {null === e || void 0 === e ? void 0 : e.name}
              </div>
              <div className="sr-only" aria-label=" with " />
              <div className="Team-Player-Vibe">{Ug(e, void 0 !== n ? n : -1, t)}</div>
              <div className="sr-only" aria-label=" and " />
              {c}
              <div className="sr-only" aria-label={s.length > 0 ? "Current Status: " + s.join(", ") + "." : ""} />
            </A>
          );
        });
      }
      var Yg = function (e) {
        var t,
          a,
          n,
          i,
          o,
          u,
          m,
          d,
          g = Object(c.h)().nickname,
          p = Object(r.useContext)(S.context),
          E = Object(r.useContext)(xo.context),
          v = Object(r.useContext)(M.context),
          b = v.user,
          w = v.setUser,
          y = Object(c.g)(),
          B = Object(ks.useToasts)().addToast,
          O = Object(r.useState)({ lineup: [], rotation: [], shadows: [] }),
          I = Object(s.a)(O, 2),
          k = I[0],
          N = I[1],
          T = Object(r.useState)(!1),
          x = Object(s.a)(T, 2),
          P = (x[0], x[1], Object(r.useState)(!1)),
          L = Object(s.a)(P, 2),
          R = L[0],
          Q = L[1],
          j = Object(r.useState)(0),
          V = Object(s.a)(j, 2),
          W = V[0],
          U = V[1],
          G = Object(r.useState)(!1),
          H = Object(s.a)(G, 2),
          Y = H[0];
        H[1];
        Object(r.useEffect)(
          function () {
            J();
          },
          [E]
        );
        var z = E.teams.find(function (e) {
            return e.id === g;
          }),
          X = LA(g, E),
          J = (function () {
            var e = Object(h.a)(
              f.a.mark(function e() {
                var t, a, n, r, l, i, o, s, c, u, m, A, d, h;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        if (void 0 !== z) {
                          e.next = 2;
                          break;
                        }
                        return e.abrupt("return");
                      case 2:
                        for (t = [], a = 0; a < z.lineup.length; a++) t.push(z.lineup[a]);
                        for (n = 0; n < z.rotation.length; n++) t.push(z.rotation[n]);
                        for (r = 0; r < z.shadows.length; r++) t.push(z.shadows[r]);
                        return (e.next = 8), Ym(t);
                      case 8:
                        for (
                          l = e.sent,
                            i = [],
                            o = function (e) {
                              var t = l.find(function (t) {
                                return z.lineup[e] === t.id;
                              });
                              t && i.push(t);
                            },
                            s = 0;
                          s < z.lineup.length;
                          s++
                        )
                          o(s);
                        for (
                          c = [],
                            u = function (e) {
                              var t = l.find(function (t) {
                                return z.rotation[e] === t.id;
                              });
                              t && c.push(t);
                            },
                            m = 0;
                          m < z.rotation.length;
                          m++
                        )
                          u(m);
                        for (
                          A = [],
                            d = function (e) {
                              var t = l.find(function (t) {
                                return z.shadows[e] === t.id;
                              });
                              t && A.push(t);
                            },
                            h = 0;
                          h < z.shadows.length;
                          h++
                        )
                          d(h);
                        N({ lineup: i, rotation: c, shadows: A });
                      case 19:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            );
            return function () {
              return e.apply(this, arguments);
            };
          })(),
          Z = (function () {
            var e = Object(h.a)(
              f.a.mark(function e(t) {
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        if ((t.preventDefault(), !z || z.id === b.favoriteTeam)) {
                          e.next = 10;
                          break;
                        }
                        if (!(void 0 === b.snacks.Flutes || b.snacks.Flutes < 0) && b.snackOrder.includes("Flutes")) {
                          e.next = 6;
                          break;
                        }
                        B("No Flutes in your inventory", { appearance: "error" }), (e.next = 8);
                        break;
                      case 6:
                        return (
                          (e.next = 8),
                          km("/api/updateFavoriteTeam", JSON.stringify({ newTeamId: z.id, teamName: z.fullName })).then(
                            (function () {
                              var e = Object(h.a)(
                                f.a.mark(function e(t) {
                                  var a, n, r;
                                  return f.a.wrap(function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          t.ok && t.status && 200 === t.status
                                            ? ((a = JSON.parse(JSON.stringify(b.snacks))),
                                              (n = JSON.parse(JSON.stringify(b.snackOrder))),
                                              1 === a.Flutes
                                                ? (delete a.Flutes,
                                                  n.includes("Flutes") &&
                                                    ((r = n.findIndex(function (e) {
                                                      return "Flutes" === e;
                                                    })),
                                                    n.splice(r, 1, "E")))
                                                : (a.Flutes -= 1),
                                              (b.favoriteTeam = z.id),
                                              (b.snacks = a),
                                              (b.snackOrder = n),
                                              w(Object(C.a)({}, b)),
                                              B("You abandon your old team for the ".concat(z.fullName, "."), {
                                                appearance: "success",
                                              }))
                                            : t.json().then(function (e) {
                                                B(e.error || "Error", { appearance: "error" });
                                              });
                                        case 1:
                                        case "end":
                                          return e.stop();
                                      }
                                  }, e);
                                })
                              );
                              return function (t) {
                                return e.apply(this, arguments);
                              };
                            })()
                          )
                        );
                      case 8:
                        e.next = 11;
                        break;
                      case 10:
                        B("Invalid request!", { appearance: "error" });
                      case 11:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            );
            return function (t) {
              return e.apply(this, arguments);
            };
          })();
        if (void 0 === p) return null;
        if (void 0 === E || void 0 === E.teams) return null;
        if (void 0 === z) return null;
        var $,
          ee = E.stadiums.find(function (e) {
            return e.id === z.stadium;
          });
        if (void 0 === k) return <js />;
        var te,
          ae = Hg(k.lineup, b, W, null === (t = p.sim) || void 0 === t ? void 0 : t.day, y, !0, !1),
          ne = Hg(k.rotation, b, W, null === (a = p.sim) || void 0 === a ? void 0 : a.day, y, !1, !1),
          re = Hg(k.shadows, b, W, null === (n = p.sim) || void 0 === n ? void 0 : n.day, y, !0, !0),
          le =
            void 0 !== z && z.deceased ? (
              <div className="ModalItem-Status">
                <div className="ModalItem-Status-Line">
                  <div className={"Player-Deceased-Icon" + (b.lightMode ? " Player-Deceased-Icon-LightMode" : "")} />
                  <div className="ModalItem-Status-Name">Deceased</div>
                </div>
                {void 0 !== b.snacks.Peanuts ? (
                  Y ? (
                    <Qs />
                  ) : (
                    <A
                      className="ModalItem-Button-Tribute"
                      background={y}
                      path={b.verified ? "/tribute/".concat(z.id) : "/send-verification-email"}
                    >
                      <mn className="ModalItem-Icon" /> Pay Tribute
                    </A>
                  )
                ) : (
                  <Ct.a
                    placement="top"
                    overlay={
                      <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                        <strong>You do not have any peanuts.</strong>
                      </St.a>
                    }
                  >
                    <span className="d-inline-block">
                      <Vs.a
                        disabled={!0}
                        style={{ pointerEvents: "none" }}
                        className="ModalItem-Button-Tribute"
                        variant="dark"
                      >
                        <mn className="ModalItem-Icon" /> Pay Tribute
                      </Vs.a>
                    </span>
                  </Ct.a>
                )}
              </div>
            ) : null,
          ie =
            z.permAttr.length > 0 || z.seasAttr.length > 0 || z.weekAttr.length > 0 || z.gameAttr.length > 0 ? (
              <l.a.Fragment>
                <div className="ModalItem-Attributes">
                  <div className="AttributeBar">{yo(z, It.Team)}</div>
                </div>
              </l.a.Fragment>
            ) : null,
          oe = lo(z.id, p.standings),
          se = (X && (oo(oe), Gg(g, p, E)), X ? <div className="Team-Card"> {zA(z.card).join(" ")} </div> : null),
          ce = !1;
        ((null === (i = p.sim) || void 0 === i ? void 0 : i.phase) !== D.Earlseason &&
          (null === (o = p.sim) || void 0 === o ? void 0 : o.phase) !== D.Midseason &&
          (null === (u = p.sim) || void 0 === u ? void 0 : u.phase) !== D.Lateseason &&
          (null === (m = p.sim) || void 0 === m ? void 0 : m.phase) !== D.EarlyPostseason &&
          (null === (d = p.sim) || void 0 === d ? void 0 : d.phase) !== D.Postseason) ||
          null === p ||
          void 0 === p ||
          null === (te = p.schedule) ||
          void 0 === te ||
          te.forEach(function (e) {
            e.gameComplete || (ce = !0);
          });
        var me = (
          <q.a className="ModalItem-Button-Form ModalItem-Button-Flute-Wrapper" onSubmit={Z}>
            <Vs.a
              className="ModalItem-Button-Flute"
              type="submit"
              variant="success"
              style={{ background: z.mainColor, color: NA(z.mainColor) }}
            >
              <ka style={{ width: "20px", height: "20px" }} /> Choose Team
            </Vs.a>
          </q.a>
        );
        b.favoriteTeam === z.id
          ? (me = (
              <div
                className="ModalItem-Button-Flute-Current"
                style={{ background: z.mainColor, color: NA(z.mainColor) }}
              >
                Favorite Team
              </div>
            ))
          : void 0 !== p && void 0 !== p.sim && p.sim.phase >= 3
          ? (me = (
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                    Fluting is Restricted between Earlsiesta and the Election.
                  </St.a>
                }
              >
                <span className="ModalItem-Button-Idol-Span">
                  <Vs.a
                    disabled={!0}
                    className="ModalItem-Button-Idol"
                    variant="dark"
                    style={{ background: kA(z.mainColor, 0.8), color: NA(z.mainColor), pointerEvents: "none" }}
                  >
                    <ka style={{ width: "20px", height: "20px" }} /> Choose Team
                  </Vs.a>
                </span>
              </Ct.a>
            ))
          : void 0 === b.snacks.Flutes || b.snacks.Flutes < 0
          ? (me = (
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                    You need a Fair Weather Flute in your inventory to change your Favorite Team.
                  </St.a>
                }
              >
                <span className="ModalItem-Button-Idol-Span">
                  <Vs.a
                    disabled={!0}
                    className="ModalItem-Button-Idol"
                    variant="dark"
                    style={{ background: kA(z.mainColor, 0.8), color: NA(z.mainColor), pointerEvents: "none" }}
                  >
                    <ka style={{ width: "20px", height: "20px" }} /> Choose Team
                  </Vs.a>
                </span>
              </Ct.a>
            ))
          : ce &&
            b.favoriteTeam !== z.id &&
            (me = (
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                    You can't change favorite teams while games are active.
                  </St.a>
                }
              >
                <span className="ModalItem-Button-Idol-Span">
                  <Vs.a
                    disabled={!0}
                    className="ModalItem-Button-Idol"
                    variant="dark"
                    style={{ background: kA(z.mainColor, 0.8), color: NA(z.mainColor), pointerEvents: "none" }}
                  >
                    <ka style={{ width: "20px", height: "20px" }} /> Choose Team
                  </Vs.a>
                </span>
              </Ct.a>
            ));
        var Ae = null;
        if (null !== b.favoriteTeam && z.id === b.favoriteTeam) {
          var de = E.teams.find(function (e) {
            return e.id === b.favoriteTeam;
          });
          if (de) {
            var fe = DA(de),
              he = encodeURIComponent("".concat(de.slogan || "", " ").concat(fe, " #blaseball")),
              ge = "http://twitter.com/intent/tweet?text=".concat(he, "&url=https%3A%2F%2Fblaseball.com"),
              pe = { "--team-color": de.secondaryColor };
            Ae = (
              <a target="_blank" href={ge} className="Team-Tweet" style={pe} aria-label="Tweet your favorite team.">
                <ue.j className="Team-Tweet-Icon" />
              </a>
            );
          }
        }
        return (
          ($ = (
            <l.a.Fragment>
              <div className="ModalItem-Info">
                {X ? null : <div className="Team-Header-NotInLeague">WARNING: ACCESS RESTRICTED</div>}
                <div className="Team-Header">
                  <div className="Team-LogoLine-Wrapper">
                    <div className="Team-LogoLine">
                      <div style={{ backgroundColor: z.mainColor }} className="Team-Logo">
                        {DA(z)}
                      </div>
                    </div>
                    <div className="ModalItem-Name-Wrapper">
                      <h2 className="ModalItem-Name">
                        {z.fullName} {Ae}
                      </h2>
                      <div className="Team-Slogan">"{z.slogan}"</div>
                    </div>
                  </div>
                  <div className="ModalItem-Name-Wrapper">
                    <div className="Team-Card-Wrapper">
                      {se}
                      {me}
                    </div>
                  </div>
                </div>
              </div>
              {le}
              <Us.a.Container id="ModalTabs-Container" defaultActiveKey="Roster">
                <Gs.a variant="tabs" className="ModalTabs">
                  <Gs.a.Item>
                    <Gs.a.Link eventKey="Roster">Roster</Gs.a.Link>
                  </Gs.a.Item>
                  <Gs.a.Item>
                    <Gs.a.Link eventKey="Info">Info</Gs.a.Link>
                  </Gs.a.Item>
                  {ee ? (
                    <Gs.a.Item>
                      {X ? (
                        <Gs.a.Link eventKey="Stadium">Ballpark</Gs.a.Link>
                      ) : (
                        <Gs.a.Link className="ModalTabs-StadiumTab" eventKey="Stadium">
                          Ballpark
                        </Gs.a.Link>
                      )}
                    </Gs.a.Item>
                  ) : null}
                  <Gs.a.Item>
                    <Gs.a.Link eventKey="Events">Feed</Gs.a.Link>
                  </Gs.a.Item>
                </Gs.a>
                <Us.a.Content>
                  <Us.a.Pane eventKey="Roster">
                    {ie}
                    <div className={"ModalItem-Content" + (ie ? " ModalItem-Content-WithAttributes" : "")}>
                      <q.a className="Events-ButtonList">
                        <K.a
                          as="select"
                          value={W}
                          className="Events-Dropdown"
                          onChange={function (e) {
                            U(parseInt(e.target.value));
                          }}
                        >
                          <option value={0} key={0}>
                            Active Ratings
                          </option>
                          <option value={1} key={1}>
                            Mods
                          </option>
                          <option value={2} key={2}>
                            Items
                          </option>
                          <option value={3} key={3}>
                            Combined Ratings
                          </option>
                        </K.a>
                      </q.a>
                      <div className="Team-Section">
                        <div className="ModalItem-Subheader">Lineup</div>
                        <ul role="list">{ae}</ul>
                      </div>
                      <div className="Team-Section">
                        <div className="ModalItem-Subheader">Rotation</div>
                        <ul>{ne}</ul>
                      </div>
                      {void 0 !== b.snacks.Forbidden_Knowledge_Access && z.id === b.favoriteTeam ? (
                        <div className="Team-Section-Shadows">
                          <_.wd
                            onClick={function (e) {
                              Q(!0);
                            }}
                            className={"Team-Section-Shadows-Icon" + (R ? " is-hidden" : "")}
                          />
                          <div className={"Team-Section-Shadows-Content" + (R ? "" : " is-hidden")}>
                            <div className="Team-Section Team-Section-Shadows-Players">
                              <div className="ModalItem-Subheader">Shadows</div>
                              <ul>{re}</ul>
                            </div>
                          </div>
                        </div>
                      ) : null}
                    </div>
                  </Us.a.Pane>
                  <Us.a.Pane eventKey="Info">
                    {ie}
                    <div className={"ModalItem-Content" + (ie ? " ModalItem-Content-WithAttributes" : "")}>
                      <div className="Team-Section">
                        <ul>
                          <div className="Player-Info-Line">
                            <div className="Player-Info-Line-Header">Wins</div>
                            <div className="Player-Info-Line-Body">{io(oe)}</div>
                          </div>
                          <div className="Player-Info-Line">
                            <div className="Player-Info-Line-Header">Record</div>
                            <div className="Player-Info-Line-Body">{oo(oe)}</div>
                          </div>
                          <div className="Player-Info-Line">
                            <div className="Player-Info-Line-Header">Runs</div>
                            <div className="Player-Info-Line-Body">
                              {(function (e, t) {
                                var a = 0;
                                if (void 0 !== t)
                                  for (var n in t.runs)
                                    if (n === e) {
                                      a = t.runs[n];
                                      break;
                                    }
                                return a;
                              })(z.id, null === p || void 0 === p ? void 0 : p.standings)}
                            </div>
                          </div>
                          {PA(p.sim, "SIM_SHOW_LEVELS") ? (
                            <div className="Player-Info-Line">
                              <Ct.a
                                placement="top"
                                overlay={
                                  <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                                    Level is a measurement of this Team's Credit to the League.
                                  </St.a>
                                }
                              >
                                <div className="Player-Info-Line-Header">Level</div>
                              </Ct.a>
                              <div className="Player-Info-Line-Body">
                                {(function (e) {
                                  var t = "-";
                                  switch (e) {
                                    case 0:
                                      t = "0D";
                                      break;
                                    case 1:
                                      t = "1D";
                                      break;
                                    case 2:
                                      t = "2D";
                                      break;
                                    case 3:
                                      t = "3D";
                                      break;
                                    case 4:
                                      t = "C";
                                      break;
                                    case 5:
                                      t = "Low A";
                                      break;
                                    case 6:
                                      t = "High A";
                                      break;
                                    case 7:
                                      t = "AA";
                                      break;
                                    case 8:
                                      t = "AAA";
                                      break;
                                    case 9:
                                      t = "AAAA";
                                      break;
                                    case 10:
                                      t = "AAAAA";
                                  }
                                  var a = "Team-Info-Score";
                                  return (
                                    (a +=
                                      e < 4
                                        ? " Team-Info-Score-Low"
                                        : e > 4 && e < 11
                                        ? " Team-Info-Score-High"
                                        : 4 === e
                                        ? " Team-Info-Score-Medium"
                                        : " Team-Info-Score-Undef"),
                                    (<span className={a}>{t}</span>)
                                  );
                                })(z.level)}
                              </div>
                            </div>
                          ) : null}
                          <div className="Player-Info-Line">
                            <div className="Player-Info-Line-Header">eDensity</div>
                            <div className="Player-Info-Line-Body">{z.eDensity.toFixed(5)} bl/m³</div>
                          </div>
                          <div className="Player-Info-Line">
                            <div className="Player-Info-Line-Header">Tiebreaker Place</div>
                            <div className="Player-Info-Line-Body">{Gg(g, p, E)}</div>
                          </div>
                          {X ? (
                            <div className="Player-Info-Line">
                              <div className="Player-Info-Line-Header">Tarot Card</div>
                              <div className="Player-Info-Line-Body">{zA(z.card).join(" ")}</div>
                            </div>
                          ) : null}
                          <div className="Player-Info-Line">
                            <div className="Player-Info-Line-Header">Championships</div>
                            <div className="Player-Info-Line-Body">
                              {(function (e) {
                                for (var t = [], a = e - 1; a >= 0; a--)
                                  t.push(
                                    <div className="Team-Info-Championships" key={a}>
                                      ●
                                    </div>
                                  );
                                return t;
                              })(z.championships)}
                            </div>
                          </div>
                          {PA(p.sim, "SIM_EVOLUTION_CONCEPTUALIZED") ? (
                            <div className="Player-Info-Line">
                              <div className="Player-Info-Line-Header">Times Evolved</div>
                              <div className="Player-Info-Line-Body">{z.evolution}</div>
                            </div>
                          ) : null}
                          <div className="Player-Info-Line">
                            <div className="Player-Info-Line-Header">Net Shame</div>
                            <div className="Player-Info-Line-Body">{z.totalShamings - z.totalShames}</div>
                          </div>
                          <div className="Player-Info-Line">
                            <div className="Player-Info-Line-Header">Number of Players</div>
                            <div className="Player-Info-Line-Body">
                              {z.rotation.length + z.lineup.length + z.shadows.length}
                            </div>
                          </div>
                        </ul>
                      </div>
                    </div>
                  </Us.a.Pane>
                  {ee ? (
                    <Us.a.Pane eventKey="Stadium">
                      <Wg team={z} />
                    </Us.a.Pane>
                  ) : null}
                  <Us.a.Pane eventKey="Events">
                    <div className="ModalItem-Content">
                      <hm
                        entity={z.id}
                        source={cm.Team}
                        defaultCategory={F.Outcomes}
                        defaultSort={um.NewestFirst}
                        categoryOptions={[-1, F.Outcomes, F.Changes, F.Game, F.Abilities]}
                      />
                    </div>
                  </Us.a.Pane>
                </Us.a.Content>
              </Us.a.Container>
            </l.a.Fragment>
          )),
          (<Fs {...Object.assign({}, e, { className: "ModalItem" })}>{$}</Fs>)
        );
      };
      a(33), a(35);
      var zg = function (e) {
          var t = Object(ks.useToasts)().addToast,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(c.f)(),
            u = Object(r.useState)(!1),
            m = Object(s.a)(u, 2),
            A = m[0],
            d = m[1],
            f = Object(r.useContext)(Y.context),
            h = f.activeBets,
            g = f.setActiveBets,
            p = Object(c.h)().gameId,
            E = Object(r.useState)(0),
            v = Object(s.a)(E, 2),
            b = v[0],
            w = v[1],
            y = Object(r.useState)(""),
            B = Object(s.a)(y, 2),
            O = B[0],
            I = B[1],
            k = Object(r.useState)(void 0),
            N = Object(s.a)(k, 2),
            T = N[0],
            x = N[1],
            P = Object(r.useContext)(S.context),
            L = Object(r.useContext)(CA.context).snackData,
            R = function (e) {
              var t = e.target.value;
              w(t);
            };
          if (
            (Object(r.useEffect)(function () {
              var e,
                t,
                a =
                  null === (e = P.schedule) || void 0 === e
                    ? void 0
                    : e.find(function (e) {
                        return p === e.id;
                      });
              void 0 === a &&
                (a =
                  null === (t = P.tomorrowSchedule) || void 0 === t
                    ? void 0
                    : t.find(function (e) {
                        return p === e.id;
                      })),
                a && x(a);
            }, []),
            void 0 === T)
          )
            return <js />;
          var D = Math.round(Math.min(L.maxBetTiers[n.snacks[ne.MAX_BET]].amount * ne.GetPackMultiplier(n), n.coins)),
            F = function () {
              return T ? (O === T.homeTeam ? T.homeOdds : T.awayOdds) : 0.5;
            },
            Q = function (e) {
              I(e);
            };
          var j = function (e) {
              var t = e.id,
                a = e.modifier,
                n = e.color,
                i = e.name,
                o = e.odds,
                s = Object(r.useContext)(M.context).user,
                c = { "--text-color": s.lightMode ? NA(n) : n, "--team-color": n };
              return (
                <div
                  className={"ModalForm-Form-Team "
                    .concat(a, " ")
                    .concat(O === t ? "is-selected" : O ? "is-not-selected" : "")}
                  onClick={function (e) {
                    return Q(t);
                  }}
                  onKeyDown={function (e) {
                    return "Enter" === e.key ? Q(t) : null;
                  }}
                  style={c}
                  tabIndex={0}
                >
                  <div className="ModalForm-Form-Team-Background" />
                  <div className="ModalForm-Form-Team-Wrapper">
                    <div
                      className="ModalForm-Form-Team-Name"
                      style={{
                        background: s.lightMode ? n : "none",
                        padding: s.lightMode ? "0 10px" : "0",
                        borderRadius: s.lightMode ? "10px" : "0",
                      }}
                    >
                      {i}
                    </div>
                    <div className="ModalForm-Form-Team-Bar" style={{ width: "".concat(150 * o, "%") }} />
                    <div className="ModalForm-Form-Team-Percentage">{"".concat(Math.round(100 * o), "%")}</div>
                  </div>
                </div>
              );
            },
            V = (
              <span
                style={{
                  color: (function (e) {
                    var t = Math.round(100 * e) / 100;
                    return Math.round(t) > 0.6
                      ? n.lightMode
                        ? "#1c9600"
                        : "#59bd42"
                      : Math.round(t) > 0.5
                      ? n.lightMode
                        ? "#51a936"
                        : "#93ed77"
                      : Math.round(t) < 0.4
                      ? n.lightMode
                        ? "#b70000"
                        : "#bf3f3f"
                      : n.lightMode
                      ? "#ab4141"
                      : "#f28383";
                  })(F()),
                }}
                className="ModalForm-Outcome-Winnings"
              >
                {Math.round(100 * F())}%
              </span>
            ),
            W = (
              <span className="ModalForm-Outcome-Winnings">
                {(function (e, t) {
                  return 0.5 === e
                    ? Math.round(2 * t)
                    : e < 0.5
                    ? Math.round(t * (2 + 0.0015 * Math.pow(100 * (0.5 - e), 2.2)))
                    : Math.round(t * (3.206 / (1 + Math.pow(0.443 * (e - 0.5), 0.95)) - 1.206));
                })(F(), b)}
              </span>
            ),
            U = <div className="ModalForm-Outcome-Wrapper">Choose a team to bet on.</div>;
          return (
            O &&
              (U = (
                <div className="ModalForm-Outcome-Wrapper">
                  You'll have a {V} chance to win {W} coins.
                </div>
              )),
            (
              <Fs {...Object.assign({}, e, { className: "ModalForm Bet" })}>
                <div className="ModalForm-Header">Place a Bet</div>
                <q.a
                  className="ModalForm-Form"
                  onSubmit={function (e) {
                    var a;
                    if ((e.preventDefault(), b > D)) t("Max bet is ".concat(D, "!"), { appearance: "error" });
                    else if (b < 1) t("Invalid input", { appearance: "error" });
                    else {
                      if (
                        void 0 ===
                        (null === (a = P.tomorrowSchedule) || void 0 === a
                          ? void 0
                          : a.find(function (e) {
                              return p === e.id;
                            }))
                      )
                        return t("Game has already started.", { appearance: "error" }), void o.goBack();
                      d(!0);
                      var r = { amount: b, userId: n.id, targets: [O, p], type: 0 };
                      km("/api/bet", JSON.stringify(r)).then(function (e) {
                        d(!1),
                          e.ok && e.status && 200 === e.status
                            ? ((n.trackers.BETS += 1),
                              (n.coins -= b),
                              i(Object(C.a)({}, n)),
                              t("Bet Placed", { appearance: "success" }),
                              e.json().then(function (e) {
                                if (void 0 !== (null === e || void 0 === e ? void 0 : e.bet)) {
                                  var t = void 0 === h ? {} : h,
                                    a = e.bet.targets;
                                  a[1] && (t[a[1]] || (t[a[1]] = []), t[a[1]].push(e.bet)), g(t), o.goBack();
                                }
                              }))
                            : e.json().then(function (e) {
                                t(e.message || "Error", { appearance: "error" });
                              });
                      });
                    }
                  }}
                >
                  <q.a.Label>Pick a team:</q.a.Label>
                  <q.a.Group className="ModalForm-Form-Teams" controlId="team">
                    <j
                      id={T.homeTeam}
                      color={T.homeTeamSecondaryColor}
                      modifier="Home"
                      name={T.homeTeamNickname}
                      odds={T.homeOdds}
                    />
                    <j
                      id={T.awayTeam}
                      color={T.awayTeamSecondaryColor}
                      modifier="Away"
                      name={T.awayTeamNickname}
                      odds={T.awayOdds}
                    />
                  </q.a.Group>
                  <q.a.Group className={"ModalForm-Form-Amount ".concat(O ? "" : "is-hidden")} controlId="amount">
                    <q.a.Label>How much do you want to wager?</q.a.Label>
                    <div className="ModalForm-Form-Inputs-Amount">
                      <div className="ModalForm-Coin-Wrapper">
                        <tc className="ModalForm-Coin-Icon" />
                        {n.coins}
                      </div>
                      <q.a.Control type="number" value={b} onChange={R} />
                      <q.a.Control
                        type="range"
                        className="ModalForm-Range"
                        min={1}
                        max={Math.min(n.coins, D)}
                        value={b}
                        onChange={R}
                        step="1"
                      />
                      <a
                        className="ModalForm-Form-Inputs-Amount-Max"
                        onClick={function (e) {
                          e.preventDefault(), w(Math.min(n.coins, D));
                        }}
                      >
                        Max Bet: {D}
                      </a>
                    </div>
                  </q.a.Group>
                  {U}
                  <div className="ModalForm-Submit-Wrapper">
                    {A ? (
                      <js />
                    ) : (
                      <Vs.a className="ModalForm-Submit" type="submit" variant="success" disabled={!O}>
                        Submit
                      </Vs.a>
                    )}
                  </div>
                </q.a>
              </Fs>
            )
          );
        },
        Xg = a(53),
        Jg = function (e) {
          var t = Object(ks.useToasts)().addToast,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(r.useContext)(xo.context),
            u = (Object(c.f)(), Object(c.h)().type),
            m = Object(r.useState)(!0),
            A = Object(s.a)(m, 2),
            d = A[0],
            g = A[1],
            p = Object(r.useState)([]),
            E = Object(s.a)(p, 2),
            v = E[0],
            b = E[1],
            w = Object(r.useState)(n.snackOrder),
            y = Object(s.a)(w, 2),
            B = y[0],
            O = y[1],
            I = Object(r.useState)(!1),
            S = Object(s.a)(I, 2),
            k = S[0],
            N = S[1];
          Object(r.useEffect)(function () {
            var e = window.matchMedia("(max-width: 1080px)");
            return (
              e.addListener(T),
              T(e),
              function () {
                e.removeListener(T);
              }
            );
          }, []),
            Object(r.useEffect)(
              function () {
                var e;
                null !== n.spread &&
                  (function () {
                    var t = n.spread.map(function (e) {
                      return e.toString();
                    });
                    if (
                      (function (e) {
                        for (var t = Object.create(null), a = 0; a < e.length; ++a) {
                          var n = e[a];
                          if (n in t) return !0;
                          t[n] = !0;
                        }
                        return !1;
                      })(t)
                    )
                      for (e = t.length - 1; e >= 0; e--)
                        t.filter(function (a) {
                          return a === t[e];
                        }).length > 1
                          ? (t[e] = t[e] + "_" + e.toString())
                          : (t[e] = t[e]);
                    0 === v.length && n.spread.length > 0 && b([t[0], t[1], t[2]]);
                  })();
                g(!1);
              },
              [n.spread]
            ),
            Object(r.useEffect)(
              function () {
                if (B.includes("E")) {
                  var e = B;
                  e.forEach(function (t, a) {
                    "E" === t && (e[a] = t + a);
                  }),
                    O(e);
                }
                g(!1);
              },
              [n.snackOrder]
            );
          var T = function (e) {
              e.matches ? N(!0) : N(!1);
            },
            x = (
              <Vs.a className="ModalForm-Submit" type="submit" variant="success">
                Save Changes
              </Vs.a>
            ),
            P = function (e, t) {
              return Object(C.a)({}, t);
            },
            L = null,
            R = "",
            D = k ? "vertical" : "horizontal";
          switch (u) {
            case "snacks":
              (R = "Snacks"),
                (L = (
                  <l.a.Fragment>
                    <Xg.a
                      onDragEnd={function (e) {
                        e.source;
                        var t = e.destination;
                        if ((e.draggableId, t)) {
                          var a = Array.from(B),
                            n = a.splice(e.source.index, 1),
                            r = Object(s.a)(n, 1)[0];
                          a.splice(e.destination.index, 0, r), O(a);
                        }
                      }}
                    >
                      <Xg.c droppableId="Snacks" direction={D}>
                        {function (e) {
                          return (
                            <div {...Object.assign({ className: "Reorder-Snacks", ref: e.innerRef }, e.droppableProps)}>
                              {B.map(function (e, t) {
                                return (
                                  <Xg.b key={e} draggableId={e} index={t}>
                                    {function (t, a) {
                                      return e.length > 1 ? (
                                        e.includes("E") ? (
                                          <div
                                            {...Object.assign(
                                              {
                                                className:
                                                  "Reorder-Snacks-Item" +
                                                  (e.includes("E") ? " Reorder-Snacks-Item-Empty" : ""),
                                                ref: t.innerRef,
                                              },
                                              t.draggableProps,
                                              t.dragHandleProps,
                                              { style: P(a.isDragging, t.draggableProps.style) }
                                            )}
                                          />
                                        ) : (
                                          <div
                                            {...Object.assign(
                                              { className: "Reorder-Snacks-Item", ref: t.innerRef },
                                              t.draggableProps,
                                              t.dragHandleProps,
                                              { style: P(a.isDragging, t.draggableProps.style) }
                                            )}
                                          >
                                            {uo(e)}
                                            <div className="Reorder-Snacks-Amount">{_A(e, n.snacks[e])}</div>
                                          </div>
                                        )
                                      ) : (
                                        <l.a.Fragment />
                                      );
                                    }}
                                  </Xg.b>
                                );
                              })}
                              {e.placeholder}
                              {B.map(function (e, t) {
                                return (
                                  <div className="Reorder-Number" style={{ gridRow: k ? t + 1 : 2 }}>
                                    {t + 1}
                                  </div>
                                );
                              })}
                            </div>
                          );
                        }}
                      </Xg.c>
                    </Xg.a>
                    <q.a
                      className="ModalForm-Form ModalForm-Form-Wrapper"
                      onSubmit={function (e) {
                        e.preventDefault(), g(!0);
                        var a = B.map(function (e) {
                          return e.includes("E") ? "E" : e;
                        });
                        if (
                          a.every(function (e, t) {
                            return e === n.snackOrder[t];
                          })
                        )
                          return g(!1), void t("Original Snack Order preserved", { appearance: "error" });
                        var r = { snackOrder: a };
                        km("/api/reorderSnacks", JSON.stringify(r))
                          .then(function (e) {
                            e.status && 200 === e.status && e.ok
                              ? ((n.snackOrder = a),
                                i(Object(C.a)({}, n)),
                                t("New Order preserved", { appearance: "success" }))
                              : e.json().then(function (e) {
                                  t(e.error || "Error", { appearance: "error" });
                                });
                          })
                          .finally(
                            Object(h.a)(
                              f.a.mark(function e() {
                                return f.a.wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        g(!1);
                                      case 1:
                                      case "end":
                                        return e.stop();
                                    }
                                }, e);
                              })
                            )
                          );
                      }}
                    >
                      {d ? (
                        <js />
                      ) : (
                        <l.a.Fragment>
                          <Vs.a
                            onClick={function () {
                              return (function () {
                                g(!0);
                                var e = po(Array.from(B));
                                O(e), g(!1);
                              })();
                            }}
                            className="ModalForm-Submit"
                            variant="success"
                            style={{ marginRight: "10px" }}
                          >
                            Shuffle
                          </Vs.a>
                          {x}
                        </l.a.Fragment>
                      )}
                    </q.a>
                  </l.a.Fragment>
                ));
              break;
            case "cards":
              (R = "Cards"),
                (L = (
                  <l.a.Fragment>
                    <Xg.a
                      onDragEnd={function (e) {
                        e.source;
                        var t = e.destination;
                        if ((e.draggableId, t)) {
                          var a = Array.from(v),
                            n = a.splice(e.source.index, 1),
                            r = Object(s.a)(n, 1)[0];
                          a.splice(e.destination.index, 0, r), b(a);
                        }
                      }}
                    >
                      <Xg.c droppableId="Spread" direction={D}>
                        {function (e) {
                          return (
                            <div {...Object.assign({ className: "Reorder-Spread", ref: e.innerRef }, e.droppableProps)}>
                              {v.map(function (e, t) {
                                return (
                                  <Xg.b key={e} draggableId={e.toString()} index={t}>
                                    {function (t, a) {
                                      return (
                                        <div
                                          {...Object.assign(
                                            {
                                              className:
                                                "Reorder-Spread-Card" +
                                                (n.lightMode ? " Reorder-Spread-Card-LightMode" : ""),
                                              ref: t.innerRef,
                                            },
                                            t.draggableProps,
                                            t.dragHandleProps,
                                            { style: P(a.isDragging, t.draggableProps.style) }
                                          )}
                                        >
                                          <div className="Reorder-Spread-Card-Number">
                                            {zA(Number(e.split("_")[0]))[0]}
                                          </div>
                                          <div className="Reorder-Spread-Card-Icon">
                                            {DA(
                                              o.teams.filter(function (t) {
                                                return t.card === Number(e);
                                              })[0]
                                            )}
                                          </div>
                                          <div className="Reorder-Spread-Card-Name">
                                            {zA(Number(e.split("_")[0]))[1]}
                                          </div>
                                        </div>
                                      );
                                    }}
                                  </Xg.b>
                                );
                              })}
                              {e.placeholder}
                              {v.map(function (e, t) {
                                return (
                                  <div className="Reorder-Number" style={{ gridRow: k ? t + 1 : 2 }}>
                                    {t + 1}
                                  </div>
                                );
                              })}
                            </div>
                          );
                        }}
                      </Xg.c>
                    </Xg.a>
                    <q.a
                      className="ModalForm-Form"
                      onSubmit={function (e) {
                        e.preventDefault(), g(!0);
                        var a = v.map(function (e) {
                          return e.includes("_") ? parseInt(e.split("_")[0]) : parseInt(e);
                        });
                        if (
                          a.every(function (e, t) {
                            return e === n.spread[t];
                          })
                        )
                          return g(!1), void t("Original Spread preserved", { appearance: "error" });
                        var r = { spread: a };
                        km("/api/reorderCards", JSON.stringify(r))
                          .then(function (e) {
                            e.status && 200 === e.status && e.ok
                              ? ((n.spread = a),
                                i(Object(C.a)({}, n)),
                                t("New Spread preserved", { appearance: "success" }))
                              : e.json().then(function (e) {
                                  t(e.error || "Error", { appearance: "error" });
                                });
                          })
                          .finally(
                            Object(h.a)(
                              f.a.mark(function e() {
                                return f.a.wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        g(!1);
                                      case 1:
                                      case "end":
                                        return e.stop();
                                    }
                                }, e);
                              })
                            )
                          );
                      }}
                    >
                      {d ? <js /> : <div className="ModalForm-Submit-Wrapper">{x}</div>}
                    </q.a>
                  </l.a.Fragment>
                ));
          }
          Math.floor(n.coins / 10);
          return (
            <Fs {...Object.assign({}, e, { className: "BatchBuy" })}>
              <div className="ModalForm-Header">Reorder {R}</div>
              <div className="Account-Miniheader">
                <ce.a /> Drag to reorder <ce.c />
              </div>
              {L}
            </Fs>
          );
        };
      a(199);
      function Zg() {
        var e = Object(c.h)().id,
          t = Object(ks.useToasts)().addToast,
          a = Object(r.useState)(),
          n = Object(s.a)(a, 2),
          i = (n[0], n[1]),
          o = Object(r.useContext)(M.context),
          u = o.user,
          m = o.setUser,
          d = Object(r.useContext)(xo.context).teams,
          g = Object(r.useContext)(CA.context),
          p = g.snackData,
          E =
            (d.find(function (e) {
              return e.id === u.favoriteTeam;
            }),
            Object(r.useContext)(S.context)),
          v = E && E.sim ? E.sim.phase : 99,
          b = Object(r.useState)(!1),
          w = Object(s.a)(b, 2),
          y = w[0],
          B = w[1],
          O = Object(r.useContext)(hs.context),
          I = Object(r.useContext)(xo.context),
          k = Object(c.g)(),
          N = Object(r.useState)([]),
          T = Object(s.a)(N, 2),
          x = T[0],
          P = T[1],
          L = Object(r.useState)([]),
          R = Object(s.a)(L, 2),
          F = R[0],
          Q = R[1],
          j = Object(r.useState)(ne.AD),
          V = Object(s.a)(j, 2),
          W = V[0],
          U = V[1],
          G = Object(r.useState)({
            id: ne.AD,
            name: "TWO FREAKIN SWORDS",
            icon: <div className="Advertisement-ShopItem" />,
            isSponsor: !0,
            description: <l.a.Fragment />,
            sponsorText: (
              <div className="Shop-Item-Body-Sponsor">
                <span>A turn-based sword fighting card game.</span>
                <span>
                  Create a character, customize a deck, and outwit your opponents in a back and forth battle where every
                  move matters.
                </span>
                <span>Also, be nice to everyone you meet unless you’re in the middle of sword fighting them.</span>
                <a
                  href="https://www.TWOFREAKINSWORDS.com/"
                  onClick={function () {
                    return Uh("TWO FREAKIN SWORDS (ShopItem)");
                  }}
                  target="_blank"
                  className="Shop-Item-Link"
                >
                  <strong>Check it Out</strong>
                </a>
              </div>
            ),
            amount: 0,
            toast: "",
            available: !0,
            handleComplete: function () {},
          }),
          H = Object(s.a)(G, 2),
          Y = H[0],
          z = H[1],
          X = Object(r.useState)(u.snackOrder),
          J = Object(s.a)(X, 2),
          Z = (J[0], J[1], g.menu),
          K = function () {
            return Object.entries(p).length > 0;
          };
        if (
          (Object(r.useEffect)(
            function () {
              W === ne.AD && (U(e), $(W), Q(qg(u, x)));
            },
            [e, I]
          ),
          Object(r.useEffect)(
            function () {
              $(W);
            },
            [W, u.coins, I]
          ),
          Object(r.useEffect)(
            function () {
              $(W), Q(qg(u, x));
            },
            [x, I]
          ),
          Object(r.useEffect)(
            function () {
              K() &&
                (P(
                  (function (e, t, a, n, r, i, o, s) {
                    var c = i.doc,
                      u = [];
                    void 0 !== e.snacks[ne.VOTES]
                      ? u.push({
                          id: ne.VOTES,
                          name: "Vote",
                          description: (
                            <l.a.Fragment>
                              Divine. Each Vote can be spent in the Election to bring important Change to Blaseball.
                            </l.a.Fragment>
                          ),
                          amount: 100,
                          available: s.includes(ne.VOTES),
                          icon: <ya className="Shop-Item-Icon" />,
                          buyUrl: "/buy/vote",
                          handleComplete: function () {},
                          modal: !0,
                          sell: !0,
                          params: { snackId: ne.VOTES },
                        })
                      : u.push({
                          id: ne.VOTES,
                          name: "Vote",
                          description: (
                            <l.a.Fragment>
                              Divine. Each Vote can be spent in the Election to bring important Change to Blaseball.
                            </l.a.Fragment>
                          ),
                          amount: 100,
                          available: s.includes(ne.VOTES),
                          icon: <ya className="Shop-Item-Icon" />,
                          buyUrl: "/buy/vote",
                          handleComplete: function () {},
                          modal: !0,
                          params: { snackId: ne.VOTES },
                        });
                    void 0 !== e.snacks[ne.RED_HERRING]
                      ? u.push({
                          id: ne.RED_HERRING,
                          name: "Pickled Herring",
                          description: <l.a.Fragment>Go Fish.</l.a.Fragment>,
                          amount: 1,
                          available: s.includes(ne.RED_HERRING),
                          icon: <Wr className="Shop-Item-Icon" />,
                          buyUrl: "",
                          handleComplete: function () {},
                          modal: !0,
                          sell: !0,
                          params: { snackId: ne.RED_HERRING },
                        })
                      : u.push({
                          id: ne.RED_HERRING,
                          name: "Pickled Herring",
                          description: <l.a.Fragment>Go Fish.</l.a.Fragment>,
                          amount: 1,
                          available: s.includes(ne.RED_HERRING),
                          icon: <Wr className="Shop-Item-Icon" />,
                          buyUrl: "/buy/vote",
                          handleComplete: function () {},
                          modal: !0,
                          params: { snackId: ne.RED_HERRING },
                        });
                    if (void 0 !== e.favoriteTeam && null !== e.favoriteTeam && "" !== e.favoriteTeam) {
                      var m = LA(e.favoriteTeam, n) || void 0 !== e.snacks[ne.FLUTES] ? 2e3 : 0,
                        A = ne.FLUTES;
                      void 0 !== e.snacks[A]
                        ? u.push({
                            id: ne.FLUTES,
                            name: "Flute",
                            description: (
                              <l.a.Fragment>
                                Cheers. Change your favorite team. Your former team will be disappointed, but
                                understand. Fluting is Restricted between Earlsiesta and the Election.
                              </l.a.Fragment>
                            ),
                            amount: m,
                            toast: "You now own ".concat(e.snacks[A] + 2, " flutes."),
                            available: s.includes(A),
                            icon: <ka className="Shop-Item-Icon" />,
                            buyUrl: "/api/buySnackNoUpgrade",
                            params: { snackId: A },
                            userUpdate: function () {
                              (e.trackers.SNACKS_BOUGHT += 1),
                                (e.snacks[A] += 1),
                                (e.coins -= m),
                                t(Object(C.a)({}, e));
                            },
                            sell: !0,
                          })
                        : u.push({
                            id: ne.FLUTES,
                            name: "Flutes",
                            description: (
                              <l.a.Fragment>
                                Cheers. Change your favorite team. Your former team will be disappointed, but
                                understand. Fluting is Restricted between Earlsiesta and the Election.
                              </l.a.Fragment>
                            ),
                            amount: m,
                            toast: "You now own a flute.",
                            available: s.includes(A),
                            icon: <ka className="Shop-Item-Icon" />,
                            buyUrl: "/api/buySnackNoUpgrade",
                            params: { snackId: A },
                            userUpdate: function () {
                              (e.SNACKS_BOUGHT += 1),
                                (e.snacks[A] = 1),
                                (e.snackOrder = ne.InsertIntoSnackOrder(A, e.snackOrder)),
                                (e.coins -= m),
                                t(Object(C.a)({}, e));
                            },
                          });
                    }
                    if (void 0 !== e.snacks[ne.MAX_BET]) {
                      var d = ne.MAX_BET,
                        f = o.maxBetTiers[Math.min(e.snacks[d], o.maxBetTiers.length - 1)],
                        h = o.maxBetTiers[e.snacks[d] + 1];
                      if (void 0 !== h) {
                        var g = f.amount,
                          p = o.maxBetTiers[e.snacks[d] + 1].amount;
                        u.push({
                          id: ne.MAX_BET,
                          name: "Snake Oil",
                          description: (
                            <l.a.Fragment>
                              This invigorating oil allows you to place larger wagers on games. Your current limit is{" "}
                              {Kg(g, e)}, it would increase to {Kg(p, e)}.
                            </l.a.Fragment>
                          ),
                          amount: h.price,
                          toast: "Max Bet is now ".concat(Kg(p, e), "!"),
                          available: s.includes(d),
                          icon: <zt className="Shop-Item-Icon" />,
                          buyUrl: "/api/buySnack",
                          params: { snackId: d },
                          userUpdate: function () {
                            (e.trackers.SNACK_UPGRADES += 1),
                              (e.snacks[d] += 1),
                              (e.coins -= h.price),
                              t(Object(C.a)({}, e));
                          },
                          sell: !0,
                        });
                      } else {
                        var E = f.amount;
                        u.push({
                          id: ne.MAX_BET,
                          name: "Snake Oil",
                          description: (
                            <l.a.Fragment>
                              This invigorating oil allows you to place larger wagers on games. Your current limit is{" "}
                              {Kg(E, e)}, you are maxed out.
                            </l.a.Fragment>
                          ),
                          icon: <zt className="Shop-Item-Icon" />,
                          maxed: !0,
                          amount: 0,
                          sell: !0,
                          params: { snackId: d },
                        });
                      }
                    } else {
                      var v = ne.MAX_BET,
                        b = o.maxBetTiers[0];
                      o.maxBetTiers[1];
                      u.push({
                        id: ne.MAX_BET,
                        name: "Snake Oil",
                        description: (
                          <l.a.Fragment>This invigorating oil allows you to place wagers on games.</l.a.Fragment>
                        ),
                        amount: b.price,
                        toast: "Max Bet is now ".concat(Math.round(ne.GetPackMultiplier(e) * b.amount), "!"),
                        available: s.includes(v),
                        icon: <zt className="Shop-Item-Icon" />,
                        buyUrl: "/api/buySnack",
                        params: { snackId: v },
                        userUpdate: function () {
                          (e.trackers.SNACKS_BOUGHT += 1),
                            (e.snacks[v] = 0),
                            (e.snackOrder = ne.InsertIntoSnackOrder(v, e.snackOrder)),
                            (e.coins -= b.price),
                            t(Object(C.a)({}, e));
                        },
                      });
                    }
                    if (
                      (u.push(
                        _g(
                          ne.TEAM_WIN,
                          e,
                          t,
                          "Popcorn",
                          o.teamWinCoinTiers,
                          s,
                          <Vt className="Shop-Item-Icon" />,
                          "Mmm. Earn {FT} coins when your Team wins.",
                          "Mmm. Earn {NT} coins when your Team wins. You currently earn up to {CT} coins per win.",
                          "Mmm. Earn up to {CT} coins when your Team wins. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.TEAM_LOSS,
                          e,
                          t,
                          "Stale Popcorn",
                          o.teamLossCoinTiers,
                          s,
                          <La className="Shop-Item-Icon" />,
                          "Hmm. Earn {FT} coins when your Team loses.",
                          "Hmm. Earn {NT} coins when your Team loses. You currently earn up to {CT} coins per loss.",
                          "Hmm. Earn up to {CT} coins when your Team loses. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.BREAKFAST,
                          e,
                          t,
                          "Breakfast",
                          o.timeOffTiers,
                          s,
                          <Xn className="Shop-Item-Icon" />,
                          "Break Time. Earn up to {FT} coins for taking time off from Blaseball.",
                          "Break Time. Earn up to {NT} coins for taking time off from Blaseball. You currently earn up to {CT} coins.",
                          "Break Time. Earn up to {CT} coins for taking time off from Blaseball. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.TEAM_SHAMING,
                          e,
                          t,
                          "Taffy",
                          o.teamShamingTiers,
                          s,
                          <$n className="Shop-Item-Icon" />,
                          "Earn {FT} coins every time your Team shames another Team.",
                          "Earn {NT} coins every time your Team shames another Team. You currently earn {CT} coins per shaming.",
                          "Earn {CT} coins every time your Team shames another Team. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.TEAM_SHAMED,
                          e,
                          t,
                          "Lemonade",
                          o.teamShamedTiers,
                          s,
                          <lr className="Shop-Item-Icon" />,
                          "Earn {FT} coins every time your Team gets shamed.",
                          "Earn {NT} coins every time your Team gets shamed. You currently earn {CT} coins per shame.",
                          "Earn {CT} coins every time your Team gets shamed. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.IDOL_STRIKEOUTS,
                          e,
                          t,
                          "Chips",
                          o.idolStrikeoutsTiers,
                          s,
                          <ua className="Shop-Item-Icon" />,
                          "Crisp. Earn {FT} coins when your Idol strikes a batter out.",
                          "Crisp. Earn {NT} coins when your Idol strikes a batter out. You currently earn {CT} coins per strikeout.",
                          "Crisp. Earn {CT} coins when your Idol strikes a batter out. You are maxed out.",
                          !0
                        )
                      ),
                      u.push(
                        _g(
                          ne.IDOL_SHUTOUTS,
                          e,
                          t,
                          "Burger",
                          o.idolShutoutsTiers,
                          s,
                          <ga className="Shop-Item-Icon" />,
                          "Medium Rare. Earn {FT} coins when your Idol pitches a shutout.",
                          "Medium Rare. Earn {NT} coins when your Idol pitches a shutout. You currently earn {CT} coins per shutout.",
                          "Medium Rare. Earn {CT} coins when your Idol pitches a shutout. You are maxed out.",
                          !0
                        )
                      ),
                      u.push(
                        _g(
                          ne.IDOL_PITCHER_WIN,
                          e,
                          t,
                          "Hot Fries",
                          o.idolPitcherWinTiers,
                          s,
                          <Rr className="Shop-Item-Icon" />,
                          "Hot. Earn {FT} coins when your Idol is the non-losing pitcher.",
                          "Hot. Earn {NT} coins when your Idol is the non-losing pitcher. You currently earn {CT} coins per non-loss.",
                          "Hot. Earn {CT} coins when your Idol is the non-losing pitcher. You are maxed out.",
                          !0
                        )
                      ),
                      u.push(
                        _g(
                          ne.IDOL_PITCHER_LOSS,
                          e,
                          t,
                          "Cold Fries",
                          o.idolPitcherLoseTiers,
                          s,
                          <Nr className="Shop-Item-Icon" />,
                          "Cold. Earn {FT} coins when your Idol is the losing pitcher.",
                          "Cold. Earn {NT} coins when your Idol is the losing pitcher. You currently earn {CT} coins per loss.",
                          "Cold. Earn {CT} coins when your Idol is the losing pitcher. You are maxed out.",
                          !0
                        )
                      ),
                      u.push(
                        _g(
                          ne.IDOL_HOMER_ALLOW,
                          e,
                          t,
                          "Meatball",
                          o.idolHomerAllowedTiers,
                          s,
                          <Wn className="Shop-Item-Icon" />,
                          "Uh oh. Earn {FT} coins when a batter hits a home run off of your Idol's pitch.",
                          "Uh oh. Earn {NT} coins when a batter hits a home run off of your Idol's pitch. You currently earn {CT} coins per home run allowed.",
                          "Uh oh. Earn {CT} coins when a batter hits a home run off of your Idol's pitch. You are maxed out.",
                          !0
                        )
                      ),
                      u.push(
                        _g(
                          ne.IDOL_HOMERS,
                          e,
                          t,
                          "Hot Dog",
                          o.idolHomersTiers,
                          s,
                          <ra className="Shop-Item-Icon" />,
                          "Hot Dog! Earn {FT} coins when your Idol hits a home run.",
                          "Hot Dog! Earn {NT} coins when your Idol hits a home run. You currently earn {CT} coins per home run.",
                          "Hot Dog! Earn {CT} coins when your Idol hits a home run. You are maxed out.",
                          !0
                        )
                      ),
                      u.push(
                        _g(
                          ne.IDOL_HITS,
                          e,
                          t,
                          "Sunflower Seeds",
                          o.idolHitsTiers,
                          s,
                          <_t className="Shop-Item-Icon" />,
                          "Ptooie. Earn {FT} coins when your Idol gets a hit.",
                          "Ptooie. Earn {NT} coins when your Idol gets a hit. You currently earn {CT} coins per hit.",
                          "Ptooie. Earn {CT} coins when your Idol gets a hit. You are maxed out.",
                          !0
                        )
                      ),
                      u.push(
                        _g(
                          ne.IDOL_STEAL,
                          e,
                          t,
                          "Pickles",
                          o.idolStealTiers,
                          s,
                          <Rn className="Shop-Item-Icon" />,
                          "Earn {FT} coins every time your Idol steals a base.",
                          "Earn {NT} coins every time your Idol steals a base. You currently earn {CT} coins per stolen base.",
                          "Earn {CT} coins every time your Idol steals a base. You are maxed out.",
                          !0
                        )
                      ),
                      u.push(
                        _g(
                          ne.SLUSH_FUND,
                          e,
                          t,
                          "Slushie",
                          o.floodClearTiers,
                          s,
                          <Bn className="Shop-Item-Icon" />,
                          "Earn {FT} coins for every baserunner swept away by Flooding weather across the league.",
                          "Earn {NT} coins for every baserunner swept away by Flooding weather across the league. You currently earn {CT} coins per baserunner cleared.",
                          "Earn {CT} coins for every baserunner swept away by Flooding weather across the league. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.INCINERATION,
                          e,
                          t,
                          "Sundae",
                          o.incinerationTiers,
                          s,
                          <pr className="Shop-Item-Icon" />,
                          "Refreshing. Earn {FT} coins every time a Player is incinerated.",
                          "Refreshing. Earn {NT} coins every time a Player is incinerated. You currently earn {CT} coins per incineration.",
                          "Refreshing. Earn {CT} coins every time a Player is incinerated. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.CONSUMER,
                          e,
                          t,
                          "Chum",
                          o.consumerTiers,
                          s,
                          <Br className="Shop-Item-Icon" />,
                          "Fishy. Earn {FT} coins every time a Player is attacked by a Consumer.",
                          "Fishy. Earn {NT} coins every time a Player is attacked by a Consumer. You currently earn {CT} coins per Consumer attack.",
                          "Fishy. Earn {CT} coins  every time a Player is attacked by a Consumer. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.BLACK_HOLE,
                          e,
                          t,
                          "Wet Pretzel",
                          o.blackHoleTiers,
                          s,
                          <Nn className="Shop-Item-Icon" />,
                          "Earn {FT} coins for every time the Black Hole swallows a Win from any Team.",
                          "Earn {NT} coins for every time the Black Hole swallows a Win from any Team. You currently earn {CT} coins per Black Hole.",
                          "Earn {CT} coins for every time the Black Hole swallows a Win from any Team. You are maxed out."
                        )
                      ),
                      u.push(
                        _g(
                          ne.SUN_2,
                          e,
                          t,
                          "Doughnut",
                          o.sunTwoTiers,
                          s,
                          <mr className="Shop-Item-Icon" />,
                          "Earn {FT} coins for every time Sun 2 sets a Win on a Team.",
                          "Earn {NT} coins for every time Sun 2 sets a Win on a Team. You currently earn {CT} coins per Sun 2.",
                          "Earn {CT} coins for every time Sun 2 sets a Win on a Team. You are maxed out."
                        )
                      ),
                      void 0 !== e.snacks[ne.STADIUM])
                    )
                      u.push({
                        id: ne.STADIUM,
                        name: "Pizza",
                        description: (
                          <l.a.Fragment>
                            Hot slice. Allows participation in Ballpark Renovations and the Gift Shop. You currently
                            have access.
                          </l.a.Fragment>
                        ),
                        amount: 100,
                        icon: <Va className="Shop-Item-Icon" />,
                        params: { snackId: ne.STADIUM },
                        handleComplete: function () {},
                        sell: !0,
                      });
                    else {
                      var w = ne.STADIUM;
                      u.push({
                        id: ne.STADIUM,
                        name: "Pizza",
                        description: (
                          <l.a.Fragment>
                            Hot slice. Allows participation in Ballpark Renovations and the Gift Shop.
                          </l.a.Fragment>
                        ),
                        amount: 100,
                        toast: "You now have access to the stadium.",
                        available: s.includes(w),
                        icon: <Va className="Shop-Item-Icon" />,
                        buyUrl: "/api/buySnackNoUpgrade",
                        params: { snackId: w },
                        userUpdate: function () {
                          (e.trackers.SNACKS_BOUGHT += 1),
                            (e.snacks[w] = 0),
                            (e.snackOrder = ne.InsertIntoSnackOrder(w, e.snackOrder)),
                            (e.coins -= 100),
                            t(Object(C.a)({}, e));
                        },
                      });
                    }
                    if (void 0 !== e.snacks[ne.WILLS])
                      u.push({
                        id: ne.WILLS,
                        name: "Cheese Board",
                        description: (
                          <l.a.Fragment>Oooh, fancy. Allows access to Wills. You currently have access.</l.a.Fragment>
                        ),
                        amount: 100,
                        icon: <za className="Shop-Item-Icon" />,
                        params: { snackId: ne.WILLS },
                        handleComplete: function () {},
                        sell: !0,
                      });
                    else {
                      var y = ne.WILLS;
                      u.push({
                        id: ne.WILLS,
                        name: "Cheese Board",
                        description: <l.a.Fragment>Oooh, fancy. Allows access to Wills.</l.a.Fragment>,
                        amount: 100,
                        toast: "You now have access to Wills.",
                        available: s.includes(y),
                        icon: <za className="Shop-Item-Icon" />,
                        buyUrl: "/api/buySnackNoUpgrade",
                        params: { snackId: y },
                        userUpdate: function () {
                          (e.trackers.SNACKS_BOUGHT += 1),
                            (e.snacks[y] = 0),
                            (e.snackOrder = ne.InsertIntoSnackOrder(y, e.snackOrder)),
                            (e.coins -= 100),
                            t(Object(C.a)({}, e));
                        },
                      });
                    }
                    if (void 0 !== e.snacks[ne.FORBIDDEN_KNOWLEDGE])
                      u.push({
                        id: ne.FORBIDDEN_KNOWLEDGE,
                        name: "Apple",
                        description: (
                          <l.a.Fragment>
                            Tempting... Allows access to Advanced Stats, Shadows Rosters, and some Team Vote Analysis.
                            You currently have access.
                          </l.a.Fragment>
                        ),
                        amount: 100,
                        icon: <_a className="Shop-Item-Icon" />,
                        params: { snackId: ne.FORBIDDEN_KNOWLEDGE },
                        handleComplete: function () {},
                        sell: !0,
                      });
                    else {
                      var B = ne.FORBIDDEN_KNOWLEDGE;
                      u.push({
                        id: ne.FORBIDDEN_KNOWLEDGE,
                        name: "Apple",
                        description: (
                          <l.a.Fragment>
                            Tempting... Allows access to Advanced Stats, Shadows Rosters, and some Team Vote Analysis.
                          </l.a.Fragment>
                        ),
                        amount: 100,
                        toast: "",
                        available: s.includes(B),
                        icon: <_a className="Shop-Item-Icon" />,
                        buyUrl: "/api/buySnackNoUpgrade",
                        params: { snackId: B },
                        userUpdate: function () {
                          (e.trackers.SNACKS_BOUGHT += 1),
                            (e.snacks[B] = 0),
                            (e.snackOrder = ne.InsertIntoSnackOrder(B, e.snackOrder)),
                            (e.coins -= 100),
                            t(Object(C.a)({}, e));
                        },
                      });
                    }
                    var O = 1e3;
                    void 0 !== c && void 0 !== c.alpha && (O = c.alpha);
                    var I = function () {
                      return O < 0
                        ? "Purchase ".concat(O, " peanuts")
                        : 0 == O
                        ? "Purchase zero peanuts."
                        : 1 == O
                        ? "Purchase a peanut."
                        : O <= 10
                        ? "Purchase a pack of ".concat(O, " peanuts.")
                        : "Purchase a bucket of ".concat(O, " peanuts.");
                    };
                    if (void 0 !== e.snacks[ne.PEANUTS]) {
                      var S = ne.PEANUTS;
                      u.push({
                        id: ne.PEANUTS,
                        name: "Peanut".concat(O > 1 ? "s" : ""),
                        description: <l.a.Fragment>{I()}</l.a.Fragment>,
                        amount: O,
                        available: s.includes(S),
                        icon: <mn className="Shop-Item-Icon" />,
                        buyUrl: "/api/buySnackNoUpgrade",
                        params: { snackId: S },
                        userUpdate: function () {
                          (e.trackers.SNACKS_BOUGHT += 1), (e.snacks[S] += O), (e.coins -= O), t(Object(C.a)({}, e));
                        },
                        sell: !0,
                      });
                    } else {
                      var k = ne.PEANUTS;
                      u.push({
                        id: ne.PEANUTS,
                        name: "Peanut".concat(O > 1 ? "s" : ""),
                        description: <l.a.Fragment>{I()}</l.a.Fragment>,
                        amount: O,
                        toast: "",
                        available: s.includes(k),
                        icon: <mn className="Shop-Item-Icon" />,
                        buyUrl: "/api/buySnackNoUpgrade",
                        params: { snackId: k },
                        userUpdate: function () {
                          (e.trackers.SNACKS_BOUGHT += 1),
                            (e.snacks[k] = O),
                            (e.snackOrder = ne.InsertIntoSnackOrder(k, e.snackOrder)),
                            (e.coins -= O),
                            t(Object(C.a)({}, e));
                        },
                      });
                    }
                    if (void 0 !== e.snacks[ne.TAROT])
                      u.push({
                        id: ne.TAROT,
                        name: "Tarot Spread",
                        description: (
                          <l.a.Fragment>
                            Curious. Buy a 3-Card Tarot Spread ahead of the Earlsiesta to prepare for the Seasonal
                            Reading.
                          </l.a.Fragment>
                        ),
                        amount: 9,
                        available: s.includes(ne.TAROT),
                        icon: <pn className="Shop-Item-Icon" />,
                        buyUrl: "/api/dealCards",
                        params: { snackId: ne.TAROT },
                        userUpdate: function (a) {
                          (e.spread = a.spread),
                            (e.trackers.SNACKS_BOUGHT += 1),
                            (e.snacks[ne.TAROT] = 1),
                            (e.coins -= 9),
                            t(Object(C.a)({}, e));
                        },
                        sell: !0,
                      });
                    else {
                      var N = ne.TAROT;
                      u.push({
                        id: ne.TAROT,
                        name: "Tarot Spread",
                        description: (
                          <l.a.Fragment>
                            Curious. Buy a 3-Card Tarot Spread ahead of the Earlsiesta to prepare for the Seasonal
                            Reading.
                          </l.a.Fragment>
                        ),
                        amount: 9,
                        available: s.includes(ne.TAROT),
                        icon: <pn className="Shop-Item-Icon" />,
                        buyUrl: "/api/dealCards",
                        params: { snackId: N },
                        userUpdate: function (a) {
                          (e.spread = a.spread),
                            (e.coins -= 9),
                            (e.trackers.SNACKS_BOUGHT += 1),
                            (e.snacks[N] = 0),
                            (e.snackOrder = ne.InsertIntoSnackOrder(N, e.snackOrder)),
                            t(Object(C.a)({}, e));
                        },
                      });
                    }
                    if (void 0 !== e.snacks[ne.BEG])
                      u.push({
                        id: ne.BEG,
                        name: "Bread Crumbs",
                        description: <l.a.Fragment>Gain access to Begs in your Account.</l.a.Fragment>,
                        amount: 0,
                        icon: <rn className="Shop-Item-Icon" />,
                        params: { snackId: ne.BEG },
                        handleComplete: function () {},
                        sell: !0,
                      });
                    else {
                      var T = ne.BEG;
                      u.push({
                        id: ne.BEG,
                        name: "Bread Crumbs",
                        description: <l.a.Fragment>Please. Gain access to Begs in your Account.</l.a.Fragment>,
                        amount: 0,
                        available: s.includes(T),
                        icon: <rn className="Shop-Item-Icon" />,
                        buyUrl: "/api/buySnackNoUpgrade",
                        params: { snackId: T },
                        userUpdate: function () {
                          (e.trackers.SNACKS_BOUGHT += 1),
                            (e.snacks[T] = 0),
                            (e.snackOrder = ne.InsertIntoSnackOrder(T, e.snackOrder)),
                            t(Object(C.a)({}, e));
                        },
                      });
                    }
                    return u;
                  })(u, m, E.sim, I, 0, O, p, Z)
                ),
                Q(qg(u, x)));
            },
            [u, I, p]
          ),
          Object(r.useEffect)(function () {}, [p]),
          !K())
        )
          return <js />;
        var _ = (function () {
          var e = Object(h.a)(
            f.a.mark(function e(a) {
              return f.a.wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      if ((a.preventDefault(), u.unlockedShop)) {
                        e.next = 10;
                        break;
                      }
                      if (!(u.coins < 20)) {
                        e.next = 6;
                        break;
                      }
                      t("Not enough coins", { appearance: "error" }), (e.next = 8);
                      break;
                    case 6:
                      return (
                        (e.next = 8),
                        km("/api/buyUnlockShop")
                          .then(
                            (function () {
                              var e = Object(h.a)(
                                f.a.mark(function e(a) {
                                  return f.a.wrap(function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          a.ok && a.status && 200 === a.status
                                            ? ((u.coins = u.coins - 20), (u.unlockedShop = !0), m(Object(C.a)({}, u)))
                                            : a.json().then(function (e) {
                                                t(e.message || "Error", { appearance: "error" });
                                              });
                                        case 1:
                                        case "end":
                                          return e.stop();
                                      }
                                  }, e);
                                })
                              );
                              return function (t) {
                                return e.apply(this, arguments);
                              };
                            })()
                          )
                          .finally(function () {
                            t("Welcome, Shop Member!", { appearance: "success" });
                          })
                      );
                    case 8:
                      e.next = 11;
                      break;
                    case 10:
                      t("You already unlocked the Shop!", { appearance: "error" });
                    case 11:
                    case "end":
                      return e.stop();
                  }
              }, e);
            })
          );
          return function (t) {
            return e.apply(this, arguments);
          };
        })();
        function $(e) {
          x.map(function (t) {
            t.id !== e || z(t);
          });
        }
        function te() {
          return (te = Object(h.a)(
            f.a.mark(function e(a) {
              return f.a.wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      if (
                        (B(!0),
                        Z.includes(a.id) ||
                          void 0 !== u.snacks[a.params.snackId] ||
                          (B(!1), t("That Snack is unavailable!", { appearance: "error" })),
                        !(a.amount <= u.coins || 0 === a.amount))
                      ) {
                        e.next = 14;
                        break;
                      }
                      if ((re(a), !a.buyUrl)) {
                        e.next = 9;
                        break;
                      }
                      return (
                        (e.next = 7),
                        km(a.buyUrl, JSON.stringify(a.params))
                          .then(
                            (function () {
                              var e = Object(h.a)(
                                f.a.mark(function e(n) {
                                  return f.a.wrap(function (e) {
                                    for (;;)
                                      switch ((e.prev = e.next)) {
                                        case 0:
                                          return (
                                            (e.next = 2),
                                            n.json().then(function (e) {
                                              e.message &&
                                                (n.ok && n.status && 200 === n.status
                                                  ? (a.userUpdate && a.userUpdate(e),
                                                    t(e.message, { appearance: "success" }))
                                                  : t(e.message, { appearance: "error" }));
                                            })
                                          );
                                        case 2:
                                        case "end":
                                          return e.stop();
                                      }
                                  }, e);
                                })
                              );
                              return function (t) {
                                return e.apply(this, arguments);
                              };
                            })()
                          )
                          .then(function () {
                            a.handleComplete && a.handleComplete(), B(!1);
                          })
                          .catch(function (e) {
                            t(e, { appearance: "error" });
                          })
                          .finally(
                            Object(h.a)(
                              f.a.mark(function e() {
                                return f.a.wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        i({ purchaseItem: void 0 });
                                      case 1:
                                      case "end":
                                        return e.stop();
                                    }
                                }, e);
                              })
                            )
                          )
                      );
                    case 7:
                      e.next = 12;
                      break;
                    case 9:
                      a.handleComplete && a.handleComplete(), i({ purchaseItem: void 0 }), B(!1);
                    case 12:
                      e.next = 16;
                      break;
                    case 14:
                      B(!1), t("Insufficient coins!", { appearance: "error" });
                    case 16:
                    case "end":
                      return e.stop();
                  }
              }, e);
            })
          )).apply(this, arguments);
        }
        function ae() {
          return (ae = Object(h.a)(
            f.a.mark(function e() {
              return f.a.wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      if (!(u.coins > 0)) {
                        e.next = 3;
                        break;
                      }
                      return t("You don't have 0 coins.", { appearance: "error" }), e.abrupt("return");
                    case 3:
                      return (
                        (e.next = 5),
                        km("/api/logBeg", JSON.stringify({})).then(
                          (function () {
                            var e = Object(h.a)(
                              f.a.mark(function e(a) {
                                return f.a.wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return (
                                          (e.next = 2),
                                          a.json().then(function (e) {
                                            e.message
                                              ? a.status &&
                                                200 === a.status &&
                                                a.ok &&
                                                ((u.trackers.BEGS += 1),
                                                (u.coins = u.coins + e.amount),
                                                m(Object(C.a)({}, u)),
                                                t(e.message, { appearance: "success" }))
                                              : a.json().then(function (e) {
                                                  t(e.error || "Error", { appearance: "error" });
                                                });
                                          })
                                        );
                                      case 2:
                                      case "end":
                                        return e.stop();
                                    }
                                }, e);
                              })
                            );
                            return function (t) {
                              return e.apply(this, arguments);
                            };
                          })()
                        )
                      );
                    case 5:
                    case "end":
                      return e.stop();
                  }
              }, e);
            })
          )).apply(this, arguments);
        }
        function re(e) {
          i({ purchaseItem: e });
        }
        function le(e) {
          return e.maxed
            ? "Maxed Out"
            : e.params && void 0 === e.available && void 0 !== u.snacks[e.params.snackId]
            ? "Owned"
            : e.available
            ? 0 === e.amount
              ? "Get"
              : e.params && e.params.snackId === ne.TAROT && void 0 !== u.snacks[ne.TAROT]
              ? "Draw"
              : "Buy"
            : "Unavailable";
        }
        function ie(e) {
          return y ? (
            <Qs />
          ) : u.coins < e.amount && 0 !== e.amount ? (
            <Ct.a
              placement="top"
              overlay={
                <St.a id="tooltip-stadium">
                  <strong>
                    You don't have enough Coins to {void 0 === u.snacks[e.id] ? "buy" : "upgrade"} this Snack right now.
                  </strong>
                </St.a>
              }
            >
              <div>
                <Vs.a
                  aria-label="You can only Beg when you have 0 Coins."
                  className="Shop-Item-Button"
                  type="submit"
                  variant="secondary"
                  disabled={!0}
                >
                  Need Coins
                </Vs.a>
              </div>
            </Ct.a>
          ) : e.id === ne.TAROT && v >= D.EarlySiesta ? (
            <Ct.a
              placement="top"
              overlay={
                <St.a id="tooltip-stadium">
                  <strong>
                    Tarot Readings are available before the Seasonal Reading each Earlsiesta. Check back after the next
                    Election for a new Reading.
                  </strong>
                </St.a>
              }
            >
              <div>
                <Vs.a
                  aria-label="You can only Beg when you have 0 Coins."
                  className="Shop-Item-Button"
                  type="submit"
                  variant="secondary"
                  disabled={!0}
                >
                  Unavailable
                </Vs.a>
              </div>
            </Ct.a>
          ) : e.id === ne.BEG && void 0 !== u.snacks[ne.BEG] && u.coins > 0 ? (
            <Ct.a
              placement="top"
              overlay={
                <St.a id="tooltip-stadium">
                  <strong>You can only Beg when you have 0 Coins.</strong>
                </St.a>
              }
            >
              <div>
                <Vs.a
                  aria-label="You can only Beg when you have 0 Coins."
                  className="Shop-Item-Button"
                  type="submit"
                  variant="secondary"
                  disabled={!0}
                >
                  Beg
                </Vs.a>
              </div>
            </Ct.a>
          ) : e.id === ne.BEG && void 0 !== u.snacks[ne.BEG] ? (
            <Vs.a
              className="Shop-Item-Button"
              type="submit"
              variant="success"
              onClick={function () {
                !(function () {
                  ae.apply(this, arguments);
                })();
              }}
            >
              Beg
            </Vs.a>
          ) : !e.available ||
            e.maxed ||
            void 0 === e.available ||
            (!Z.includes(e.id) && void 0 === u.snacks[e.params.snackId]) ? (
            <Vs.a className="Shop-Item-Button" type="submit" variant="secondary" disabled={!0}>
              {le(e)}
            </Vs.a>
          ) : (function (e) {
              var t = Object.keys(u.snacks);
              return t.includes(e.params.snackId) || t.length < u.packSize;
            })(e) ? (
            e.modal && void 0 !== e.buyUrl ? (
              <A className="Shop-Item-Button Shop-Item-Modal" background={k} path={e.buyUrl}>
                {le(e)}
              </A>
            ) : (
              <Vs.a
                className="Shop-Item-Button"
                type="submit"
                variant="success"
                onClick={function () {
                  !(function (e) {
                    te.apply(this, arguments);
                  })(e);
                }}
              >
                {le(e)}
              </Vs.a>
            )
          ) : (
            <Vs.a className="Shop-Item-Button" type="submit" variant="secondary" disabled={!0}>
              Pack Full
            </Vs.a>
          );
        }
        var oe = u.favoriteTeam && !LA(u.favoriteTeam, I);
        var se,
          ce = Math.floor(100 * ne.GetPackMultiplier(u)),
          ue =
            void 0 !== (null === O || void 0 === O ? void 0 : O.doc) ? (
              <div className="Shop-Grid">
                <div className="Shop-Icons">
                  <div className="Shop-Icons-Section">
                    <div className="Shop-Icons-Section-Header">
                      <div className="Shop-Icons-Section-Title">Snacks</div>
                    </div>
                    <div role="list" className="Shop-Icons-Section">
                      {x.map(function (e, t) {
                        return void 0 === e || e.isSponsor || !Z.includes(e.id) ? null : (
                          <button
                            className={"Shop-Item" + (W === e.id ? " Shop-Item-Highlighted" : "")}
                            key={t}
                            onClick={function () {
                              return U(e.id);
                            }}
                            aria-selected={W === e.id}
                            aria-label={e.name}
                          >
                            {e.icon}
                          </button>
                        );
                      })}
                    </div>
                    <div className="Shop-Icons-Section Shop-Icons-Section-Pack">
                      <div className="Shop-Icons-Section-Header">
                        <div className="Shop-Icons-Section-Title">Your Snack Pack</div>
                      </div>
                      <div className="Shop-Icons-Inventory">
                        <div role="list" className="Shop-Icons-Inventory-Grid">
                          {F.map(function (e, t) {
                            return void 0 === e || e.isSponsor || t > u.packSize ? null : (
                              <li className="Shop-Item-WithNum">
                                {e.id ? (
                                  <button
                                    className={
                                      "Shop-Item Shop-Item-Inventory" + (W === e.id ? " Shop-Item-Highlighted" : "")
                                    }
                                    key={t}
                                    onClick={function () {
                                      return U(e.id);
                                    }}
                                    aria-selected={W === e.id}
                                    aria-label={"Slot " + (t + 1) + " " + e.name}
                                  >
                                    {e.icon}
                                  </button>
                                ) : (
                                  <div
                                    className="Shop-Item-Slot"
                                    role="text"
                                    aria-label={"Slot " + (t + 1) + " is Empty"}
                                  />
                                )}
                                <div className="Shop-Item-Inventory-Number" aria-hidden="true">
                                  {t + 1}
                                </div>
                              </li>
                            );
                          })}
                        </div>
                        <div className="Shop-Icons-Section-Scale">
                          {u.snackOrder.length} Slots ={" "}
                          <span
                            className={
                              ce > 100
                                ? " Shop-Icons-Section-Scale-Up"
                                : ce < 100
                                ? " Shop-Icons-Section-Scale-Down"
                                : ""
                            }
                          >
                            {ce}%
                          </span>{" "}
                          Payout Modifier
                        </div>
                        <div className="Shop-Icons-Section-Pack-ButtonList">
                          <A
                            className="Shop-Item-Button Shop-Icons-Section-Pack-Button"
                            background={k}
                            path="/pack/sell"
                          >
                            - Discard Slots
                          </A>
                          <A
                            className="Shop-Item-Button Shop-Icons-Section-Pack-Button"
                            background={k}
                            path="/reorder/snacks"
                          >
                            Reorder
                          </A>
                          <A
                            className="Shop-Item-Button Shop-Icons-Section-Pack-Button"
                            background={k}
                            path="/pack/buy"
                          >
                            + Buy Slots
                          </A>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className={"Shop-CloseUp" + (Y.isSponsor ? " Shop-CloseUp-Sponsor" : "")}
                  aria-label="Selected Snack"
                >
                  <div className="Shop-CloseUp-Icon">{Y.icon}</div>
                  <div>
                    <div className="Shop-CloseUp-Name">{Y.name}</div>
                    {(function (e) {
                      if (void 0 === e.params) return null;
                      var t = e.params.snackId;
                      return void 0 !== u.snacks[t] ? (
                        void 0 !== ne.GetTiers(t, g.snackData) ? (
                          <div className="Shop-CloseUp-Desc">
                            You own {u.snacks[t] + 1} {e.name}.
                          </div>
                        ) : t === ne.STADIUM ||
                          t === ne.WILLS ||
                          t === ne.BEG ||
                          t === ne.FORBIDDEN_KNOWLEDGE ||
                          t === ne.TAROT ? (
                          <div className="Shop-CloseUp-Desc">You own {e.name}.</div>
                        ) : (
                          <div className="Shop-CloseUp-Desc">
                            You own {u.snacks[t]} {e.name}.
                          </div>
                        )
                      ) : null;
                    })(Y)}
                  </div>
                  <div className="Shop-CloseUp-Body">{Y.isSponsor ? Y.sponsorText : Y.description}</div>
                  {Y.isSponsor ? null : (
                    <div className="Shop-Item-ButtonContainer">
                      {Y.sell
                        ? ((se = Y).params.snackId,
                          void 0 !== u.snacks[se.params.snackId] ? (
                            <div className="Shop-Item-Cost-Sell">
                              {(function (e) {
                                var t = e.params.snackId,
                                  a = ne.GetSellValue(
                                    t,
                                    u.snacks[t],
                                    void 0 !== ne.GetTiers(t, g.snackData) ? u.snacks[t] + 1 : u.snacks[t],
                                    g.snackData
                                  );
                                return (
                                  oe &&
                                    e.id === ne.FLUTES &&
                                    (a =
                                      u.snacks[ne.FLUTES] < 2
                                        ? 0
                                        : ne.GetSellValue(t, u.snacks[t] - 1, u.snacks[t] - 1, g.snackData)),
                                  0 === a ? null : (
                                    <div className="Shop-Item-Cost" role="text">
                                      <span className="Shop-Item-Cost-Symbol" aria-label="plus">
                                        +
                                      </span>
                                      {a.toString()} <tc aria-label="coins" className="Shop-Item-Coins" />
                                    </div>
                                  )
                                );
                              })(se)}
                              {(function (e) {
                                return y ? (
                                  <Qs />
                                ) : e.sell && void 0 !== u.snacks[e.params.snackId] ? (
                                  0 ===
                                    ne.GetSellValue(
                                      e.params.snackId,
                                      u.snacks[e.params.snackId],
                                      void 0 !== ne.GetTiers(e.params.snackId, g.snackData)
                                        ? u.snacks[e.params.snackId] + 1
                                        : u.snacks[e.params.snackId],
                                      g.snackData
                                    ) ||
                                  (oe && e.id === ne.FLUTES && u.snacks[ne.FLUTES] < 2) ? (
                                    <A
                                      className="Shop-Item-Button Shop-Item-Modal Shop-Item-Button-Sell"
                                      background={k}
                                      path={"/sell/".concat(e.params.snackId)}
                                    >
                                      Discard
                                    </A>
                                  ) : (
                                    <A
                                      className="Shop-Item-Button Shop-Item-Modal Shop-Item-Button-Sell"
                                      background={k}
                                      path={"/sell/".concat(e.params.snackId)}
                                    >
                                      Sell
                                    </A>
                                  )
                                ) : null;
                              })(se)}
                            </div>
                          ) : null)
                        : null}
                      {(function (e) {
                        return (
                          <div className="Shop-Item-Cost-Buy">
                            {(function (e) {
                              return Z.includes(e.id) || void 0 !== u.snacks[e.params.snackId] ? (
                                0 === e.amount && e.available ? (
                                  <div className="Shop-Item-Cost">Free</div>
                                ) : void 0 !== e.available && e.available ? (
                                  <div className="Shop-Item-Cost" role="text">
                                    <span className="Shop-Item-Cost-Symbol" aria-label="minus">
                                      -
                                    </span>
                                    {e.amount.toString()} <tc aria-label="coins" className="Shop-Item-Coins" />
                                  </div>
                                ) : null
                              ) : null;
                            })(e)}
                            {ie(e)}
                          </div>
                        );
                      })(Y)}
                    </div>
                  )}
                </div>
              </div>
            ) : (
              <js />
            ),
          me = (
            <q.a className="Offseason-Description" onSubmit={_} style={{ color: "white" }}>
              <div className="Shop-CloseUp-Body" style={{ fontSize: "18px", marginTop: "20px" }}>
                Purchase your Membership Card to unlock the Shop
              </div>
              <div className="Shop-Item-ButtonContainer">
                <div className="Shop-Item-Cost">
                  <tc className="Shop-Item-Coins Shop-Item-Coins-Unlock" /> 20
                </div>
                <Vs.a
                  className="Decrees-Submit-Button"
                  style={{ margin: 0, marginLeft: "10px" }}
                  type="submit"
                  variant="success"
                >
                  Buy
                </Vs.a>
              </div>
            </q.a>
          );
        return (
          <div className="Shop">
            <div className="Shop-Header">{u.unlockedShop ? null : <ee.e />} Concessions</div>
            {u.unlockedShop ? (
              <div className="Shop-Description">
                Purchase snacks to enhance your Blaseball experience. New snacks may appear each week, so keep checking
                in.
              </div>
            ) : null}
            {u.unlockedShop ? ue : me}
          </div>
        );
      }
      function qg(e, t) {
        var a = [];
        return (
          e.snackOrder.forEach(function (n) {
            var r = t.find(function (e) {
              return e.id === n;
            });
            void 0 !== r && void 0 !== e.snacks[n]
              ? a.push(r)
              : a.push({ id: "", name: "", description: <l.a.Fragment />, amount: 0 });
          }),
          a
        );
      }
      function Kg(e, t) {
        var a = "";
        a += e;
        var n = ne.GetPackMultiplier(t),
          r = Math.round(n * e),
          i = "Shop-CloseUp-Scale",
          o = <l.a.Fragment />;
        if (r > e) (i += "-Up"), (o = <ue.b />);
        else {
          if (!(r < e)) return <l.a.Fragment>{a}</l.a.Fragment>;
          (i += "-Down"), (o = <ue.a />);
        }
        return (
          <l.a.Fragment>
            {a} (
            <span className={i}>
              {o}
              {r}
            </span>
            )
          </l.a.Fragment>
        );
      }
      function _g(e, t, a, n, r, i, o, s, c, u) {
        var m = arguments.length > 10 && void 0 !== arguments[10] && arguments[10];
        if (void 0 !== t.snacks[e]) {
          var A = r[Math.min(t.snacks[e], r.length - 1)],
            d = r[t.snacks[e] + 1];
          if (void 0 !== d) {
            var f = A.amount,
              h = d.amount,
              g = c.split("{NT}"),
              p = g[1].split("{CT}");
            return {
              id: e,
              name: n,
              description: (
                <l.a.Fragment>
                  {g[0]} {Kg(h.toString(), t)} {p[0]} {Kg(f.toString(), t)} {p[1]}
                </l.a.Fragment>
              ),
              amount: d.price,
              toast: "",
              available: i.includes(e),
              buyUrl: "/api/buySnack",
              icon: o,
              params: { snackId: e },
              userUpdate: function () {
                (t.trackers.SNACK_UPGRADES += 1), (t.snacks[e] += 1), (t.coins -= d.price), a(Object(C.a)({}, t));
              },
              sell: !0,
            };
          }
          var E = A.amount,
            v = u.split("{CT}");
          return {
            id: e,
            name: n,
            description: (
              <l.a.Fragment>
                {v[0]} {Kg(E.toString(), t)} {v[1]}
              </l.a.Fragment>
            ),
            maxed: !0,
            icon: o,
            amount: 0,
            sell: !0,
            params: { snackId: e },
          };
        }
        var b = r[0],
          w = s.split("{FT}"),
          y = i.includes(e);
        return (
          !m || ("" != t.idol && null != t.idol) || (w.push(" Go to a Player page to choose an Idol."), (y = !1)),
          {
            id: e,
            name: n,
            description: (
              <l.a.Fragment>
                {w[0]} {Kg(b.amount, t)} {w[1]} {w[2] ? w[2] : ""}
              </l.a.Fragment>
            ),
            amount: b.price,
            toast: "",
            available: y,
            buyUrl: "/api/buySnack",
            icon: o,
            params: { snackId: e },
            userUpdate: function () {
              (t.trackers.SNACKS_BOUGHT += 1),
                (t.snacks[e] = 0),
                (t.snackOrder = ne.InsertIntoSnackOrder(e, t.snackOrder)),
                (t.coins -= b.price),
                a(Object(C.a)({}, t));
            },
          }
        );
      }
      var $g = function (e) {
          var t = Object(ks.useToasts)().addToast,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(c.f)(),
            u = Object(c.h)().itemName,
            m = Object(r.useState)(1),
            A = Object(s.a)(m, 2),
            d = A[0],
            g = A[1],
            p = Object(r.useState)(!1),
            E = Object(s.a)(p, 2),
            v = E[0],
            b = E[1],
            w = function (e) {
              var t = e.target.value;
              g(parseInt(t));
            },
            y = 1;
          switch (u) {
            case "vote":
              y = 100;
          }
          var B = <js />;
          v ||
            (B = (
              <Vs.a className="ModalForm-Submit" type="submit" variant="success">
                Buy
              </Vs.a>
            ));
          var O = Math.floor(n.coins / y);
          return (
            <Fs {...Object.assign({}, e, { className: "BatchBuy" })}>
              <div className="ModalForm-Header">Buy Votes</div>
              <q.a
                className="ModalForm-Form"
                onSubmit={function (e) {
                  e.preventDefault(),
                    d > n.coins
                      ? t("Insufficent coins", { appearance: "error" })
                      : d < 1
                      ? t("Invalid input", { appearance: "error" })
                      : (b(!0),
                        km("/api/buyVote", JSON.stringify({ amount: d }))
                          .then(function (e) {
                            if (e.status && 200 === e.status && e.ok) {
                              var a = Object(C.a)({}, n.snacks),
                                r = n.snackOrder;
                              void 0 === a[ne.VOTES]
                                ? ((a[ne.VOTES] = d), (r = ne.InsertIntoSnackOrder(ne.VOTES, n.snackOrder)))
                                : (a[ne.VOTES] = a[ne.VOTES] + d),
                                (n.snacks = a),
                                (n.coins -= d * y),
                                (n.snackOrder = r),
                                i(Object(C.a)({}, n)),
                                t("Vote".concat(d > 1 ? "s" : "", " Bought"), { appearance: "success" }),
                                o.goBack();
                            } else
                              e.json().then(function (e) {
                                t(e.error || "Error", { appearance: "error" });
                              });
                          })
                          .finally(
                            Object(h.a)(
                              f.a.mark(function e() {
                                return f.a.wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        b(!1);
                                      case 1:
                                      case "end":
                                        return e.stop();
                                    }
                                }, e);
                              })
                            )
                          ));
                }}
              >
                <q.a.Group className="ModalForm-Form-Amount" controlId="amount">
                  <q.a.Label>How many votes do you want to buy?</q.a.Label>
                  <div
                    className={
                      "ModalForm-Form-Inputs-Amount" + (n.lightMode ? " ModalForm-Form-Inputs-Amount-LightMode" : "")
                    }
                  >
                    <div className="ModalForm-Ticket-Wrapper">
                      <_.rd className="ModalForm-Ticket-Icon" />
                      {n.snacks[ne.VOTES]}
                    </div>
                    <q.a.Control type="number" value={d} onChange={w} />
                    <q.a.Control
                      type="range"
                      className="ModalForm-Range"
                      min={1}
                      max={O}
                      value={d}
                      onChange={w}
                      step="1"
                    />
                    <a
                      className={
                        "ModalForm-Form-Inputs-Amount-Max" +
                        (n.lightMode ? " ModalForm-Form-Inputs-Amount-Max-LightMode" : "")
                      }
                      onClick={function (e) {
                        e.preventDefault(), g(O);
                      }}
                    >
                      Max: {O}
                    </a>
                  </div>
                  <div className="ModalForm-Outcome-Wrapper">
                    Buy <span className="ModalForm-Outcome-Winnings">{d}</span> vote{d > 1 ? "s" : ""} for{" "}
                    <span className="ModalForm-Outcome-Winnings">{d * y}</span> coins.
                  </div>
                </q.a.Group>
                <div className="ModalForm-Submit-Wrapper">{B}</div>
              </q.a>
            </Fs>
          );
        },
        ep = function (e) {
          var t = Object(ks.useToasts)().addToast,
            a = Object(r.useContext)(xo.context),
            n = Object(r.useContext)(M.context),
            i = n.user,
            o = n.setUser,
            u = Object(c.f)(),
            m = Object(r.useContext)(CA.context),
            A = Object(c.h)().id,
            d = ne.GetSellValue(A, i.snacks[A], i.snacks[A], m.snackData),
            g = Object(r.useState)(0 === d ? 1 : 0),
            p = Object(s.a)(g, 2),
            E = p[0],
            v = p[1],
            b = Object(r.useState)(!1),
            w = Object(s.a)(b, 2),
            y = (w[0], w[1]),
            B = void 0 !== ne.GetTiers(A, m.snackData),
            O = function (e) {
              var t = e.target.value;
              v(parseInt(t));
            },
            I = ne.GetSellValue(A, i.snacks[A], E, m.snackData);
          i.favoriteTeam &&
            !LA(i.favoriteTeam, a) &&
            A === ne.FLUTES &&
            (I = i.snacks[ne.FLUTES] < 2 ? 0 : ne.GetSellValue(A, i.snacks[A] - 1, E, m.snackData));
          var S = B ? i.snacks[A] + 1 : i.snacks[A];
          return (
            <Fs {...Object.assign({}, e, { className: "BatchBuy" })}>
              <div className="ModalForm-Header Sell-Question">
                you wanna {0 === d ? "discard" : "sell"} your {ne.GetName(A).toLowerCase()}?
              </div>
              <q.a
                className="ModalForm-Form"
                onSubmit={function (e) {
                  e.preventDefault();
                  var a = B ? i.snacks[A] + 1 : i.snacks[A];
                  E > a
                    ? t("Insufficent snacks", { appearance: "error" })
                    : E < 1 || null === E || void 0 === E || isNaN(E)
                    ? t("Invalid input", { appearance: "error" })
                    : (y(!0),
                      km("/api/sellSnack", JSON.stringify({ snackId: A, amount: E }))
                        .then(function (e) {
                          if (e.status && 200 === e.status && e.ok && e.body) {
                            var a = Object(C.a)({}, i.snacks);
                            if ((i.snacks[A] - E === 0 && !B) || (i.snacks[A] - E === -1 && B)) {
                              delete a[A];
                              var n = ne.RemoveFromSnackOrder(A, i.snackOrder);
                              i.snackOrder = n;
                            } else a[A] = a[A] - E;
                            (i.snacks = a),
                              (i.coins += I),
                              o(Object(C.a)({}, i)),
                              t("You sold ".concat(E, " ").concat(ne.GetName(A)), { appearance: "success" }),
                              u.goBack();
                          } else
                            e.json().then(function (e) {
                              t(e.error || "Error", { appearance: "error" });
                            });
                        })
                        .finally(
                          Object(h.a)(
                            f.a.mark(function e() {
                              return f.a.wrap(function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      y(!1);
                                    case 1:
                                    case "end":
                                      return e.stop();
                                  }
                              }, e);
                            })
                          )
                        ));
                }}
              >
                {0 === d ? (
                  <div className="ModalForm-Outcome-Wrapper">
                    <div className="Sell-Earnings">
                      you'll get{" "}
                      <span>
                        <tc style={{ width: "22px", height: "22px" }} /> {I}
                      </span>{" "}
                      back
                    </div>
                  </div>
                ) : (
                  <q.a.Group controlId="amount">
                    <q.a.Label className="Sell-Earnings">
                      how many {ne.GetName(A).toLowerCase()} do you wanna sell?
                    </q.a.Label>
                    <div
                      className={
                        "ModalForm-Form-Inputs-Amount" + (i.lightMode ? " ModalForm-Form-Inputs-Amount-LightMode" : "")
                      }
                    >
                      <div className="ModalForm-Ticket-Wrapper">{S}</div>
                      <q.a.Control type="number" value={E} onChange={O} />
                      <q.a.Control
                        type="range"
                        className="ModalForm-Range"
                        min={1}
                        max={S}
                        value={E}
                        onChange={O}
                        step="1"
                      />
                      <a
                        className={
                          "ModalForm-Form-Inputs-Amount-Max" +
                          (i.lightMode ? " ModalForm-Form-Inputs-Amount-Max-LightMode" : "")
                        }
                        onClick={function (e) {
                          e.preventDefault(), v(S);
                        }}
                      >
                        Max: {S}
                      </a>
                    </div>
                    <div className="ModalForm-Outcome-Wrapper">
                      <div className="Sell-Earnings">
                        you'll get{" "}
                        <span>
                          <tc style={{ width: "22px", height: "22px" }} /> {0 === E ? 0 : I}
                        </span>{" "}
                        back for your <span>{E}</span> {ne.GetName(A).toLowerCase()}
                      </div>
                    </div>
                  </q.a.Group>
                )}
                <div className="Sell-Buttons">
                  <Vs.a
                    className="Shop-Item-Button"
                    variant="danger"
                    onClick={function () {
                      u.goBack();
                    }}
                  >
                    Cancel
                  </Vs.a>
                  <Vs.a className="Shop-Item-Button" type="submit" variant="success">
                    Confirm
                  </Vs.a>
                </div>
              </q.a>
            </Fs>
          );
        },
        tp = function (e) {
          var t = Object(ks.useToasts)().addToast,
            a = (Object(r.useContext)(xo.context), Object(r.useContext)(M.context)),
            n = a.user,
            i = a.setUser,
            o = Object(c.f)(),
            u = Object(c.h)().ver,
            m = Object(r.useState)(!1),
            A = Object(s.a)(m, 2),
            d = (A[0], A[1]),
            g = Object(r.useState)(-1),
            p = Object(s.a)(g, 2),
            E = p[0],
            v = p[1],
            b = null,
            w = Math.floor(100 * ne.GetPackMultiplier(n));
          if ("sell" === u) {
            var y = Math.floor(100 * ne.GetPrevPackMultiplier(n));
            b = (
              <l.a.Fragment>
                <div className="ModalForm-Header">Discard a Snack Slot</div>
                <q.a
                  className="ModalForm-Form"
                  onSubmit={function (e) {
                    e.preventDefault(),
                      d(!0),
                      km("/api/sellSlot", JSON.stringify({ slotIndex: E }))
                        .then(function (e) {
                          e.status && 200 === e.status && e.ok && e.body
                            ? (n.snackOrder.splice(E, 1),
                              n.packSize--,
                              (n.coins += 200),
                              i(Object(C.a)({}, n)),
                              t("You sold a snack slot.", { appearance: "success" }),
                              o.goBack())
                            : e.json().then(function (e) {
                                t(e.error || "Error", { appearance: "error" });
                              });
                        })
                        .finally(
                          Object(h.a)(
                            f.a.mark(function e() {
                              return f.a.wrap(function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      d(!1);
                                    case 1:
                                    case "end":
                                      return e.stop();
                                  }
                              }, e);
                            })
                          )
                        );
                  }}
                >
                  <div className="Pack-Snacks">
                    {n.snackOrder.map(function (e, t) {
                      return "E" === e ? (
                        <div className="Pack-Snacks-Wrapper Pack-Sell">
                          <div
                            className={"Pack-Snacks-Item Pack-Snacks-Item-Empty" + (E === t ? " Pack-Selected" : "")}
                            onClick={function () {
                              return v(t);
                            }}
                          />
                          <div className="Pack-Snacks-Number">{t + 1}</div>
                          {E === t ? (
                            <div className="Pack-Sell-Button Pack-Sell-Button-Selected">
                              <ee.l />
                            </div>
                          ) : (
                            <div
                              className="Pack-Sell-Button"
                              onClick={function () {
                                return v(t);
                              }}
                            >
                              <ue.b />
                            </div>
                          )}
                        </div>
                      ) : (
                        <div className="Pack-Snacks-Wrapper Pack-Sell">
                          <div className="Pack-Snacks-Item">{uo(e)}</div>
                          <div className="Pack-Snacks-Number">{t + 1}</div>
                        </div>
                      );
                    })}
                  </div>
                  <div className="ModalForm-Outcome-Wrapper">
                    {E >= 0 ? (
                      <l.a.Fragment>Are you sure you want to discard the Snack Slot at position {E + 1}?</l.a.Fragment>
                    ) : (
                      <l.a.Fragment>Please select an empty Snack Slot to discard.</l.a.Fragment>
                    )}
                  </div>
                  <div className="ModalForm-Outcome-Wrapper">
                    Your Payout Modifier will increase from{" "}
                    <span
                      className={
                        "Pack-Snacks-Scale" +
                        (w > 100 ? " Pack-Snacks-Scale-Up" : w < 100 ? " Pack-Snacks-Scale-Down" : "")
                      }
                    >
                      {w}%
                    </span>{" "}
                    to{" "}
                    <span
                      className={
                        "Pack-Snacks-Scale" +
                        (y > 100 ? " Pack-Snacks-Scale-Up" : y < 100 ? " Pack-Snacks-Scale-Down" : "")
                      }
                    >
                      {y}%
                    </span>
                    .
                  </div>
                  <div className="Pack-Buttons">
                    <Vs.a
                      className="Shop-Item-Button"
                      variant="danger"
                      onClick={function () {
                        o.goBack();
                      }}
                    >
                      Cancel
                    </Vs.a>
                    <Vs.a className="Shop-Item-Button" type="submit" variant="success">
                      Confirm
                    </Vs.a>
                  </div>
                </q.a>
              </l.a.Fragment>
            );
          } else if ("buy" === u) {
            var B = Math.floor(100 * ne.GetNextPackMultiplier(n));
            b = (
              <l.a.Fragment>
                <div className="ModalForm-Header">Buy a Snack Slot</div>
                <q.a
                  className="ModalForm-Form"
                  onSubmit={function (e) {
                    e.preventDefault(),
                      d(!0),
                      km("/api/buySlot")
                        .then(function (e) {
                          e.status && 200 === e.status && e.ok && e.body
                            ? (n.snackOrder.push("E"),
                              n.packSize++,
                              (n.coins -= 200),
                              i(Object(C.a)({}, n)),
                              t("You bought a snack slot.", { appearance: "success" }),
                              o.goBack())
                            : e.json().then(function (e) {
                                t(e.error || "Error", { appearance: "error" });
                              });
                        })
                        .finally(
                          Object(h.a)(
                            f.a.mark(function e() {
                              return f.a.wrap(function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      d(!1);
                                    case 1:
                                    case "end":
                                      return e.stop();
                                  }
                              }, e);
                            })
                          )
                        );
                  }}
                >
                  <div className="Pack-Snacks">
                    {n.snackOrder.map(function (e, t) {
                      return "E" === e ? (
                        <div className="Pack-Snacks-Wrapper">
                          <div className="Pack-Snacks-Item Pack-Snacks-Item-Empty" />
                          <div className="Pack-Snacks-Number">{t + 1}</div>
                        </div>
                      ) : (
                        <div className="Pack-Snacks-Wrapper">
                          <div className="Pack-Snacks-Item">{uo(e)}</div>
                          <div className="Pack-Snacks-Number">{t + 1}</div>
                        </div>
                      );
                    })}
                    <div className="Pack-Snacks-Wrapper">
                      <div className="Pack-Snacks-Item Pack-Snacks-Item-Empty Pack-Selected" />
                      <div className="Pack-Snacks-Number">{n.snackOrder.length + 1}</div>
                    </div>
                  </div>
                  <div className="ModalForm-Outcome-Wrapper">
                    Are you sure you want to buy a Snack Slot for <tc style={{ width: "22px", height: "22px" }} />
                    {200}?
                  </div>
                  <div className="ModalForm-Outcome-Wrapper">
                    Your Payout Modifier will decrease from{" "}
                    <span
                      className={
                        "Pack-Snacks-Scale" +
                        (w > 100 ? " Pack-Snacks-Scale-Up" : w < 100 ? " Pack-Snacks-Scale-Down" : "")
                      }
                    >
                      {w}%
                    </span>{" "}
                    to{" "}
                    <span
                      className={
                        "Pack-Snacks-Scale" +
                        (B > 100 ? " Pack-Snacks-Scale-Up" : B < 100 ? " Pack-Snacks-Scale-Down" : "")
                      }
                    >
                      {B}%
                    </span>
                    .
                  </div>
                  <div className="Pack-Buttons">
                    <Vs.a
                      className="Shop-Item-Button"
                      variant="danger"
                      onClick={function () {
                        o.goBack();
                      }}
                    >
                      Cancel
                    </Vs.a>
                    <Vs.a className="Shop-Item-Button" type="submit" variant="success">
                      Confirm
                    </Vs.a>
                  </div>
                </q.a>
              </l.a.Fragment>
            );
          }
          return <Fs {...Object.assign({}, e, { className: "BatchBuy" })}>{b}</Fs>;
        };
      var ap = function (e) {
          var t,
            a = e.event,
            n =
              (Object(r.useContext)(M.context).user,
              So.teams.find(function (e) {
                return e.id === a.metadata.targets[0];
              })),
            i = a.metadata.coinsBefore - a.metadata.coinsAfter,
            o = "You bet ".concat(i, " on the ").concat(null === n || void 0 === n ? void 0 : n.nickname);
          return (
            <l.a.Fragment>
              <div className="Events-List-Desc Events-List-Background-Standard">
                <div className="Events-List-Row">{o}</div>
                {
                  ((t = a.metadata),
                  (
                    <div className="Events-List-Row Events-List-Minor-SpaceBetween ">
                      <span className="Events-List-Row Events-List-Minor-SpaceBetween">
                        <span className="Events-List-Row Events-List-Row-Group">
                          {t.coinsBefore}
                          <span className="Events-List-Image">
                            <tc aria-label="coins" />
                          </span>
                        </span>
                        <ce.b className="Events-List-Row-Group" />
                        <span className="Events-List-Row Events-List-Row-Group Events-List-NegativeText">
                          {t.coinsAfter}
                          <span className="Events-List-Image">
                            <tc aria-label="coins" />
                          </span>
                        </span>
                      </span>
                    </div>
                  ))
                }
              </div>
            </l.a.Fragment>
          );
        },
        np = (function () {
          function e() {
            Object(X.a)(this, e);
          }
          return (
            Object(Z.a)(e, null, [
              {
                key: "DoParse",
                value: function (e) {
                  return this.ParseAndReplaceTeamNicknames(e);
                },
              },
              {
                key: "ParseAndReplaceTeamNicknames",
                value: function (e) {
                  if (void 0 === e) return "";
                  for (var t = e.indexOf("{tnn}"); t >= 0; )
                    for (var a = "", n = t; n < e.length; n++) {
                      if (" " == e[n])
                        if (
                          "break" ===
                          (function () {
                            var n,
                              r = a.replace("{tnn}", ""),
                              l =
                                null ===
                                  (n = So.teams.find(function (e) {
                                    return e.id === r;
                                  })) || void 0 === n
                                  ? void 0
                                  : n.nickname;
                            return l || (l = "a team"), (e = e.replace(a, l)), (t = e.indexOf("{tnn}")), "break";
                          })()
                        )
                          break;
                      a += e[n];
                    }
                  return e;
                },
              },
            ]),
            e
          );
        })();
      var rp = function (e) {
        var t = e.event,
          a = np.DoParse(t.metadata.toast);
        return (
          <l.a.Fragment>
            <div className="Events-List-Desc Events-List-Background-Standard">
              <div className="Events-List-Row">{a}</div>
              {(function (e) {
                var t = e.metadata,
                  a = 4 === e.type || t.coinsAfter > t.coinsBefore;
                if (4 !== e.type && t.coinsAfter === t.coinsBefore) return;
                var n = void 0 === t.snackId ? <tc aria-label="coins" /> : uo(t.snackId);
                return (
                  <div className="Events-List-Row Events-List-Minor-SpaceBetween ">
                    <span className="Events-List-Row Events-List-Minor-SpaceBetween">
                      <span className="Events-List-Row Events-List-Row-Group">
                        {4 === e.type ? t.valueBefore : t.coinsBefore}
                        <span className="Events-List-Image"> {n}</span>
                      </span>
                      <ce.b className="Events-List-Row-Group" />
                      <span
                        className={
                          "Events-List-Row Events-List-Row-Group " +
                          (a ? "Events-List-PositiveText" : "Events-List-NegativeText")
                        }
                      >
                        {4 === e.type ? t.valueAfter : t.coinsAfter}
                        <span className="Events-List-Image">{n}</span>
                      </span>
                    </span>
                  </div>
                );
              })(t)}
            </div>
          </l.a.Fragment>
        );
      };
      function lp(e) {
        if (void 0 !== uo(e)) return <span className="Events-List-Image">{uo(e)}</span>;
      }
      var ip,
        op = function (e) {
          var t = e.event,
            a = void 0 !== t.metadata.coinsBefore ? t.metadata.coinsAfter - t.metadata.coinsBefore : 0,
            n = void 0 !== t.metadata.snackBefore ? t.metadata.snackAfter - t.metadata.snackBefore : 0,
            i = a <= 0 && n >= 0,
            o = Math.abs(a),
            s = Math.abs(n),
            c = (function (e, t, a, n) {
              var r,
                l,
                i = "";
              [0, 1].includes(e.type) &&
                (i = "You "
                  .concat(t ? "bought" : 0 === a ? "discarded" : "sold", " ")
                  .concat(n, " ")
                  .concat(ne.GetName(e.metadata.snackId), "."));
              8 === e.type && (i = "You ate ".concat(n, " Peanut").concat(n > 1 ? "s" : "", "."));
              9 === e.type &&
                (i = "You offered "
                  .concat(n, " Peanut")
                  .concat(n > 1 ? "s" : "", " as tribute to ")
                  .concat(e.metadata.tributeName, "."));
              5 === e.type && (i = "You chose a new favorite team.");
              6 === e.type && (i = "You chose a new Idol.");
              10 === e.type && (i = "You cast ".concat(n, " Votes on ").concat(e.metadata.entity, "."));
              11 === e.type && (i = e.metadata.reading);
              if (7 === e.type) {
                var o = So.teams.find(function (t) {
                  return t.stadium === e.metadata.stadiumId;
                });
                (i = "You contributed to the ".concat(null === o || void 0 === o ? void 0 : o.nickname, " Ballpark")),
                  void 0 !== e.metadata.entity
                    ? (i += " for the ".concat(e.metadata.entity, " renovation."))
                    : (i += ".");
              }
              12 === e.type &&
                ((i = "You Upshelled an event."), e.metadata.snackId2 === ne.RED_HERRING && (i += " Go Fish."));
              13 === e.type && e.metadata.snackId && (i = "You Upscaled an event.");
              ((14 === e.type && !e.metadata.data) || (13 === e.type && e.metadata.entity)) &&
                (i = "You gifted ".concat(a, " coins to the ").concat(
                  null !==
                    (r =
                      null ===
                        (l = So.teams.find(function (t) {
                          return t.id === e.metadata.entity;
                        })) || void 0 === l
                        ? void 0
                        : l.nickname) && void 0 !== r
                    ? r
                    : "??",
                  "."
                ));
              if (15 === e.type || (14 === e.type && e.metadata.data)) {
                var s;
                i = "You spent "
                  .concat(a, " coins to wishlist ")
                  .concat(null !== (s = e.metadata.entity) && void 0 !== s ? s : "??");
                var c = "??";
                if (e.metadata.data.team1) {
                  var u = So.teams.find(function (t) {
                    return t.id === e.metadata.data.team1;
                  });
                  c = u ? u.nickname : "??";
                }
                i += " for the ".concat(c, ".");
              }
              return i;
            })(t, i, o, s);
          return (
            <l.a.Fragment>
              <div className="Events-List-Desc Events-List-Background-Standard">
                <div className="Events-List-Row">{c}</div>
                {(function (e, t, a, n) {
                  var i,
                    o,
                    s = Object(r.useContext)(M.context).user,
                    c = e.metadata;
                  5 === e.type &&
                    ((i = So.teams.find(function (t) {
                      return t.id === e.metadata.teamBefore;
                    })),
                    (o = So.teams.find(function (t) {
                      return t.id === e.metadata.teamAfter;
                    })));
                  return (
                    <l.a.Fragment>
                      <div className="Events-List-Row Events-List-Minor-SpaceBetween">
                        {0 === n ? (
                          ""
                        ) : (
                          <span className="Events-List-Row">
                            <span className="Events-List-Row Events-List-Row-Group">
                              {c.snackBefore}
                              {lp(c.snackId)}
                            </span>
                            <ce.b className="Events-List-Row-Group" />
                            <span
                              className={
                                "Events-List-Row Events-List-Row-Group " +
                                (t ? "Events-List-PositiveText" : "Events-List-NegativeText")
                              }
                            >
                              {c.snackAfter}
                              {lp(c.snackId)}
                            </span>
                          </span>
                        )}
                        {0 === a ? (
                          ""
                        ) : (
                          <span className="Events-List-Row">
                            <span className="Events-List-Row Events-List-Row-Group">
                              {c.coinsBefore}
                              <span className="Events-List-Image">
                                <tc aria-label="coins" />
                              </span>
                            </span>
                            <ce.b className="Events-List-Row-Group" />
                            <span
                              className={
                                "Events-List-Row Events-List-Row-Group " +
                                (t ? "Events-List-NegativeText" : "Events-List-PositiveText")
                              }
                            >
                              {c.coinsAfter}
                              <span className="Events-List-Image">
                                <tc aria-label="coins" />
                              </span>
                            </span>
                          </span>
                        )}
                      </div>
                      {void 0 === c.snackId2 ? (
                        ""
                      ) : (
                        <div className="Events-List-Row Events-List-Minor-SpaceBetween">
                          <span className="Events-List-Row">
                            <span className="Events-List-Row Events-List-Row-Group">
                              {c.snackBefore2}
                              {lp(c.snackId2)}
                            </span>
                            <ce.b className="Events-List-Row-Group" />
                            <span
                              className={
                                "Events-List-Row Events-List-Row-Group " +
                                (c.snackAfter2 >= c.snackBefore2
                                  ? "Events-List-PositiveText"
                                  : "Events-List-NegativeText")
                              }
                            >
                              {c.snackAfter2}
                              {lp(c.snackId2)}
                            </span>
                          </span>
                        </div>
                      )}
                      {5 !== e.type ? (
                        ""
                      ) : (
                        <div className="Events-List-Row Events-List-Minor">
                          <span className="Events-List-Row Events-List-Minor">
                            <span
                              className="Events-List-Row Events-List-Row-Group"
                              style={i ? { color: s.lightMode ? NA(i.secondaryColor) : i.secondaryColor } : {}}
                            >
                              {i ? i.nickname : "None"}
                            </span>
                            <ce.b className="Events-List-Row-Group" />
                            <span
                              className="Events-List-Row Events-List-Row-Group"
                              style={o ? { color: s.lightMode ? NA(o.secondaryColor) : o.secondaryColor } : {}}
                            >
                              {o ? o.nickname : "None"}
                            </span>
                          </span>
                        </div>
                      )}
                      {6 !== e.type ? (
                        ""
                      ) : (
                        <div className="Events-List-Row Events-List-Minor">
                          <span className="Events-List-Row Events-List-Minor">
                            <span className="Events-List-Row Events-List-Row-Group">{c.idolBefore}</span>
                            {"None" === c.idolBefore ? "" : <qs style={{ width: "20px", height: "20px" }} />}
                            <ce.b className="Events-List-Row-Group" />
                            <span className="Events-List-Row Events-List-Row-Group Events-List-PositiveText">
                              {c.idolAfter}
                            </span>
                            <qs style={{ width: "20px", height: "20px" }} />
                          </span>
                        </div>
                      )}
                    </l.a.Fragment>
                  );
                })(t, i, o, s)}
              </div>
            </l.a.Fragment>
          );
        },
        sp = function (e) {
          switch (e.event.type) {
            case 2:
              return ap(e);
            case 3:
            case 4:
              return rp(e);
            case 0:
            case 1:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
              return op(e);
          }
          return <l.a.Fragment />;
        },
        cp = 30;
      !(function (e) {
        (e[(e.NewestFirst = 0)] = "NewestFirst"),
          (e[(e.OldestFirst = 1)] = "OldestFirst"),
          (e[(e.Peanuts = 2)] = "Peanuts");
      })(ip || (ip = {}));
      var up = function e() {
          Object(X.a)(this, e), (this.events = []), (this.loading = !0), (this.noMoreToLoad = !1);
        },
        mp = { events: [], loading: !0, noMoreToLoad: !1 },
        Ap = (function () {
          function e() {
            Object(X.a)(this, e), (this.byCategory = new Map());
          }
          return (
            Object(Z.a)(e, [
              {
                key: "Get",
                value: function (e, t) {
                  var a = this.byCategory.get(e);
                  return void 0 === a && (a = new Map()), a.get(t);
                },
              },
              {
                key: "Set",
                value: function (e, t, a) {
                  var n = this.byCategory.get(e);
                  void 0 === n && (n = new Map()), n.set(t, a), this.byCategory.set(e, n);
                },
              },
              {
                key: "Add",
                value: function (e, t, a) {
                  var n,
                    r = this.byCategory.get(e);
                  void 0 === r && (r = new Map());
                  var l = r.get(t);
                  void 0 === l && (l = new up()),
                    (n = l.events).push.apply(n, Object(J.a)(a)),
                    r.set(t, l),
                    this.byCategory.set(e, r);
                },
              },
            ]),
            e
          );
        })(),
        dp = function (e) {
          var t,
            a,
            n,
            i,
            o = e.defaultCategory,
            c = e.defaultSort,
            u = Object(r.useRef)(new Ap()),
            m = Object(r.useState)(null !== o && void 0 !== o ? o : -1),
            A = Object(s.a)(m, 2),
            d = A[0],
            g = A[1],
            p = Object(r.useState)(null !== c && void 0 !== c ? c : ip.NewestFirst),
            E = Object(s.a)(p, 2),
            v = E[0],
            b = E[1],
            w = Object(r.useState)(mp),
            y = Object(s.a)(w, 2),
            B = y[0],
            O = y[1],
            I = null === (t = e.showButtons) || void 0 === t || t,
            S = null === (a = e.showSort) || void 0 === a || a,
            k = null === (n = e.showCategory) || void 0 === n || n,
            N = null !== (i = e.sortOptions) && void 0 !== i ? i : [ip.NewestFirst, ip.OldestFirst],
            T = [-1, Q.ShopTransactions, Q.OtherTransactions, Q.Rewards, Q.Contributions];
          function x() {
            return (x = Object(h.a)(
              f.a.mark(function e() {
                var t, a;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        if (void 0 !== (t = u.current.Get(d, v))) {
                          e.next = 8;
                          break;
                        }
                        return (t = new up()), (e.next = 5), $m(cp, v, d);
                      case 5:
                        (a = e.sent),
                          (t.loading = !1),
                          void 0 !== a && ((t.noMoreToLoad = a.length < cp), (t.events = a), u.current.Set(d, v, t));
                      case 8:
                        O(t);
                      case 9:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            )).apply(this, arguments);
          }
          function P() {
            return (P = Object(h.a)(
              f.a.mark(function e() {
                var t, a, n, r, l, i, o, s;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        if (
                          ((t = B.events && B.events.length > 0 ? B.events[B.events.length - 1] : void 0),
                          (a = B.events && B.events.length > 0 ? B.events.length : 0),
                          void 0 !== t)
                        ) {
                          e.next = 7;
                          break;
                        }
                        return (
                          (n = Object(C.a)(Object(C.a)({}, B), {}, { noMoreToLoad: !0 })),
                          u.current.Set(d, v, n),
                          O(n),
                          e.abrupt("return")
                        );
                      case 7:
                        return (
                          (r = Object(C.a)(Object(C.a)({}, B), {}, { loading: !0 })),
                          u.current.Set(d, v, r),
                          O(r),
                          (e.next = 12),
                          $m(cp, v, d, a)
                        );
                      case 12:
                        if (void 0 !== (l = e.sent) && 0 !== l.length) {
                          e.next = 18;
                          break;
                        }
                        return (
                          (i = Object(C.a)(Object(C.a)({}, B), {}, { noMoreToLoad: !0 })),
                          u.current.Set(d, v, i),
                          O(i),
                          e.abrupt("return")
                        );
                      case 18:
                        (o = B.events ? [].concat(Object(J.a)(B.events), Object(J.a)(l)) : l),
                          ((s = Object(C.a)(Object(C.a)({}, B), {}, { events: o })).noMoreToLoad = l.length < cp),
                          O(s),
                          u.current.Set(d, v, s);
                      case 23:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            )).apply(this, arguments);
          }
          if (
            (Object(r.useEffect)(
              function () {
                !(function () {
                  x.apply(this, arguments);
                })();
              },
              [v, d]
            ),
            void 0 === B.events)
          )
            return <l.a.Fragment>Error loading events.</l.a.Fragment>;
          var M,
            L = I ? (
              <q.a className="Events-ButtonList">
                {k ? (
                  <K.a
                    as="select"
                    value={d}
                    className="Events-Dropdown"
                    onChange={function (e) {
                      g(parseInt(e.target.value));
                    }}
                  >
                    {T.map(function (e) {
                      switch (e) {
                        case -1:
                          return <option value={e}>All</option>;
                        case Q.ShopTransactions:
                          return <option value={e}>Shop</option>;
                        case Q.Rewards:
                          return <option value={e}>Rewards</option>;
                        case Q.Contributions:
                          return <option value={e}>Contributions</option>;
                        case Q.OtherTransactions:
                          return <option value={e}>Other</option>;
                      }
                    })}
                  </K.a>
                ) : null}
                {S ? (
                  <K.a
                    as="select"
                    value={v}
                    className="Events-Dropdown"
                    onChange={function (e) {
                      b(parseInt(e.target.value));
                    }}
                  >
                    {N.map(function (e) {
                      switch (e) {
                        case ip.NewestFirst:
                          return <option value={ip.NewestFirst}>Newest First</option>;
                        case ip.OldestFirst:
                          return <option value={ip.OldestFirst}>Oldest First</option>;
                      }
                      return null;
                    })}
                  </K.a>
                ) : null}
              </q.a>
            ) : null;
          return (
            (M = B.loading ? (
              <js />
            ) : (
              <div className="Events-Load">
                {B.noMoreToLoad ? (
                  "End of Feed"
                ) : (
                  <Vs.a
                    className="Events-Button"
                    onClick={function () {
                      return P.apply(this, arguments);
                    }}
                  >
                    Load More
                  </Vs.a>
                )}
              </div>
            )),
            (
              <l.a.Fragment>
                <div className="Events">
                  {L}
                  <fp events={B.events} />
                  {M}
                </div>
              </l.a.Fragment>
            )
          );
        },
        fp = function (e) {
          var t = e.events;
          return (
            <ul className="Events-List">
              {null === t || void 0 === t
                ? void 0
                : t.map(function (e, t) {
                    var a = new Date(e.created),
                      n = a.getMonth() + 1,
                      r = a.getDate();
                    return (
                      <li className="Events-List-Item Events-List-Item-User" key={t}>
                        <div className="Events-List-Date">
                          {"".concat(n, "-").concat(r.toString().length > 1 ? r : "0" + r)}
                        </div>
                        <sp event={e} />
                      </li>
                    );
                  })}
            </ul>
          );
        };
      var hp = function (e) {
          var t,
            a,
            n = Object(ks.useToasts)().addToast,
            i = Object(r.useContext)(M.context),
            o = i.user,
            u = i.setUser,
            d = (Object(c.f)(), Object(r.useContext)(xo.context)),
            g = Object(r.useContext)(S.context),
            p = Object(c.g)(),
            E = Object(r.useState)(!1),
            v = Object(s.a)(E, 2),
            b = v[0],
            w = v[1],
            y = Object(r.useState)(),
            B = Object(s.a)(y, 2),
            O = B[0],
            I = B[1],
            k = Object(r.useState)(null !== (t = o.lightMode) && void 0 !== t && t),
            N = Object(s.a)(k, 2),
            T = N[0],
            x = N[1],
            P = Object(r.useState)(null !== (a = o.motion) && void 0 !== a && a),
            L = Object(s.a)(P, 2),
            R = L[0],
            F = L[1],
            Q = d.teams.find(function (e) {
              return e.id === o.favoriteTeam;
            }),
            j = Object(r.useState)({ favNumber: o.favNumber, coffee: o.coffee }),
            V = Object(s.a)(j, 2);
          V[0], V[1];
          Object(r.useEffect)(function () {
            (function () {
              var e = Object(h.a)(
                f.a.mark(function e() {
                  var t, a;
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if (((t = []), !o.idol)) {
                            e.next = 5;
                            break;
                          }
                          return (e.next = 4), Ym([o.idol]);
                        case 4:
                          t = e.sent;
                        case 5:
                          void 0 !== t && 1 == t.length && ((a = t[0]), I(a));
                        case 6:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function () {
                return e.apply(this, arguments);
              };
            })()();
          }, []);
          var W = <js />,
            U = (function () {
              var e = Object(h.a)(
                f.a.mark(function e(t) {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if ((t.preventDefault(), w(!0), !(o.coins > 0))) {
                            e.next = 6;
                            break;
                          }
                          return w(!1), n("You don't have 0 coins.", { appearance: "error" }), e.abrupt("return");
                        case 6:
                          return (
                            (e.next = 8),
                            km("/api/logBeg", JSON.stringify({}))
                              .then(
                                (function () {
                                  var e = Object(h.a)(
                                    f.a.mark(function e(t) {
                                      return f.a.wrap(function (e) {
                                        for (;;)
                                          switch ((e.prev = e.next)) {
                                            case 0:
                                              return (
                                                (e.next = 2),
                                                t.json().then(function (e) {
                                                  e.message
                                                    ? t.status &&
                                                      200 === t.status &&
                                                      t.ok &&
                                                      ((o.trackers.BEGS += 1),
                                                      (o.coins += e.amount),
                                                      u(Object(C.a)({}, o)),
                                                      n(e.message, { appearance: "success" }))
                                                    : t.json().then(function (e) {
                                                        n(e.error || "Error", { appearance: "error" });
                                                      });
                                                })
                                              );
                                            case 2:
                                            case "end":
                                              return e.stop();
                                          }
                                      }, e);
                                    })
                                  );
                                  return function (t) {
                                    return e.apply(this, arguments);
                                  };
                                })()
                              )
                              .finally(
                                Object(h.a)(
                                  f.a.mark(function e() {
                                    return f.a.wrap(function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            w(!1);
                                          case 1:
                                          case "end":
                                            return e.stop();
                                        }
                                    }, e);
                                  })
                                )
                              )
                          );
                        case 8:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function (t) {
                return e.apply(this, arguments);
              };
            })();
          if (void 0 === g || void 0 === g.sim) return <js />;
          b ||
            (W = (
              <Vs.a className="ModalForm-Submit" type="submit" variant="success">
                Save Changes
              </Vs.a>
            ));
          var G = null;
          Q &&
            (G = (
              <div className="Account-Section-Item">
                <A background={p} path={"/team/".concat(Q.id)}>
                  <div className="Account-Section-Item-Icon" style={{ background: Q.mainColor }}>
                    {DA(Q)}
                  </div>
                </A>
                <A className="Account-Section-Item-Name" background={p} path={"/team/".concat(Q.id)}>
                  {Q.nickname}
                </A>
              </div>
            ));
          var H = (
            <div className="Account-Section-Item">
              <div className="Account-Section-Item-Icon" style={{ background: "#054428" }}>
                <qs style={{ width: "50px", height: "50px" }} />
              </div>
              <div className="Account-Section-Item-Name">???</div>
            </div>
          );
          O &&
            (H = (
              <div className="Account-Section-Item">
                <A background={p} path={"/player/".concat(O.id)}>
                  <div className="Account-Section-Item-Icon" style={{ background: "#054428" }}>
                    <qs style={{ width: "50px", height: "50px" }} />
                  </div>
                </A>
                <A className="Account-Section-Item-Name" background={p} path={"/player/".concat(O.id)}>
                  {O.name}
                </A>
              </div>
            ));
          var Y = (
              <div className="Account-Info">
                <div className="ModalItem-Subheader">Personal Info</div>
                <ul className="Account-Info-List">
                  <li className="Account-Info-List-Item">
                    <div className="Account-Info-List-Header">Favorite Number</div>
                    <div className="Account-Info-List-Body">{o.favNumber ? o.favNumber : "Number?"}</div>
                    <q.a
                      className="Account-Refresh"
                      onSubmit={function (e) {
                        e.preventDefault(), w(!0);
                        var t = Math.floor(1e3 * Math.random()) + 1;
                        (o.favNumber = t),
                          u(Object(C.a)({}, o)),
                          n("New Favorite Number generated", { appearance: "success" }),
                          w(!1);
                      }}
                    >
                      <div className="Account-Refresh-Wrapper">
                        {b ? (
                          <Qs />
                        ) : (
                          <Ct.a
                            placement="top"
                            overlay={
                              <St.a id="tooltip" className="ModalItem-Tooltip">
                                Get new Favorite Number.
                              </St.a>
                            }
                          >
                            <Vs.a className="Account-Refresh-Button" type="submit" variant="link">
                              <ee.n />
                            </Vs.a>
                          </Ct.a>
                        )}
                      </div>
                    </q.a>
                  </li>
                  <li className="Account-Info-List-Item">
                    <div className="Account-Info-List-Header">Coffee Style</div>
                    <div className="Account-Info-List-Body">{Hs(o.coffee)}</div>
                    <q.a
                      className="Account-Refresh"
                      onSubmit={function (e) {
                        e.preventDefault(),
                          w(!0),
                          (o.coffee = Math.floor(13 * Math.random())),
                          u(Object(C.a)({}, o)),
                          n("New Coffee Style generated", { appearance: "success" }),
                          w(!1);
                      }}
                    >
                      <div className="Account-Refresh-Wrapper">
                        {b ? (
                          <Qs />
                        ) : (
                          <Ct.a
                            placement="bottom"
                            overlay={
                              <St.a id="tooltip" className="ModalItem-Tooltip">
                                Get new Coffee Style.
                              </St.a>
                            }
                          >
                            <Vs.a className="Account-Refresh-Button" type="submit" variant="link">
                              <ee.n />
                            </Vs.a>
                          </Ct.a>
                        )}
                      </div>
                    </q.a>
                  </li>
                  <li className="Account-Info-List-Item">
                    <div className="Account-Info-List-Header">Amount of Begs</div>
                    <div className="Account-Info-List-Body">{o.trackers.BEGS}</div>
                  </li>
                </ul>
                <q.a
                  className="ModalForm-Form"
                  onSubmit={function (e) {
                    e.preventDefault(), w(!0);
                    var t = { coffee: o.coffee, favNumber: o.favNumber };
                    km("/api/updateProfile", JSON.stringify(t))
                      .then(function (e) {
                        e.status && 200 === e.status && e.ok
                          ? ((o.coffee = t.coffee),
                            (o.favNumber = t.favNumber),
                            u(Object(C.a)({}, o)),
                            n("Profile saved", { appearance: "success" }))
                          : e.json().then(function (e) {
                              n(e.error || "Error", { appearance: "error" });
                            });
                      })
                      .finally(
                        Object(h.a)(
                          f.a.mark(function e() {
                            return f.a.wrap(function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    w(!1);
                                  case 1:
                                  case "end":
                                    return e.stop();
                                }
                            }, e);
                          })
                        )
                      );
                  }}
                >
                  <div className="ModalForm-Submit-Wrapper">{W}</div>
                </q.a>
              </div>
            ),
            z = 7 - Object.keys(o.snacks).length,
            X = [];
          if (z > 0) for (var J = 0; J < z; J++) X.push(<div className="Account-Inventory-Slot" />);
          var Z = g.sim.phase < D.EarlySiesta,
            K = null;
          K =
            o.spread && 3 === o.spread.length ? (
              <div className="Account-Section">
                <div className="ModalItem-Subheader">Your Reading</div>
                <div className="Account-Spread">
                  <div className="Account-Spread-Inner">
                    {o.spread.map(function (e, t) {
                      return (
                        <div className="Account-Spread-Card">
                          <div className="Account-Spread-Card-Number">{zA(Number(e))[0]}</div>
                          <div className="Account-Spread-Card-Icon">
                            {DA(
                              d.teams.filter(function (t) {
                                return t.card === Number(e);
                              })[0]
                            )}
                          </div>
                          <div className="Account-Spread-Card-Name">{zA(Number(e))[1]}</div>
                        </div>
                      );
                    })}
                  </div>
                  <A className="ModalForm-Submit Account-Inventory-Button" background={p} path="/reorder/cards">
                    Reorder
                  </A>
                </div>
              </div>
            ) : o.spread && 0 === o.spread.length && Z ? (
              <div className="Account-Section">
                <div className="ModalItem-Subheader">Your Reading</div>
                <div className="Account-Spread">
                  <div className="Account-Spread-NoCards">
                    Tarot Readings are available before the Seasonal Reading each Earlsiesta. Buy Tarot Spread from
                    Concessions to receive a Reading.
                    <m.b className="ModalForm-Submit Account-Inventory-Button" to="/shop/25">
                      Get Cards
                    </m.b>
                  </div>
                </div>
              </div>
            ) : (
              <div className="Account-Section">
                <div className="ModalItem-Subheader">Your Reading</div>
                <div className="Account-Spread">
                  <div className="Account-Spread-NoCards">
                    Tarot Readings are available before the Seasonal Reading each Earlsiesta. Check back after the
                    Season {g.sim.season + 1} Election for a new Reading.
                  </div>
                </div>
              </div>
            );
          var _ = (
            <Ct.a
              placement="top"
              overlay={
                <St.a id="tooltip" className="ModalItem-Tooltip">
                  Beg the Blaseball Gods for coins. You must own Bread Crumbs to do this.
                </St.a>
              }
            >
              <m.b
                className="Account-Inventory-BegButton Account-Inventory-BegButton-Disabled"
                to={"/shop/".concat(ne.BEG)}
              >
                Beg
              </m.b>
            </Ct.a>
          );
          void 0 !== o.snacks[ne.BEG] &&
            o.coins > 0 &&
            (_ = (
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="tooltip" className="ModalItem-Tooltip">
                    Beg the Blaseball Gods for coins. You must have 0 coins to do this.
                  </St.a>
                }
              >
                <div className="Account-Inventory-BegButton Account-Inventory-BegButton-Disabled">Beg</div>
              </Ct.a>
            )),
            void 0 !== o.snacks[ne.BEG] &&
              o.coins <= 0 &&
              (_ = (
                <Ct.a
                  placement="top"
                  overlay={
                    <St.a id="tooltip" className="ModalItem-Tooltip">
                      Beg the Blaseball Gods for coins
                    </St.a>
                  }
                >
                  <Vs.a className="Account-Inventory-BegButton" type="submit">
                    Beg
                  </Vs.a>
                </Ct.a>
              )),
            b && (_ = <Qs />);
          var te = (
              <ul className="Account-Info-List">
                <li className="Account-Info-List-Item">
                  <div className="Account-Info-List-Header">Coins</div>
                  <div className="Account-Info-List-Body">{o.coins}</div>
                  <q.a className="Account-Refresh" onSubmit={U}>
                    <div className="Account-Refresh-Wrapper">{_}</div>
                  </q.a>
                </li>
              </ul>
            ),
            ae = o.snackOrder.map(function (e, t) {
              return (
                <div className="Account-Inventory-WithNum">
                  {e.includes("E") && e.length < 3 ? (
                    <div className="Account-Inventory-Slot">
                      <div className="Account-Inventory-Number">{t + 1}</div>
                    </div>
                  ) : (
                    <Ct.a
                      placement="bottom"
                      overlay={
                        <St.a id="tooltip" className="ModalItem-Tooltip">
                          <div className="Account-Inventory-Item-Title">{ne.GetName(e)}</div>
                        </St.a>
                      }
                    >
                      <div className="Account-Inventory-Item">
                        <div className="Account-Inventory-Number">{t + 1}</div>
                        {uo(e)}
                        <div className="Account-Inventory-Amount">{_A(e, o.snacks[e])}</div>
                      </div>
                    </Ct.a>
                  )}
                </div>
              );
            }),
            re = (
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="tooltip" className="ModalItem-Tooltip">
                    Verify account.
                  </St.a>
                }
              >
                <Vs.a className="Account-Unverified" type="submit" variant="link">
                  <A background={p.state} path="/send-verification-email" className="Auth-CTA">
                    <$.b />
                  </A>
                </Vs.a>
              </Ct.a>
            );
          return (
            o.verified &&
              (re = (
                <Ct.a
                  placement="top"
                  overlay={
                    <St.a id="tooltip" className="ModalItem-Tooltip">
                      Account Verified.
                    </St.a>
                  }
                >
                  <span className="Account-Verified">
                    <ee.c />
                  </span>
                </Ct.a>
              )),
            (
              <Fs {...Object.assign({}, e, { className: "ModalItem" })}>
                <div className="ModalItem-Info">
                  <div className="Account-Header">
                    <div className="Account-Title">Your Account</div>
                    <div className="Account-Miniheader">
                      {o.email} {re}{" "}
                    </div>
                  </div>
                </div>
                <Us.a.Container id="ModalTabs-Container" defaultActiveKey="Profile">
                  <Gs.a variant="tabs" className="ModalTabs">
                    <Gs.a.Item>
                      <Gs.a.Link eventKey="Profile">Profile</Gs.a.Link>
                    </Gs.a.Item>
                    <Gs.a.Item>
                      <Gs.a.Link eventKey="Inventory">Inventory</Gs.a.Link>
                    </Gs.a.Item>
                    <Gs.a.Item>
                      <Gs.a.Link eventKey="UserFeed">Feed</Gs.a.Link>
                    </Gs.a.Item>
                    <Gs.a.Item>
                      <Gs.a.Link eventKey="Settings">Settings</Gs.a.Link>
                    </Gs.a.Item>
                  </Gs.a>
                  <Us.a.Content>
                    <Us.a.Pane eventKey="Profile">
                      <div className="ModalItem-Content">
                        <div className="Account-Section">
                          <div className="Account-Section-Grid">
                            <div className="ModalItem-Subheader">Favorite Team</div>
                            <div className="ModalItem-Subheader">Idolized Player</div>
                            {G}
                            {H}
                          </div>
                        </div>
                        {Y}
                      </div>
                    </Us.a.Pane>
                    <Us.a.Pane eventKey="Inventory">
                      <div className="ModalItem-Content">
                        <div className="Account-Section" style={{ padding: "10px 0" }}>
                          <div className="ModalItem-Subheader">Wallet</div>
                          {te}
                        </div>
                        <div className="Account-Section">
                          <div className="ModalItem-Subheader">Snack Pack</div>
                          <div className="Account-Inventory">
                            <div className="Account-Inventory-Inner">{ae}</div>
                            <A
                              className="ModalForm-Submit Account-Inventory-Button"
                              background={p}
                              path="/reorder/snacks"
                            >
                              Reorder
                            </A>
                          </div>
                        </div>
                        {K}
                      </div>
                    </Us.a.Pane>
                    <Us.a.Pane eventKey="Settings">
                      <div className="ModalItem-Content Account-Content">
                        {o.verified ? null : (
                          <div className="Account-Warning Account-Content-Section">
                            <$.b className="Account-Warning-Icon" />
                            <div className="Account-Warning-Content">
                              Your account must be verified to contribute to the league.
                            </div>
                            <Vs.a className="ModalForm-Submit" type="submit" variant="success">
                              <A background={p} path="/send-verification-email">
                                Verify Account
                              </A>
                            </Vs.a>
                          </div>
                        )}
                        <q.a
                          className="ModalForm-Form Account-Content-Section"
                          onSubmit={function (e) {
                            if ((e.preventDefault(), w(!0), T === o.lightMode && R === o.motion))
                              return w(!1), void n("No Settings Changed", { appearance: "error" });
                            var t = { lightMode: T, motion: R };
                            km("/api/updateSettings", JSON.stringify(t))
                              .then(function (e) {
                                e.status && 200 === e.status && e.ok
                                  ? ((o.lightMode = T),
                                    (o.motion = R),
                                    u(Object(C.a)({}, o)),
                                    n("Settings Saved", { appearance: "success" }))
                                  : e.json().then(function (e) {
                                      n(e.error || "Error", { appearance: "error" });
                                    });
                              })
                              .then(function () {
                                T
                                  ? (document.body.classList.contains("theme-dark") &&
                                      document.body.classList.remove("theme-dark"),
                                    document.body.classList.contains("theme-light") ||
                                      document.body.classList.add("theme-light"))
                                  : (document.body.classList.contains("theme-dark") ||
                                      document.body.classList.add("theme-dark"),
                                    document.body.classList.contains("theme-light") &&
                                      document.body.classList.remove("theme-light"));
                              })
                              .finally(
                                Object(h.a)(
                                  f.a.mark(function e() {
                                    return f.a.wrap(function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            w(!1);
                                          case 1:
                                          case "end":
                                            return e.stop();
                                        }
                                    }, e);
                                  })
                                )
                              );
                          }}
                        >
                          <q.a.Group className="ModalForm-Form-Amount">
                            <q.a.Label className="ModalItem-Subheader">Visual Settings</q.a.Label>
                            <q.a.Check
                              className="ModalForm-Switch"
                              type="switch"
                              id="lm"
                              label="Light Mode"
                              checked={T}
                              onChange={function () {
                                return x(!T);
                              }}
                            />
                            <q.a.Check
                              className="ModalForm-Switch"
                              type="switch"
                              id="mo"
                              label="Disable Animated Motion"
                              checked={R}
                              onChange={function () {
                                return F(!R);
                              }}
                            />
                          </q.a.Group>
                          <div className="ModalForm-Submit-Wrapper">{W}</div>
                        </q.a>
                        <div className="Account-Content-Section">
                          <div className="ModalItem-Subheader">Account</div>
                          {o.facebookId || o.googleId || o.appleId ? (
                            <l.a.Fragment />
                          ) : (
                            <li className="Account-Edit-Content">
                              <div className="Account-Edit-Content-Email">{o.email}</div>
                              <Ct.a
                                placement="top"
                                overlay={
                                  <St.a id="tooltip" className="ModalItem-Tooltip">
                                    Change your email.
                                  </St.a>
                                }
                              >
                                <Vs.a className="Account-Edit-Wrapper" type="submit" variant="link">
                                  <A background={p} path="/send-email-change" className="Account-Edit">
                                    <se.b className="Account-Edit-Button" /> Edit
                                  </A>
                                </Vs.a>
                              </Ct.a>
                            </li>
                          )}
                          <div className="ModalForm-Submit-Wrapper">
                            <A background={p} path="/send-delete-account" className="Account-Delete">
                              Delete Account
                            </A>
                          </div>
                        </div>
                      </div>
                    </Us.a.Pane>
                    <Us.a.Pane eventKey="UserFeed">
                      <div className="ModalItem-Content">
                        <dp defaultCategory={-1} showCategory={!0} />
                      </div>
                    </Us.a.Pane>
                  </Us.a.Content>
                </Us.a.Container>
              </Fs>
            )
          );
        },
        gp =
          (a(200),
          function (e) {
            var t = Object(r.useContext)(M.context),
              a = t.user,
              n = t.setUser,
              i = Object(r.useContext)(xo.context),
              o = Object(r.useContext)(S.context),
              c = Object(r.useState)(),
              u = Object(s.a)(c, 2),
              m = u[0],
              A = u[1],
              d = (function () {
                var t = Object(h.a)(
                  f.a.mark(function t() {
                    return f.a.wrap(function (t) {
                      for (;;)
                        switch ((t.prev = t.next)) {
                          case 0:
                            return (
                              (t.next = 2),
                              km("/api/setFavoriteTeam", JSON.stringify({ teamId: m })).then(function (e) {
                                e.status && 200 === e.status && e.ok && ((a.favoriteTeam = m), n(Object(C.a)({}, a)));
                              })
                            );
                          case 2:
                            e.dismiss();
                          case 3:
                          case "end":
                            return t.stop();
                        }
                    }, t);
                  })
                );
                return function () {
                  return t.apply(this, arguments);
                };
              })();
            return (
              <Fs {...Object.assign({}, e, { className: "Welcome" })}>
                <div className="Welcome-Header">Welcome to Blaseball</div>
                <div className="Welcome-Subheader">To begin, pick your favorite team</div>
                <div className="Welcome-Teams-Wrapper">
                  <div className="Welcome-Teams">
                    {i.teams
                      .sort(function (e, t) {
                        var a = e.nickname.toUpperCase(),
                          n = t.nickname.toUpperCase();
                        return a < n ? -1 : a > n ? 1 : 0;
                      })
                      .map(function (e, t) {
                        if (
                          !1 === LA(e.id, i) &&
                          !1 ===
                            (function (e, t) {
                              if (void 0 === t) return !1;
                              var a = !1;
                              return (
                                t.teams.forEach(function (t) {
                                  t === e && (a = !0);
                                }),
                                a
                              );
                            })(e.id, o.tournament)
                        )
                          return null;
                        var a = m === e.id;
                        return (
                          <div
                            onClick={function () {
                              return A(e.id);
                            }}
                            key={t}
                            className={"Welcome-Team" + (a ? " Welcome-Team--Selected" : "")}
                          >
                            <div className="TeamLogo" style={{ background: e.mainColor }}>
                              {DA(e)}
                            </div>
                            <div className="Welcome-Team-Name-Wrapper">
                              <div className="Welcome-Team-Name">{e.fullName}</div>
                            </div>
                            <div className="Welcome-Team-Overlay">
                              <ue.d />
                            </div>
                          </div>
                        );
                      })}
                  </div>
                </div>
                <div className="Welcome-Message"> </div>
                <div className="Welcome-Submit-Wrapper">
                  <button onClick={d} disabled={!m} className={"Welcome-Submit" + (m ? " Welcome-Submit--Ready" : "")}>
                    Submit
                  </button>
                </div>
              </Fs>
            );
          }),
        pp = function (e) {
          var t = Object(r.useContext)(M.context).user,
            a = Object(r.useState)(!1),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1],
            u = Object(c.f)(),
            m = Object(c.g)();
          return (
            Object(r.useEffect)(function () {
              t.isSignedIn && !t.isFetching && null === t.favoriteTeam ? o(!0) : o(!1);
            }, []),
            t && t.isSignedIn && i ? (
              <gp
                {...Object.assign({}, e, {
                  dismiss: Object(h.a)(
                    f.a.mark(function e() {
                      return f.a.wrap(function (e) {
                        for (;;)
                          switch ((e.prev = e.next)) {
                            case 0:
                              o(!1), t.verified || u.push("/send-verification-email", m);
                            case 2:
                            case "end":
                              return e.stop();
                          }
                      }, e);
                    })
                  ),
                })}
              />
            ) : null
          );
        },
        Ep =
          (a(66),
          function (e) {
            var t = Object(r.useContext)(M.context).initUser,
              a = Object(c.f)(),
              n = Object(ks.useToasts)().addToast,
              i = Object(r.useState)(!1),
              o = Object(s.a)(i, 2),
              u = o[0],
              m = o[1],
              d = Object(r.useState)(null),
              f = Object(s.a)(d, 2),
              h = (f[0], f[1], Object(c.g)()),
              g = h.state && h.state.background ? h.state.background.pathname : "",
              p = e.isModal,
              E = e.isLogin,
              v = Object(r.useRef)(null),
              b = Object(r.useRef)(null),
              w = Object(r.useRef)(null),
              y = Object(c.h)().code;
            return (
              <div className={"".concat(p ? "" : "Auth-SignupWrapper")}>
                {!p && <xg />}
                <Fs {...Object.assign({}, e, { className: "Auth" })}>
                  <header className="Auth-Header">{E ? "Login to Blaseball" : "Signup for Blaseball"}</header>
                  <form
                    onSubmit={function (e) {
                      var r, l;
                      e.preventDefault(), m(!0);
                      var i = {
                        username: v.current.value.trim(),
                        password: b.current.value.trim(),
                        passwordConfirm:
                          null === (r = w.current) || void 0 === r || null === (l = r.value) || void 0 === l
                            ? void 0
                            : l.trim(),
                        code: y,
                        isLogin: E,
                      };
                      km("/auth/local", JSON.stringify(i)).then(function (e) {
                        m(!1),
                          e.ok && e.status && 200 === e.status
                            ? (E || n("Account Created", { appearance: "success" }), t(), a.push("/"))
                            : e.json().then(function (e) {
                                n(e.error || "Error", { appearance: "error" });
                              });
                      });
                    }}
                  >
                    <div>
                      <input ref={v} className="Auth-Input" placeholder="Email" type="email" name="username" />
                    </div>
                    <div>
                      <input ref={b} className="Auth-Input" placeholder="Password" type="password" name="password" />
                    </div>
                    {E ? null : (
                      <div>
                        <input
                          ref={w}
                          className="Auth-Input"
                          placeholder="Confirm Password"
                          type="password"
                          name="passwordConfirm"
                        />
                      </div>
                    )}
                    <div>{u ? <js /> : <input className="Auth-Submit" type="submit" value="Continue" />}</div>
                    {E ? (
                      <A background={h.state} path="/forgot" className="Auth-CTA">
                        Forgot password?
                      </A>
                    ) : null}
                  </form>
                  <div className="Auth-Divider">OR</div>
                  <a className="Auth-SocialAuth" href={"auth/apple?redirectUrl=".concat(g)}>
                    <div className="Auth-SocialAuth-Icon-Container">
                      <ee.f className="Auth-SocialAuth-Icon" />
                    </div>
                    Continue with Apple
                  </a>
                  <a className="Auth-SocialAuth" href={"auth/facebook?redirectUrl=".concat(g)}>
                    <div className="Auth-SocialAuth-Icon-Container">
                      <ue.f />
                    </div>{" "}
                    Continue with Facebook
                  </a>
                  <a className="Auth-SocialAuth" href={"auth/google?redirectUrl=".concat(g)}>
                    <div className="Auth-SocialAuth-Icon-Container">
                      <ee.g className="Auth-SocialAuth-Icon" />
                    </div>
                    Continue with Google
                  </a>
                  <a className="Auth-CTA" href={E ? "/signup" : "/login"}>
                    {E ? "Not on Blaseball yet? Signup" : "Already a member? Log in"}
                  </a>
                </Fs>
              </div>
            );
          }),
        vp = function (e) {
          var t = Object(c.h)().token,
            a = Object(r.useContext)(M.context).initUser,
            n = Object(c.f)(),
            i = Object(ks.useToasts)().addToast,
            o = Object(r.useState)(!1),
            u = Object(s.a)(o, 2),
            m = u[0],
            d = u[1],
            g = Object(r.useState)(!1),
            p = Object(s.a)(g, 2),
            E = p[0],
            v = p[1],
            b = Object(c.g)(),
            w = e.isModal,
            y = Object(r.useRef)(null),
            B = Object(r.useRef)(null);
          Object(r.useEffect)(function () {
            (function () {
              var e = Object(h.a)(
                f.a.mark(function e() {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (e.next = 2), Nm(t);
                        case 2:
                          200 === e.sent ? v(!0) : i("Not a valid reset token.", { appearance: "error" });
                        case 4:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function () {
                return e.apply(this, arguments);
              };
            })()();
          }, []);
          return E ? (
            <div className={"".concat(w ? "" : "Auth-SignupWrapper")}>
              {!w && !t && <xg />}
              <Fs {...Object.assign({}, e, { className: "Auth" })}>
                <header className="Auth-Header Auth-Header-Reset">Reset Password</header>
                {t ? <div className="Auth-Instructions">Enter your new password below.</div> : null}
                <form
                  onSubmit={function (e) {
                    e.preventDefault(), d(!0);
                    var r = { password: y.current.value.trim(), passwordConfirm: B.current.value.trim() };
                    km("/auth/reset-password/".concat(t), JSON.stringify(r)).then(function (e) {
                      d(!1),
                        e.ok && e.status && 200 === e.status
                          ? (i("Password Changed", { appearance: "success" }), a(), n.push("/"))
                          : e.json().then(function (e) {
                              i(e.error || "Error", { appearance: "error" });
                            });
                    });
                  }}
                >
                  <div>
                    <input ref={y} className="Auth-Input" placeholder="New Password" type="password" name="password" />
                    <input
                      ref={B}
                      className="Auth-Input"
                      placeholder="Confirm New Password"
                      type="password"
                      name="passwordConfirm"
                    />
                  </div>
                  <div>{m ? <js /> : <input className="Auth-Submit" type="submit" value="Reset Password" />}</div>
                </form>
              </Fs>
            </div>
          ) : (
            <div className={"".concat(w ? "" : "Auth-SignupWrapper")}>
              <Fs {...Object.assign({}, e, { className: "Auth" })}>
                <header className="Auth-Header">Reset Password</header>The link you used was invalid or expired. Please
                try again.
                <A background={b} path="/forgot" className="Auth-CTA">
                  Forgot password?
                </A>
              </Fs>
            </div>
          );
        },
        bp = function (e) {
          Object(r.useContext)(M.context).initUser;
          var t = Object(c.f)(),
            a = Object(ks.useToasts)().addToast,
            n = Object(r.useState)(!1),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1],
            m = Object(r.useState)(!1),
            A = Object(s.a)(m, 2),
            d = A[0],
            f = A[1],
            h = (Object(c.g)(), e.isModal, Object(r.useRef)(null));
          return (
            <Fs {...Object.assign({}, e, { className: "Auth" })}>
              <header className="Auth-Header Auth-Header-Reset">Forgot Password</header>
              {d ? (
                <div className="Auth-Instructions">
                  If account exists, you will recieve an email with a link to reset your password. <br />
                  <br /> Please check your spam folder.
                </div>
              ) : (
                <div className="Auth-Instructions">
                  {" "}
                  You will need to reset your password. <br />
                  <br /> Please enter the e-mail you used to register.
                </div>
              )}
              {d ? (
                <l.a.Fragment>
                  <div className="Auth-Forgot">
                    {o ? (
                      <js />
                    ) : (
                      <button
                        className="Auth-Submit"
                        onClick={function () {
                          return t.goBack();
                        }}
                      >
                        Okay
                      </button>
                    )}
                  </div>
                </l.a.Fragment>
              ) : (
                <form
                  onSubmit={function (e) {
                    e.preventDefault(), u(!0);
                    var t = { email: h.current.value };
                    km("/auth/forgot-password", JSON.stringify(t)).then(function (e) {
                      u(!1),
                        f(!0),
                        e.ok && e.status && 200 === e.status
                          ? a("Email sent", { appearance: "success" })
                          : e.json().then(function (e) {
                              a(e.error || "Error", { appearance: "error" });
                            });
                    });
                  }}
                >
                  <div className="Auth-Forgot">
                    <input ref={h} className="Auth-Input" placeholder="Email" type="email" name="username" />
                  </div>
                  <div>{o ? <js /> : <input className="Auth-Submit" type="submit" value="Send Reset Email" />}</div>
                </form>
              )}
            </Fs>
          );
        },
        wp = l.a.createContext({ blessings: [], decrees: [], wills: [], gifts: [], willsToPass: 0, decreesToPass: 0 }),
        yp = function (e) {
          var t,
            a = e.children,
            n = Object(r.useContext)(S.context),
            i = Object(r.useState)({
              blessings: [],
              decrees: [],
              wills: [],
              gifts: [],
              willsToPass: 0,
              decreesToPass: 0,
            }),
            o = Object(s.a)(i, 2),
            c = o[0],
            u = o[1];
          function m() {
            return A.apply(this, arguments);
          }
          function A() {
            return (A = Object(h.a)(
              f.a.mark(function e() {
                var t;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (e.next = 2), Mm();
                      case 2:
                        (t = e.sent), u(t);
                      case 4:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            )).apply(this, arguments);
          }
          return (
            Object(r.useEffect)(function () {
              m();
            }, []),
            Object(r.useEffect)(
              function () {
                m();
              },
              [null === (t = n.sim) || void 0 === t ? void 0 : t.phase]
            ),
            (<wp.Provider value={c}>{a}</wp.Provider>)
          );
        };
      yp.context = wp;
      var Bp,
        Op = yp,
        Ip = ["title", "titleId"];
      function Sp() {
        return (Sp =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Cp(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function kp(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Cp(e, Ip);
        return (
          <svg
            {...Sp(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Bp || (Bp = <image id="blessings" x={62} y={46.5} width={132} height={163} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Np,
        Tp = r.forwardRef(kp);
      a.p;
      !(function (e) {
        (e[(e.DECREE = 0)] = "DECREE"), (e[(e.BONUS = 1)] = "BONUS"), (e[(e.WILL = 2)] = "WILL");
      })(Np || (Np = {}));
      var xp,
        Pp = function () {
          return (
            <a href="/login">
              <Vs.a className="Blessings-Submit-Button">Login to Vote</Vs.a>
            </a>
          );
        },
        Mp = function () {
          return (
            <a href="/welcome">
              <Vs.a className="Blessings-Submit-Button">Pick a Favorite Team to Vote</Vs.a>
            </a>
          );
        },
        Lp = function () {
          return (
            <a href={"/shop/".concat(ne.VOTES)}>
              <Vs.a className="Blessings-Submit-Button">Buy Another Vote</Vs.a>
            </a>
          );
        },
        Rp = function (e) {
          Object(r.useContext)(M.context).user;
          var t = e.isActive;
          return <button className="Blessings-Option-Button">Select{t ? "ed" : ""}</button>;
        },
        Dp = function (e) {
          e.isActive;
          var t = e.subheader;
          Object(r.useContext)(M.context).user;
          if (void 0 === t) return null;
          var a = t.split("@")[0],
            n = t.split("@")[1],
            i = t.split("@")[2];
          return (
            <div className="Blessings-Option-Subheader">
              <div className="Blessings-Option-SubheaderIntro">{a}</div>
              <a
                onClick={function () {
                  return Uh("".concat(n, " (Blessing)"));
                }}
                className="Blessings-Option-SubheaderHyperlink"
                href={i}
                target="_blank"
              >
                {n}
              </a>
            </div>
          );
        },
        Fp = function (e) {
          var t = e.title,
            a = e.description,
            n = e.id,
            i = e.source,
            o = e.isActive,
            s = e.onSelect,
            c = e.subheader;
          Object(r.useContext)(M.context).user;
          return (
            <li
              className={"Blessings-Option" + (o ? " Blessings-Option-Current" : "")}
              onClick={function () {
                return s(n);
              }}
            >
              <h4 className={"Blessings-Option-Header" + (i ? " ".concat(vs(i)) : "")}>{t}</h4>
              <Dp isActive={o} subheader={c} r={!0} />
              <div className={"Blessings-Option-Description" + (i ? " ".concat(vs(i)) : "")}>{a}</div>
              <Rp isActive={o} />
            </li>
          );
        },
        Qp = function () {
          var e = Object(r.useContext)(Op.context),
            t = Object(r.useContext)(xo.context),
            a = Object(r.useContext)(M.context).user,
            n = Object(r.useState)(),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1],
            m = Object(c.g)(),
            d = !!a.favoriteTeam && LA(a.favoriteTeam, t),
            f = <Pp />;
          a.isFetching || !a.isSignedIn || a.favoriteTeam || (f = <Mp />),
            !a.isFetching && a.isSignedIn && !a.snacks[ne.VOTES] && d && (f = <Lp />),
            a.isFetching ||
              !a.isSignedIn ||
              d ||
              (f = (
                <Vs.a className="Blessings-Submit-Button" variant="secondary" disabled={!0}>
                  Unavailable
                </Vs.a>
              )),
            !a.isFetching &&
              a.isSignedIn &&
              a.favoriteTeam &&
              a.snacks[ne.VOTES] &&
              d &&
              (f = (
                <Vs.a
                  className="Offseason-Button"
                  variant="success"
                  disabled={!o}
                  onClick={function () {
                    return u(void 0);
                  }}
                >
                  {o ? (
                    <A
                      background={m}
                      path={a.verified ? "/vote/".concat(Np.BONUS, "/").concat(o) : "/send-verification-email"}
                    >
                      Submit Blessing Vote
                    </A>
                  ) : (
                    <l.a.Fragment>Select a Blessing</l.a.Fragment>
                  )}
                </Vs.a>
              ));
          return (
            <div className="Blessings">
              <div className="Blessings-Header">
                <div className="Blessings-Icon" style={{ background: "#9e0000" }}>
                  <Tp />
                </div>
                <h3 className="Blessings-Title">BLESSINGS</h3>
                <Mg header="Blessings" lines={["Each Blessing will be rewarded to a randomly selected Fan."]} />
              </div>
              <ul className="Blessings-Container">
                {e.blessings.map(function (e, t) {
                  return (
                    <Fp
                      {...Object.assign({ key: t }, e, {
                        isActive: o === e.id,
                        onSelect: function (e) {
                          return u(e);
                        },
                      })}
                    />
                  );
                })}
              </ul>
              {f}
            </div>
          );
        },
        jp = ["title", "titleId"];
      function Vp() {
        return (Vp =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Wp(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Up(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Wp(e, jp);
        return (
          <svg
            {...Vp(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {xp ||
              (xp = (
                <image
                  id="_01-TitleBelt"
                  data-name="01-TitleBelt"
                  x={12}
                  y={68}
                  width={232}
                  height={120}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Gp,
        Hp = r.forwardRef(Up),
        Yp = (a.p, ["title", "titleId"]);
      function zp() {
        return (zp =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Xp(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Jp(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Xp(e, Yp);
        return (
          <svg
            {...zp(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Gp ||
              (Gp = (
                <image
                  id="_03-Pennants"
                  data-name="03-Pennants"
                  x={13}
                  y={24}
                  width={230}
                  height={208}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var Zp,
        qp = r.forwardRef(Jp),
        Kp = (a.p, ["title", "titleId"]);
      function _p() {
        return (_p =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function $p(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function eE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = $p(e, Kp);
        return (
          <svg
            {..._p(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Zp ||
              (Zp = (
                <image
                  id="_05-BirdRights"
                  data-name="05-BirdRights"
                  x={21}
                  y={26}
                  width={214}
                  height={204}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var tE,
        aE = r.forwardRef(eE),
        nE = (a.p, ["title", "titleId"]);
      function rE() {
        return (rE =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function lE(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function iE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = lE(e, nE);
        return (
          <svg
            {...rE(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {tE ||
              (tE = (
                <image
                  id="_04-ForceField"
                  data-name="04-ForceField"
                  x={19}
                  y={34}
                  width={218}
                  height={188}
                  xlinkHref="<img/png blob>"
                />
              ))}
          </svg>
        );
      }
      var oE,
        sE = r.forwardRef(iE),
        cE = (a.p, ["title", "titleId"]);
      function uE() {
        return (uE =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function mE(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function AE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = mE(e, cE);
        return (
          <svg
            {...uE(
              {
                id: "Rations",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {oE || (oE = <image id="l" x={213} y={116} width={1074} height={1267} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var dE,
        fE = r.forwardRef(AE),
        hE = (a.p, ["title", "titleId"]);
      function gE() {
        return (gE =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function pE(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function EE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = pE(e, hE);
        return (
          <svg
            {...gE(
              {
                id: "Slot_Machine",
                "data-name": "Slot Machine",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {dE || (dE = <image id="bulbs" x={167} y={62} width={1218} height={1367} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var vE,
        bE = r.forwardRef(EE),
        wE = (a.p, ["title", "titleId"]);
      function yE() {
        return (yE =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function BE(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function OE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = BE(e, wE);
        return (
          <svg
            {...yE(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {vE || (vE = <image x={10} y={8} width={131} height={134} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var IE,
        SE = r.forwardRef(OE),
        CE = (a.p, ["title", "titleId"]);
      function kE() {
        return (kE =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function NE(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function TE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = NE(e, CE);
        return (
          <svg
            {...kE(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {IE || (IE = <image x={13} y={16} width={125} height={119} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var xE,
        PE = r.forwardRef(TE),
        ME = (a.p, ["title", "titleId"]);
      function LE() {
        return (LE =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function RE(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function DE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = RE(e, ME);
        return (
          <svg
            {...LE(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {xE || (xE = <image x={15} y={11} width={119} height={128} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var FE,
        QE = r.forwardRef(DE),
        jE = (a.p, ["title", "titleId"]);
      function VE() {
        return (VE =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function WE(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function UE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = WE(e, jE);
        return (
          <svg
            {...VE(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {FE || (FE = <image x={21} y={9} width={108} height={132} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var GE,
        HE = r.forwardRef(UE),
        YE = (a.p, ["title", "titleId"]);
      function zE() {
        return (zE =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function XE(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function JE(e, t) {
        var a = e.title,
          n = e.titleId,
          l = XE(e, YE);
        return (
          <svg
            {...zE(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {GE || (GE = <image x={14} y={12} width={122} height={127} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ZE,
        qE = r.forwardRef(JE),
        KE = (a.p, ["title", "titleId"]);
      function _E() {
        return (_E =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function $E(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ev(e, t) {
        var a = e.title,
          n = e.titleId,
          l = $E(e, KE);
        return (
          <svg
            {..._E(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ZE || (ZE = <image x={9} y={35} width={133} height={88} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var tv,
        av = r.forwardRef(ev),
        nv = (a.p, ["title", "titleId"]);
      function rv() {
        return (rv =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function lv(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function iv(e, t) {
        var a = e.title,
          n = e.titleId,
          l = lv(e, nv);
        return (
          <svg
            {...rv(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {tv || (tv = <image x={24} y={8} width={102} height={134} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ov,
        sv = r.forwardRef(iv),
        cv = (a.p, ["title", "titleId"]);
      function uv() {
        return (uv =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function mv(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Av(e, t) {
        var a = e.title,
          n = e.titleId,
          l = mv(e, cv);
        return (
          <svg
            {...uv(
              {
                id: "Wrecking_Ball",
                "data-name": "Wrecking Ball",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {ov || (ov = <image id="l" x={111} y={-16} width={1327} height={1400} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var dv,
        fv = r.forwardRef(Av),
        hv = (a.p, ["title", "titleId"]);
      function gv() {
        return (gv =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function pv(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ev(e, t) {
        var a = e.title,
          n = e.titleId,
          l = pv(e, hv);
        return (
          <svg
            {...gv(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {dv || (dv = <image x={6} y={6} width={138} height={138} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var vv,
        bv = r.forwardRef(Ev),
        wv = (a.p, ["title", "titleId"]);
      function yv() {
        return (yv =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Bv(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Ov(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Bv(e, wv);
        return (
          <svg
            {...yv(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {vv || (vv = <image x={22} y={5} width={106} height={140} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Iv,
        Sv = r.forwardRef(Ov),
        Cv = (a.p, ["title", "titleId"]);
      function kv() {
        return (kv =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Nv(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Tv(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Nv(e, Cv);
        return (
          <svg
            {...kv(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Iv || (Iv = <image id="decrees" x={35} y={36.5} width={186} height={183} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var xv,
        Pv = r.forwardRef(Tv),
        Mv = (a.p, ["title", "titleId"]);
      function Lv() {
        return (Lv =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Rv(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Dv(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Rv(e, Mv);
        return (
          <svg
            {...Lv(
              {
                id: "Turntables_X",
                "data-name": "Turntables X",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 1500 1500",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {xv || (xv = <image x={40} y={40} width={1420} height={1420} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Fv,
        Qv = r.forwardRef(Dv),
        jv = (a.p, ["title", "titleId"]);
      function Vv() {
        return (Vv =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Wv(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Uv(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Wv(e, jv);
        return (
          <svg
            {...Vv(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Fv || (Fv = <image x={19} y={23} width={111} height={105} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Gv,
        Hv = r.forwardRef(Uv),
        Yv = (a.p, ["title", "titleId"]);
      function zv() {
        return (zv =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Xv(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Jv(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Xv(e, Yv);
        return (
          <svg
            {...zv(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Gv || (Gv = <image x={22} y={21} width={106} height={108} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Zv,
        qv = r.forwardRef(Jv),
        Kv = (a.p, ["title", "titleId"]);
      function _v() {
        return (_v =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function $v(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function eb(e, t) {
        var a = e.title,
          n = e.titleId,
          l = $v(e, Kv);
        return (
          <svg
            {..._v(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 150,
                height: 150,
                viewBox: "0 0 150 150",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Zv || (Zv = <image x={19} y={20} width={112} height={110} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var tb,
        ab = r.forwardRef(eb);
      a.p;
      !(function (e) {
        (e[(e.DECREE = 0)] = "DECREE"), (e[(e.BONUS = 1)] = "BONUS"), (e[(e.WILL = 2)] = "WILL");
      })(tb || (tb = {}));
      var nb = function () {
          return (
            <a href="/login">
              <Vs.a className="Decrees-Submit-Button">Login to Vote</Vs.a>
            </a>
          );
        },
        rb = function () {
          return (
            <a href="/welcome">
              <Vs.a className="Decrees-Submit-Button">Pick a Favorite Team to Vote</Vs.a>
            </a>
          );
        },
        lb = function () {
          return (
            <m.b to={{ pathname: "/shop/".concat(ne.VOTES) }}>
              <Vs.a className="Decrees-Submit-Button">Buy Another Vote</Vs.a>
            </m.b>
          );
        },
        ib = function (e) {
          Object(r.useContext)(M.context).user;
          var t = e.isActive;
          return <button className="Decrees-Option-Button">Select{t ? "ed" : ""}</button>;
        };
      function ob(e) {
        switch (e) {
          case "champion_penance":
            return <qp className="Decrees-Option-Icon" />;
          case "champion_evolve":
            return <Be className="Decrees-Option-Icon" />;
          case "champion_belt":
            return <Hp className="Decrees-Option-Icon" />;
          case "bird_rights":
            return <aE className="Decrees-Option-Icon" />;
          case "force_fields":
            return <sE className="Decrees-Option-Icon" />;
          case "free_wills":
            return <Ne className="Decrees-Option-Icon" />;
          case "meal_plan":
            return <fE className="Decrees-Option-Icon" />;
          case "all_you_can_eat":
            return <pe className="Decrees-Option-Icon" />;
          case "pot_luck":
            return <bE className="Decrees-Option-Icon" />;
          case "distribute_bats":
            return <Xr className="Decrees-Option-Icon" />;
          case "distribute_caps":
            return <$r className="Decrees-Option-Icon" />;
          case "distribute_shoes":
            return <Bl className="Decrees-Option-Icon" />;
          case "distribute_gloves":
            return <ml className="Decrees-Option-Icon" />;
          case "goodie_bags":
            return <SE className="Decrees-Option-Icon" />;
          case "gift_baskets":
            return <PE className="Decrees-Option-Icon" />;
          case "community_chest":
            return <Re className="Decrees-Option-Icon" />;
          case "build_smithy":
            return <QE className="Decrees-Option-Icon" />;
          case "build_library":
            return <qE className="Decrees-Option-Icon" />;
          case "build_laboratory":
            return <av className="Decrees-Option-Icon" />;
          case "build_monument":
            return <HE className="Decrees-Option-Icon" />;
          case "build_fairgrounds":
            return <We className="Decrees-Option-Icon" />;
          case "build_forum":
            return <sv className="Decrees-Option-Icon" />;
          case "wrecking_ball":
            return <fv className="Decrees-Option-Icon" />;
          case "hype_train":
            return <yt className="Decrees-Option-Icon" />;
          case "ratification":
            return <Xe className="Decrees-Option-Icon" />;
          case "on_the_house":
            return <$e className="Decrees-Option-Icon" />;
          case "climate_control":
            return <bv className="Decrees-Option-Icon" />;
          case "trust_fall":
            return <Sv className="Decrees-Option-Icon" />;
          case "repeal_turntables":
            return <Qv className="Decrees-Option-Icon" />;
          case "underachiever":
            return <pt className="Decrees-Option-Icon" />;
          case "sun_3":
            return <Hv className="Decrees-Option-Icon" />;
          case "sun_9":
            return <ab className="Decrees-Option-Icon" />;
          case "sun_30":
            return <qv className="Decrees-Option-Icon" />;
        }
        return <div />;
      }
      var sb,
        cb = function (e) {
          var t = e.title,
            a = e.description,
            n = e.id,
            i = e.source,
            o = e.isActive,
            s = e.onSelect;
          Object(r.useContext)(M.context).user;
          return (
            <li
              className={"Decrees-Option" + (o ? " Decrees-Option-Current" : "")}
              onClick={function () {
                return s(n);
              }}
            >
              {ob(n)}
              <h4 className={"Decrees-Option-Header" + (void 0 !== i ? " ".concat(vs(i)) : "")}>{t}</h4>
              {a && <p className={"Decrees-Option-Description" + (void 0 !== i ? " ".concat(vs(i)) : "")}>{a}</p>}
              <ib isActive={o} />
            </li>
          );
        },
        ub = function () {
          var e = Object(r.useContext)(Op.context),
            t = Object(r.useContext)(M.context).user,
            a = Object(r.useState)(),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1],
            u = Object(c.g)(),
            m = <nb />;
          t.isFetching || !t.isSignedIn || t.favoriteTeam || (m = <rb />),
            t.isFetching || !t.isSignedIn || t.snacks[ne.VOTES] || (m = <lb />),
            !t.isFetching &&
              t.isSignedIn &&
              t.favoriteTeam &&
              void 0 !== t.snacks[ne.VOTES] &&
              (m = (
                <Vs.a
                  className="Offseason-Button"
                  variant="success"
                  disabled={!i}
                  onClick={function () {
                    return o(void 0);
                  }}
                >
                  {i ? (
                    <A
                      background={u}
                      path={t.verified ? "/vote/".concat(tb.DECREE, "/").concat(i) : "/send-verification-email"}
                    >
                      Submit Decree Vote
                    </A>
                  ) : (
                    <l.a.Fragment>Choose a Decree</l.a.Fragment>
                  )}
                </Vs.a>
              ));
          var d = [
            "The "
              .concat(e.decreesToPass > 1 ? e.decreesToPass : "", " Decree")
              .concat(e.decreesToPass > 1 ? "s" : "", " with the most votes from the community will go into effect."),
          ];
          return (
            <div className="Decrees">
              <div className="Decrees-Header">
                <div className="Decrees-Icon" style={{ background: "#9e0000" }}>
                  <Pv />
                </div>
                <h3 className="Decrees-Title">DECREES</h3>
                <Mg header="Decrees" lines={d} />
              </div>
              <ul className="Decrees-Container">
                {e.decrees.map(function (e, t) {
                  return (
                    <cb
                      {...Object.assign({ key: t }, e, {
                        isActive: i === e.id,
                        onSelect: function (e) {
                          return o(e);
                        },
                      })}
                    />
                  );
                })}
              </ul>
              {m}
            </div>
          );
        },
        mb = ["title", "titleId"];
      function Ab() {
        return (Ab =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function db(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function fb(e, t) {
        var a = e.title,
          n = e.titleId,
          l = db(e, mb);
        return (
          <svg
            {...Ab(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 256,
                height: 256,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {sb || (sb = <image id="wills" x={43} y={47} width={170} height={162} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var hb,
        gb = r.forwardRef(fb);
      a.p;
      !(function (e) {
        (e[(e.DECREE = 0)] = "DECREE"), (e[(e.BONUS = 1)] = "BONUS"), (e[(e.WILL = 2)] = "WILL");
      })(hb || (hb = {}));
      var pb = function () {
          return (
            <a href="/login">
              <Vs.a className="Wills-Submit-Button">Login to Vote</Vs.a>
            </a>
          );
        },
        Eb = function () {
          return (
            <a href="/welcome">
              <Vs.a className="Wills-Submit-Button">Pick a Favorite Team to Vote</Vs.a>
            </a>
          );
        },
        vb = function () {
          return (
            <a href={"/shop/".concat(ne.VOTES)}>
              <Vs.a className="Wills-Submit-Button">Buy Another Vote</Vs.a>
            </a>
          );
        },
        bb = function (e) {
          Object(r.useContext)(M.context).user;
          var t = e.isActive;
          return <button className="Wills-Option-Button">Select{t ? "ed" : ""}</button>;
        },
        wb = function (e) {
          e.isActive;
          var t = e.subheader;
          Object(r.useContext)(M.context).user;
          if (void 0 === t) return null;
          var a = t.split("@")[0],
            n = t.split("@")[1],
            i = t.split("@")[2];
          return (
            <div className="Wills-Option-Subheader">
              <div className="Wills-Option-SubheaderIntro">{a}</div>
              <a
                onClick={function () {
                  return Uh("".concat(n, " (Will)"));
                }}
                className="Wills-Option-SubheaderHyperlink"
                href={i}
                target="_blank"
              >
                {n}
              </a>
            </div>
          );
        },
        yb = function (e) {
          var t = e.title,
            a = e.description,
            n = e.id,
            i = e.source,
            o = e.isActive,
            s = e.onSelect,
            c = e.subheader;
          Object(r.useContext)(M.context).user;
          return (
            <li
              className={"Wills-Option" + (o ? " Wills-Option-Current" : "")}
              onClick={function () {
                return s(n);
              }}
            >
              <h4 className={"Wills-Option-Header" + (void 0 !== i ? " ".concat(vs(i)) : "")}>{t}</h4>
              <wb isActive={o} subheader={c} r={!0} />
              <div className={"Wills-Option-Description" + (void 0 !== i ? " ".concat(vs(i)) : "")}>{a}</div>
              <bb isActive={o} />
            </li>
          );
        },
        Bb = function () {
          var e = Object(r.useContext)(Op.context),
            t = Object(r.useContext)(xo.context),
            a = Object(r.useContext)(M.context).user,
            n = Object(r.useState)(),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1],
            d = Object(c.g)(),
            f = !!a.favoriteTeam && LA(a.favoriteTeam, t),
            h = <pb />;
          a.isFetching || !a.isSignedIn || a.favoriteTeam || (h = <Eb />),
            !a.isFetching && a.isSignedIn && !a.snacks[ne.VOTES] && f && (h = <vb />),
            a.isFetching ||
              !a.isSignedIn ||
              f ||
              (h = (
                <Vs.a className="Wills-Submit-Button" variant="secondary" disabled={!0}>
                  Unavailable
                </Vs.a>
              )),
            !a.isFetching && a.isSignedIn && void 0 === a.snacks[ne.WILLS] && (h = <l.a.Fragment />),
            !a.isFetching &&
              a.isSignedIn &&
              a.favoriteTeam &&
              a.snacks[ne.VOTES] &&
              void 0 !== a.snacks[ne.WILLS] &&
              f &&
              (h = (
                <Vs.a
                  className="Offseason-Button"
                  variant="success"
                  disabled={!o}
                  onClick={function () {
                    return u(void 0);
                  }}
                >
                  {o ? (
                    <A
                      background={d}
                      path={a.verified ? "/vote/".concat(hb.WILL, "/").concat(o) : "/send-verification-email"}
                    >
                      Submit Will Vote
                    </A>
                  ) : (
                    <l.a.Fragment>Select a Will</l.a.Fragment>
                  )}
                </Vs.a>
              ));
          var g = [
              "Each Team in the ILB shall win ".concat(
                e.willsToPass,
                " Wills, randomly selected from their Fans' votes."
              ),
              "Each Will can only be won once per Team per Election.",
              "Wills shall be performed in order of the league standings.",
            ],
            p = null;
          return (
            (p =
              void 0 === a.snacks[ne.WILLS] ? (
                <div className="Wills-Header">
                  <div className="Wills-Icon" style={{ background: "#9e0000" }}>
                    <gb />
                  </div>
                  <h3 className="Wills-Title">
                    <ee.e aria-label="Locked" className="Wills-Locked" />
                    WILLS
                  </h3>
                  <Mg header="Wills" lines={g} />
                  <Vs.a className="Wills-Submit-Button Wills-Submit-Button-ToShop">
                    <m.b to={"/shop/".concat(ne.WILLS)}>Get Wills Access</m.b>
                  </Vs.a>
                </div>
              ) : (
                <div className="Wills-Header">
                  <div className="Wills-Icon" style={{ background: "#9e0000" }}>
                    <gb />
                  </div>
                  <h3 className="Wills-Title">WILLS</h3>
                  <Mg header="Wills" lines={g} />
                </div>
              )),
            (
              <div className="Wills">
                {p}
                <ul className="Wills-Container">
                  {void 0 !== a.snacks[ne.WILLS]
                    ? e.wills.map(function (e, t) {
                        return (
                          <yb
                            {...Object.assign({ key: t }, e, {
                              isActive: o === e.id,
                              onSelect: function (e) {
                                return u(e);
                              },
                            })}
                          />
                        );
                      })
                    : null}
                </ul>
                {h}
              </div>
            )
          );
        },
        Ob =
          (a(97),
          function (e) {
            var t = Object(r.useContext)(M.context).user,
              a = Object(r.useContext)(xo.context),
              n = e.event;
            if (0 === n.teamTags.length) return null;
            var i = a.teams.find(function (e) {
              return e.id === n.teamTags[0];
            });
            if (void 0 === i) return null;
            var o = n.metadata;
            return (
              <div className={"Recap-Decree-Container" + (t.lightMode ? " Recap-Decree-Container-LightMode" : "")}>
                <div className="Recap-Blessing-Info">
                  <div className="Recap-Blessing-Header">{o.title}</div>
                </div>
                <div className="Recap-Blessing-Content">
                  <div className="Recap-Blessing-Team" style={{ background: i.mainColor }}>
                    {DA(i)}
                  </div>
                  <div className="Recap-Blessing-Description">{gm(e)}</div>
                </div>
                <div className="Recap-Blessing-VoteContainer">
                  <div className="Recap-Blessing-Votes">
                    {o.title} - {Math.round((o.willVotes / o.totalVotes) * 100)}% of all{" "}
                    {null === i || void 0 === i ? void 0 : i.nickname} Will Votes
                  </div>
                  <div className="Recap-Blessing-Votes">
                    This Filing - {Math.round((o.dataVotes / o.willVotes) * 100)}% of{" "}
                    {null === i || void 0 === i ? void 0 : i.nickname} {o.title} Votes
                  </div>
                  <div className="Recap-Blessing-Votes">
                    Final Odds - {Math.round((o.dataVotes / o.totalVotes) * 100)}% chance of happening.
                  </div>
                </div>
              </div>
            );
          }),
        Ib = function (e) {
          var t = Object(r.useContext)(M.context).user,
            a = Object(r.useContext)(xo.context),
            n = e.event;
          if (0 === n.teamTags.length) return null;
          var i = a.teams.find(function (e) {
            return e.id === n.teamTags[0];
          });
          if (void 0 === i) return null;
          var o = n.metadata,
            s = a.teams.find(function (e) {
              return e.id === o.highestTeam;
            });
          return (
            <div className={"Recap-Decree-Container" + (t.lightMode ? " Recap-Decree-Container-LightMode" : "")}>
              <div className="Recap-Blessing-Info">
                <div className="Recap-Decree-Header">{n.metadata.title}</div>
                <div className="Recap-Blessing-Votes">
                   - {o.totalVotes} Vote{o.totalVotes > 1 ? "s" : ""} Cast
                </div>
              </div>
              <div className="Recap-Decree-Content">
                <div className="Recap-Blessing-Team" style={{ background: i.mainColor }}>
                  {DA(i)}
                </div>
                <div className="Recap-Decree-Description">{gm(e)}</div>
              </div>
              <div className="Recap-Blessing-VoteContainer">
                <div className="Recap-Blessing-Votes">
                  The {i.nickname} had {Math.round((o.votes / o.totalVotes) * 100)}% of the Votes
                </div>
                {s ? (
                  i.nickname === s.nickname || o.votes === o.highestVotes ? (
                    <div className="Recap-Blessing-Votes">They were the highest bidders.</div>
                  ) : (
                    <div className="Recap-Blessing-Votes">
                      Highest Bidder - The {s.nickname} with {Math.round((o.highestVotes / o.totalVotes) * 100)}%
                    </div>
                  )
                ) : null}
              </div>
            </div>
          );
        },
        Sb = function (e) {
          var t = Object(r.useContext)(M.context).user,
            a = e.event.metadata;
          return (
            <div className={"Recap-Decree-Container" + (t.lightMode ? " Recap-Decree-Container-LightMode" : "")}>
              <div className="Recap-Blessing-Info">
                <div className="Recap-Blessing-Header">{a.title}</div>
                <div className="Recap-Decree-Votes">
                   - {a.votes} Votes, {Math.round((a.votes / a.totalVotes) * 100)}% of all Decree Votes
                </div>
              </div>
              <div className="Recap-Blessing-Content">
                <div className="Recap-Decree-Icon">{ob(a.id)}</div>
                <div className="Recap-Blessing-Description">{gm(e)}</div>
              </div>
            </div>
          );
        },
        Cb = function (e) {
          var t = Object(r.useContext)(M.context).user,
            a = e.event;
          return (
            <div className={"Recap-Decree-Container" + (t.lightMode ? " Recap-Decree-Container-LightMode" : "")}>
              <div className="Recap-Blessing-Info">
                {(function (e) {
                  var t = e.metadata.being ? parseInt(e.metadata.being) : -1;
                  return t > -1 ? (
                    <div className={"Recap-Decree-Header " + vs(t)}>{e.description}</div>
                  ) : (
                    <div className="Recap-Decree-Header">{e.description}</div>
                  );
                })(a)}
              </div>
              <div className="Recap-Decree-Content">
                <div className="Recap-Blessing-Team" style={{ background: "#000000" }}>
                  {vm(e.event)}
                </div>
                <div className="Recap-Decree-Description">{gm(e)}</div>
              </div>
            </div>
          );
        },
        kb = function (e) {
          var t = e.subEvents;
          return void 0 === t ? null : (
            <div className="Recap-Decree-Container">
              <div className="Recap-Decree-Content">
                <div className="Recap-Decree-Description">
                  <pm events={t} source={cm.Home} entity="" />
                </div>
              </div>
            </div>
          );
        };
      function Nb() {
        var e,
          t = Object(r.useContext)(M.context).user,
          a = Object(r.useContext)(S.context),
          n = void 0 !== a.sim && void 0 !== a.sim.season ? a.sim.season : -1,
          i = Object(r.useRef)(null),
          o = Object(r.useRef)(null),
          c = Object(r.useState)({
            recap: void 0,
            eventResults: void 0,
            blessingResults: void 0,
            decreeResults: void 0,
          }),
          u = Object(s.a)(c, 2),
          m = u[0],
          A = u[1],
          d = Object(r.useState)(!1),
          g = Object(s.a)(d, 2),
          p = g[0],
          E = g[1],
          v = Object(r.useState)([]),
          b = Object(s.a)(v, 2),
          w = b[0],
          y = b[1],
          B = Object(r.useState)(!1),
          O = Object(s.a)(B, 2),
          I = O[0],
          C = O[1],
          k = (Object(r.useContext)(xo.context), null !== (e = t.favoriteTeam) && void 0 !== e ? e : "");
        function N() {
          return (N = Object(h.a)(
            f.a.mark(function e() {
              var t, r, l, i, o, s, c, u, m;
              return f.a.wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (e.next = 2), cA(n, 13);
                    case 2:
                      return (
                        (r = e.sent), y(r), (e.next = 6), Rm(null === (t = a.sim) || void 0 === t ? void 0 : t.season)
                      );
                    case 6:
                      if (((l = e.sent), (i = []), (o = []), (s = void 0), !l)) {
                        e.next = 26;
                        break;
                      }
                      if (!(l.eventResults.length > 0)) {
                        e.next = 15;
                        break;
                      }
                      return (e.next = 14), jm(l.eventResults);
                    case 14:
                      o = e.sent;
                    case 15:
                      if (!(l.bonusResults.length > 0)) {
                        e.next = 22;
                        break;
                      }
                      return (e.next = 18), Wm(l.bonusResults);
                    case 18:
                      for (
                        c = e.sent,
                          i = [],
                          u = function (e) {
                            var t = c.find(function (t) {
                              return t.id === l.bonusResults[e];
                            });
                            t && i.push(t);
                          },
                          m = 0;
                        m < l.bonusResults.length;
                        m++
                      )
                        u(m);
                    case 22:
                      if (!(l.decreeResults.length > 0)) {
                        e.next = 26;
                        break;
                      }
                      return (e.next = 25), Gm(l.decreeResults);
                    case 25:
                      s = e.sent;
                    case 26:
                      A({ recap: l, eventResults: o, blessingResults: i, decreeResults: s });
                    case 27:
                    case "end":
                      return e.stop();
                  }
              }, e);
            })
          )).apply(this, arguments);
        }
        Object(r.useEffect)(function () {
          E(!0),
            (function () {
              return N.apply(this, arguments);
            })().then(function () {
              E(!1);
            });
        }, []);
        var T = function (e) {
          e.scrollIntoView({ behavior: "smooth", block: "start" });
        };
        if (!a || !a.sim || !m || !m.recap) return null;
        var x,
          P =
            m.eventResults && m.recap && m.recap.eventResults.length > 0 ? (
              <div className="Recap-Results">
                <h2 className="Recap-ResultsHeader">Tidings</h2>
                {w.map(function (e) {
                  if (176 !== e.type) return null;
                  var t = e.metadata.children,
                    a = t
                      ? w.filter(function (e) {
                          return t.includes(e.id);
                        })
                      : [];
                  return <Cb event={e} subEvents={a} />;
                })}
              </div>
            ) : null,
          L = (
            <div className="Recap-Results">
              <h2 className="Recap-ResultsHeader" id="Decrees">
                Decrees
              </h2>
              {w.map(function (e) {
                if (59 !== e.type) return null;
                var t = e.metadata.children,
                  a = t
                    ? w.filter(function (e) {
                        return t.includes(e.id);
                      })
                    : [];
                return <Sb event={e} subEvents={a} />;
              })}
            </div>
          ),
          R = !0,
          D = (
            <div className="Recap-Results" ref={i} style={{ marginTop: "-70px", paddingTop: "70px" }}>
              <h2 className="Recap-ResultsHeader" id="Wills">
                Wills
              </h2>
              {w.map(function (e) {
                if (null === e.teamTags) return null;
                if (I && !e.teamTags.includes(k)) return null;
                if (61 !== e.type) return null;
                R && (R = !1);
                var t = e.metadata.children,
                  a = t
                    ? w.filter(function (e) {
                        return t.includes(e.id);
                      })
                    : [];
                return <Ob event={e} subEvents={a} />;
              })}
              {R ? <div className="Recap-NoneFound">No Wills found...</div> : null}
            </div>
          ),
          F = !0,
          Q = (
            <div className="Recap-Results">
              <h2
                className="Recap-ResultsHeader"
                id="Blessings"
                ref={o}
                style={{ marginTop: "-70px", paddingTop: "70px" }}
              >
                Blessings
              </h2>
              {w.map(function (e) {
                if (null === e.teamTags) return null;
                if (I && !e.teamTags.includes(k)) return null;
                if (60 !== e.type) return null;
                F && (F = !1);
                var t = e.metadata.children,
                  a = t
                    ? w.filter(function (e) {
                        return t.includes(e.id);
                      })
                    : [];
                return <Ib event={e} subEvents={a} />;
              })}
              {F ? <div className="Recap-NoneFound">No Blessings found...</div> : null}
            </div>
          ),
          j = [],
          V = Object(z.a)(w);
        try {
          for (V.s(); !(x = V.n()).done; ) {
            var W,
              U = x.value;
            if (null !== U.teamTags)
              if (!I || U.teamTags.includes(k))
                if (60 !== U.type && 61 !== U.type && 59 !== U.type && 176 !== U.type && -1 !== U.type)
                  void 0 === (null === (W = U.metadata) || void 0 === W ? void 0 : W.parent) && j.push(U);
          }
        } catch (X) {
          V.e(X);
        } finally {
          V.f();
        }
        var G =
            j.length > 0 ? (
              <div className="Recap-Results">
                <h2
                  className="Recap-ResultsHeader"
                  id="Post Election"
                  style={{ marginTop: "-70px", paddingTop: "70px" }}
                >
                  Post Election
                </h2>
                <kb subEvents={j} />
              </div>
            ) : null,
          H = (
            <div className="Recap-Results">
              <div className="Recap-Decree-Container">
                <div className="Recap-Decree-Content">
                  <div className="Recap-Credits">
                    <div className="Recap-Decree-Description-Line">
                      <strong>Thank You for Playing</strong>
                    </div>
                    <div className="Recap-Decree-Description-Line Recap-SpaceBefore">
                      <strong>Brought to you by The Game Band</strong>
                    </div>
                    <div className="Recap-Decree-Description-Line">
                      Blaseball will be back with Season 20 on June 14th, 2021 at 8am PST.
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ),
          Y = null === Q && null === L ? <div className="Recap-Note">Nothing happened in this Election.</div> : null;
        return a.sim.season < 11 ? (
          <div className="Recap">
            <div className="Recap-Header">New Election Coming Soon.</div>
          </div>
        ) : (
          <div className="Recap">
            <div className="Recap-Header">The Results are in.</div>
            {p ? (
              <js />
            ) : (
              <div className="Recap-Inner">
                <div className="Recap-Name">{m.recap.name}</div>
                <q.a className="Recap-Filters">
                  <Vs.a
                    className="Bulletin-Actions-Item-Button Recap-Filters-Button"
                    variant="info"
                    aria-label="Go To Wills"
                    onClick={function () {
                      T(i.current);
                    }}
                  >
                    Go To Wills
                  </Vs.a>
                  <Vs.a
                    className="Bulletin-Actions-Item-Button Recap-Filters-Button"
                    variant="info"
                    aria-label="Go To Blessings"
                    onClick={function () {
                      T(o.current);
                    }}
                  >
                    Go To Blessings
                  </Vs.a>
                  <q.a.Check
                    className="ModalForm-Switch Recap-Filters-Switch"
                    type="switch"
                    id="favteam"
                    label="Favorite Team's Results Only"
                    checked={I}
                    onChange={function () {
                      return C(!I);
                    }}
                  />
                </q.a>
                <div className="Recap-Body">
                  {L}
                  {P}
                  {D}
                  {Q}
                  {G}
                  {H}
                  {Y}
                </div>
              </div>
            )}
            <Lh />
          </div>
        );
      }
      function Tb() {
        var e = Object(r.useContext)(M.context).user,
          t = Object(r.useContext)(S.context);
        return t && t.sim ? 0 === t.sim.phase ? <Nb /> : e.unlockedElection ? <xb /> : <Mb /> : null;
      }
      function xb() {
        var e,
          t = Object(r.useContext)(S.context),
          a = (Object(r.useContext)(M.context).user, void 0 !== t.sim && void 0 !== t.sim.season ? t.sim.season : -1);
        return (
          <div className="Offseason">
            <div className="Offseason-Info">
              <div className="Offseason-Header">
                Season <span className="Offseason-Number">{a + 1}</span> Election
              </div>
              <div role="text" style={{ textAlign: "center" }}>
                <div className="Offseason-Description">
                  Votes are counted up and changes are made at the end of every week, between seasons of Blaseball. This
                  Election ends in...
                </div>
                <Kh dateString={null === (e = t.sim) || void 0 === e ? void 0 : e.electionDate} />
              </div>
            </div>
            <div className="Offseason-Body">
              <Pb />
            </div>
          </div>
        );
      }
      function Pb() {
        Object(r.useContext)(M.context).user;
        var e = Object(r.useContext)(Op.context);
        return void 0 === e || 0 === e.blessings.length || 0 === e.decrees.length ? (
          <js />
        ) : (
          <l.a.Fragment>
            <ub />
            <Bb />
            <Qp />
          </l.a.Fragment>
        );
      }
      function Mb() {
        var e = Object(r.useContext)(M.context),
          t = e.user,
          a = e.setUser,
          n = Object(ks.useToasts)().addToast,
          i = (function () {
            var e = Object(h.a)(
              f.a.mark(function e(r) {
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        if ((r.preventDefault(), t.unlockedElection)) {
                          e.next = 10;
                          break;
                        }
                        if (!(t.coins < 100)) {
                          e.next = 6;
                          break;
                        }
                        n("Not enough coins", { appearance: "error" }), (e.next = 8);
                        break;
                      case 6:
                        return (
                          (e.next = 8),
                          km("/api/buyUnlockElection")
                            .then(
                              (function () {
                                var e = Object(h.a)(
                                  f.a.mark(function e(r) {
                                    var l, i;
                                    return f.a.wrap(function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            r.ok && r.status && 200 === r.status
                                              ? ((l = JSON.parse(JSON.stringify(t.snackOrder))).includes("Votes") ||
                                                  ((i = l.findIndex(function (e) {
                                                    return "E" === e;
                                                  })),
                                                  l.splice(i, 1, "Votes")),
                                                (t.coins = t.coins - 100),
                                                (t.unlockedElection = !0),
                                                a(Object(C.a)({}, t)))
                                              : r.json().then(function (e) {
                                                  n(e.message || "Error", { appearance: "error" });
                                                });
                                          case 1:
                                          case "end":
                                            return e.stop();
                                        }
                                    }, e);
                                  })
                                );
                                return function (t) {
                                  return e.apply(this, arguments);
                                };
                              })()
                            )
                            .finally(function () {
                              n("Welcome, Voter! You have ".concat(t.snacks.Votes, " Vote already from signing up."), {
                                appearance: "success",
                              });
                            })
                        );
                      case 8:
                        e.next = 11;
                        break;
                      case 10:
                        n("You already unlocked the Election!", { appearance: "error" });
                      case 11:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            );
            return function (t) {
              return e.apply(this, arguments);
            };
          })();
        return (
          <div className="Offseason">
            <div className="Offseason-Info">
              <h2 className="Offseason-Header">
                <ee.e /> Election
              </h2>
              <div className="Offseason-Locked">Purchase your Voting Rights to unlock the Election.</div>
              <q.a className="Offseason-Locked-ButtonContainer" onSubmit={i}>
                <span>
                  <tc style={{ width: "22px", height: "22px" }} /> 100
                </span>{" "}
                <Vs.a className="Decrees-Submit-Button" style={{ margin: "auto" }} type="submit" variant="success">
                  {" "}
                  Buy
                </Vs.a>
              </q.a>
            </div>
          </div>
        );
      }
      var Lb,
        Rb,
        Db,
        Fb = function (e) {
          var t = Object(ks.useToasts)().addToast,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(c.f)(),
            u = Object(c.h)().entityId,
            m = Object(r.useState)(0),
            A = Object(s.a)(m, 2),
            d = A[0],
            g = A[1],
            p = Object(r.useState)(!1),
            E = Object(s.a)(p, 2),
            v = E[0],
            b = E[1],
            w = function (e) {
              var t = e.target.value;
              g(t);
            },
            y = (function () {
              var e = Object(h.a)(
                f.a.mark(function e(a) {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if ((a.preventDefault(), !(void 0 === n.snacks.Peanuts || n.snacks.Peanuts < d))) {
                            e.next = 5;
                            break;
                          }
                          return (e.next = 4), t("Insufficient peanuts", { appearance: "error" });
                        case 4:
                          return e.abrupt("return");
                        case 5:
                          if (!(d < 1)) {
                            e.next = 9;
                            break;
                          }
                          return (e.next = 8), t("Invalid input", { appearance: "error" });
                        case 8:
                          return e.abrupt("return");
                        case 9:
                          return (
                            b(!0),
                            (e.next = 12),
                            km("/api/payTribute", JSON.stringify({ entityId: u, amount: d }))
                              .then(
                                (function () {
                                  var e = Object(h.a)(
                                    f.a.mark(function e(a) {
                                      var r, l, s;
                                      return f.a.wrap(function (e) {
                                        for (;;)
                                          switch ((e.prev = e.next)) {
                                            case 0:
                                              return (
                                                (e.next = 2),
                                                new Promise(function (e) {
                                                  return setTimeout(e, 600);
                                                })
                                              );
                                            case 2:
                                              a.ok && a.status && 200 === a.status
                                                ? ((r = JSON.parse(JSON.stringify(n.snacks))),
                                                  (l = JSON.parse(JSON.stringify(n.snackOrder))),
                                                  r.Peanuts - d === 0
                                                    ? (delete r.Peanuts,
                                                      l.includes("Peanuts") &&
                                                        ((s = l.findIndex(function (e) {
                                                          return "Peanuts" === e;
                                                        })),
                                                        l.splice(s, 1, "E")))
                                                    : (r.Peanuts -= d),
                                                  (n.snacks = r),
                                                  (n.snackOrder = l),
                                                  i(Object(C.a)({}, n)),
                                                  t(
                                                    "YOU OFFER ".concat(d > 1 ? "PEANUTS" : "A PEANUT", " IN TRIBUTE"),
                                                    { appearance: "warning" }
                                                  ),
                                                  o.goBack())
                                                : a.json().then(function (e) {
                                                    t(e.message || "Error", { appearance: "error" });
                                                  });
                                            case 3:
                                            case "end":
                                              return e.stop();
                                          }
                                      }, e);
                                    })
                                  );
                                  return function (t) {
                                    return e.apply(this, arguments);
                                  };
                                })()
                              )
                              .finally(function () {
                                b(!1);
                              })
                          );
                        case 12:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function (t) {
                return e.apply(this, arguments);
              };
            })(),
            B = <js />;
          return (
            v ||
              (B = (
                <Vs.a className="ModalForm-Submit" type="submit" variant="success">
                  Pay Tribute
                </Vs.a>
              )),
            (
              <Fs {...Object.assign({}, e, { className: "ModalForm" })}>
                <div className="ModalForm-Header">Pay Tribute</div>
                <q.a className="ModalForm-Form" onSubmit={y}>
                  <q.a.Group className="ModalForm-Form-Amount" controlId="amount">
                    <q.a.Label>How many peanuts will you offer?</q.a.Label>
                    <div
                      className={
                        "ModalForm-Form-Inputs-Amount" + (n.lightMode ? " ModalForm-Form-Inputs-Amount-LightMode" : "")
                      }
                    >
                      <div className="ModalForm-Ticket-Wrapper">
                        <_.oc className="ModalForm-Ticket-Icon" />
                        {n.snacks.Peanuts}
                      </div>
                      <q.a.Control type="number" value={d} onChange={w} />
                      <q.a.Control
                        type="range"
                        className="ModalForm-Range"
                        min={1}
                        max={Math.min(n.snacks.Peanuts)}
                        value={d}
                        onChange={w}
                        step="1"
                      />
                      <a
                        className={
                          "ModalForm-Form-Inputs-Amount-Max" +
                          (n.lightMode ? " ModalForm-Form-Inputs-Amount-Max-LightMode" : "")
                        }
                        onClick={function (e) {
                          e.preventDefault(), g(n.snacks.Peanuts);
                        }}
                      >
                        Max: {n.snacks.Peanuts}
                      </a>
                    </div>
                  </q.a.Group>
                  <div className="ModalForm-Submit-Wrapper">{B}</div>
                </q.a>
              </Fs>
            )
          );
        };
      !(function (e) {
        (e[(e.TeamDropdown = 0)] = "TeamDropdown"),
          (e[(e.PlayerDropdown = 1)] = "PlayerDropdown"),
          (e[(e.ModDropdown = 2)] = "ModDropdown"),
          (e[(e.PositionDropdown = 3)] = "PositionDropdown"),
          (e[(e.RatingDropdown = 4)] = "RatingDropdown"),
          (e[(e.ItemDropdown = 5)] = "ItemDropdown");
      })(Lb || (Lb = {})),
        (function (e) {
          (e[(e.Batting = 0)] = "Batting"),
            (e[(e.Pitching = 1)] = "Pitching"),
            (e[(e.Defense = 2)] = "Defense"),
            (e[(e.Baserunning = 3)] = "Baserunning"),
            (e[(e.Combined = 4)] = "Combined"),
            (e[(e.Overall = 5)] = "Overall");
        })(Rb || (Rb = {})),
        (function (e) {
          (e[(e.Lineup = 0)] = "Lineup"),
            (e[(e.Rotation = 1)] = "Rotation"),
            (e[(e.ShadowLineup = 2)] = "ShadowLineup"),
            (e[(e.ShadowRotation = 3)] = "ShadowRotation");
        })(Db || (Db = {}));
      var Qb = function (e) {
        var t = Object(ks.useToasts)().addToast,
          a = Object(r.useContext)(M.context),
          n = a.user,
          i = a.setUser,
          o = Object(c.f)(),
          m = Object(r.useContext)(Op.context),
          A = Object(r.useContext)(xo.context),
          d = Object(r.useContext)(eg.context),
          g = Object(r.useState)(0),
          p = Object(s.a)(g, 2),
          E = p[0],
          v = p[1],
          b = Object(r.useState)(!1),
          w = Object(s.a)(b, 2),
          y = w[0],
          B = w[1],
          O = Object(c.h)(),
          I = O.voteType,
          S = O.entityId,
          k = Object(r.useState)({ id: "", title: "", description: "", info: [] }),
          N = Object(s.a)(k, 2),
          T = N[0],
          x = N[1],
          P = Object(r.useState)(void 0),
          L = Object(s.a)(P, 2),
          R = L[0],
          D = L[1],
          F = Object(r.useState)([]),
          Q = Object(s.a)(F, 2),
          j = Q[0],
          V = Q[1],
          W = Object(r.useState)([]),
          U = Object(s.a)(W, 2),
          G = U[0],
          H = U[1],
          Y = Object(r.useState)([]),
          z = Object(s.a)(Y, 2),
          X = z[0],
          J = z[1],
          Z = Object(r.useState)([]),
          K = Object(s.a)(Z, 2),
          _ = K[0],
          $ = K[1],
          ee = Object(r.useState)(""),
          te = Object(s.a)(ee, 2),
          ae = te[0],
          re = te[1],
          le = Object(r.useState)(""),
          ie = Object(s.a)(le, 2),
          oe = ie[0],
          se = ie[1],
          ce = Object(r.useState)(""),
          ue = Object(s.a)(ce, 2),
          me = ue[0],
          Ae = ue[1],
          de = Object(r.useState)(""),
          fe = Object(s.a)(de, 2),
          he = fe[0],
          ge = fe[1],
          pe = Object(r.useState)([]),
          Ee = Object(s.a)(pe, 2),
          ve = Ee[0],
          be = Ee[1],
          we = Object(r.useState)(""),
          ye = Object(s.a)(we, 2),
          Be = ye[0],
          Oe = ye[1],
          Ie = Object(r.useState)([]),
          Se = Object(s.a)(Ie, 2),
          Ce = Se[0],
          ke = Se[1],
          Ne = Object(r.useState)(""),
          Te = Object(s.a)(Ne, 2),
          xe = Te[0],
          Pe = Te[1],
          Me = Object(r.useState)([]),
          Le = Object(s.a)(Me, 2),
          Re = Le[0],
          De = Le[1],
          Fe = Object(r.useState)(""),
          Qe = Object(s.a)(Fe, 2),
          je = Qe[0],
          Ve = Qe[1],
          We = Object(r.useState)([]),
          Ue = Object(s.a)(We, 2),
          Ge = Ue[0],
          He = Ue[1],
          Ye = Object(r.useState)(""),
          ze = Object(s.a)(Ye, 2),
          Xe = ze[0],
          Je = ze[1];
        Object(r.useEffect)(function () {
          "" === T.id &&
            ("0" === I &&
              x(
                m.decrees.find(function (e) {
                  return e.id === S;
                })
              ),
            "1" === I &&
              x(
                m.blessings.find(function (e) {
                  return e.id === S;
                })
              ),
            "2" === I &&
              x(
                m.wills.find(function (e) {
                  return e.id === S;
                })
              ));
        }, []),
          Object(r.useEffect)(
            function () {
              if ("2" === I) {
                (function () {
                  var e = Object(h.a)(
                    f.a.mark(function e() {
                      var t, a;
                      return f.a.wrap(function (e) {
                        for (;;)
                          switch ((e.prev = e.next)) {
                            case 0:
                              return (t = ""), n.favoriteTeam && (t = n.favoriteTeam), (e.next = 4), pA(t);
                            case 4:
                              void 0 !== (a = e.sent) && D(a);
                            case 6:
                            case "end":
                              return e.stop();
                          }
                      }, e);
                    })
                  );
                  return function () {
                    return e.apply(this, arguments);
                  };
                })()();
                var e = 1,
                  t = n.favoriteTeam ? n.favoriteTeam : "";
                T.info.forEach(function (a, r) {
                  if (a.type === Lb.TeamDropdown)
                    j === [] || void 0 === j || j.length < 1
                      ? V(QA(A, a, t, !0))
                      : (G === [] || void 0 === G || G.length < 1) && H(QA(A, a, t, !0));
                  else if (a.type === Lb.PlayerDropdown) {
                    if ("myTeam" === a.filters.leagueLocation && void 0 === a.filters.equivalence) {
                      var l = n.favoriteTeam ? n.favoriteTeam : "";
                      qe(l, a.filters.position, e, a.filters.hasMods);
                    }
                    e += 1;
                  } else if (a.type === Lb.ModDropdown && void 0 !== a.filters.mods) {
                    var i = [];
                    u.collection.map(function (e) {
                      a.filters.mods.includes(e.id) && i.push(e);
                    }),
                      be(i);
                  } else if (a.type === Lb.PositionDropdown) {
                    var o = (function (e) {
                      var t = [];
                      ("batter" !== e && "all" !== e && "any" !== e) || t.push({ id: Db.Lineup, name: "Lineup" });
                      ("pitcher" !== e && "all" !== e && "any" !== e) || t.push({ id: Db.Rotation, name: "Rotation" });
                      ("shadowBatter" !== e && "shadows" !== e && "any" !== e) ||
                        t.push({ id: Db.ShadowLineup, name: "Shadows Lineup" });
                      ("shadowPitcher" !== e && "shadows" !== e && "any" !== e) ||
                        t.push({ id: Db.ShadowRotation, name: "Shadows Rotation" });
                      return t;
                    })(a.filters.position);
                    ke(o);
                  } else if (a.type === Lb.RatingDropdown) {
                    var s = (function (e) {
                      var t = [];
                      (e === Rb.Batting || e >= 4) && t.push({ id: Rb.Batting, name: "Batting" });
                      (e === Rb.Pitching || e >= 4) && t.push({ id: Rb.Pitching, name: "Pitching" });
                      (e === Rb.Baserunning || e >= 4) && t.push({ id: Rb.Baserunning, name: "Baserunning" });
                      (e === Rb.Defense || e >= 4) && t.push({ id: Rb.Defense, name: "Defense" });
                      return t;
                    })(a.filters.ratings);
                    De(s);
                  } else if (a.type === Lb.ItemDropdown && "inputTeam" !== a.filters.leagueLocation) {
                    var c;
                    _e(
                      a.filters.leagueLocation,
                      a.filters.position,
                      null !== (c = n.favoriteTeam) && void 0 !== c ? c : ""
                    );
                  }
                });
              }
            },
            [T]
          ),
          Object(r.useEffect)(
            function () {
              "2" === I &&
                T.info.forEach(function (e, t) {
                  if (e.type === Lb.PlayerDropdown && "idolsBoard" === e.filters.leagueLocation) {
                    var a = [];
                    d.topIdols.forEach(function (e) {
                      return a.push(e.id);
                    }),
                      Ke(a, t + 1);
                  }
                });
            },
            [d]
          ),
          Object(r.useEffect)(
            function () {
              var e = "all",
                t = "inLeague",
                a = !0;
              T.info.map(function (n, r) {
                if (n.type !== Lb.PlayerDropdown || "inputTeam" !== n.filters.leagueLocation || !n.filters.position)
                  return n.type === Lb.ItemDropdown && "inputTeam" === n.filters.leagueLocation && n.filters.position
                    ? ((t = n.filters.leagueLocation), void (a = !1))
                    : void 0;
                e = n.filters.position;
              }),
                "" !== ae && void 0 !== ae && (a ? qe(ae, e, 1) : _e(t, e, ae));
            },
            [ae]
          ),
          Object(r.useEffect)(
            function () {
              var e = "all",
                t = "inLeague",
                a = !0;
              T.info.map(function (n, r) {
                if (n.type !== Lb.PlayerDropdown || "inputTeam" !== n.filters.leagueLocation || !n.filters.position)
                  return n.type === Lb.ItemDropdown && "inputTeam" === n.filters.leagueLocation && n.filters.position
                    ? ((t = n.filters.leagueLocation), void (a = !1))
                    : void 0;
                e = n.filters.position;
              }),
                "" !== oe && void 0 !== oe && (a ? qe(oe, e, 2) : _e(t, e, oe));
            },
            [oe]
          ),
          Object(r.useEffect)(
            function () {
              T.info.map(function (e, t) {
                if (e.type === Lb.ModDropdown && void 0 === e.filters.mods) {
                  var a = [],
                    r = X.find(function (e) {
                      return e.id === me;
                    });
                  if (void 0 === r) return;
                  u.collection.map(function (e) {
                    r.mods.includes(e.id) && a.push(e);
                  }),
                    be(a);
                }
                if (
                  e.type === Lb.PlayerDropdown &&
                  void 0 !== e.filters.equivalence &&
                  "myTeam" === e.filters.leagueLocation
                ) {
                  var l = n.favoriteTeam ? n.favoriteTeam : "",
                    i = X.find(function (e) {
                      return e.id === me;
                    }),
                    o = i ? i.stars.batting + i.stars.pitching + i.stars.defense + i.stars.baserunning : void 0;
                  qe(l, e.filters.position, 2, void 0, e.filters.equivalence, o);
                }
              });
            },
            [me]
          );
        var Ze = function (e, t) {
            1 === e ? J(t) : 2 === e && $(t);
          },
          qe = (function () {
            var e = Object(h.a)(
              f.a.mark(function e(t, a, n, r, l, i) {
                var o, s, c, u;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (
                          (o = A.teams.find(function (e) {
                            return e.id === t;
                          })),
                          (s = jA(o, a)),
                          (e.next = 4),
                          Ym(s)
                        );
                      case 4:
                        (c = e.sent), (u = VA(o, a, c, r, l, i)), Ze(n, u);
                      case 7:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            );
            return function (t, a, n, r, l, i) {
              return e.apply(this, arguments);
            };
          })(),
          Ke = (function () {
            var e = Object(h.a)(
              f.a.mark(function e(t, a) {
                var n, r;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (e.next = 2), Ym(t);
                      case 2:
                        (n = e.sent),
                          (r = []),
                          n.forEach(function (e) {
                            GA(e) &&
                              r.push({
                                id: e.id,
                                fullName: e.name,
                                mods: e.permAttr,
                                stars: {
                                  batting: e.hittingRating,
                                  pitching: e.pitchingRating,
                                  baserunning: e.baserunningRating,
                                  defense: e.defenseRating,
                                },
                                items: e.items,
                              });
                          }),
                          Ze(a, r);
                      case 6:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            );
            return function (t, a) {
              return e.apply(this, arguments);
            };
          })(),
          _e = (function () {
            var e = Object(h.a)(
              f.a.mark(function e(t, a, n) {
                var r, l, i, o, s;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        return (
                          (r = A.teams.find(function (e) {
                            return e.id === n;
                          })),
                          (l = jA(r, a)),
                          (e.next = 4),
                          Ym(l)
                        );
                      case 4:
                        (i = e.sent),
                          (o = VA(r, a, i, !1, void 0, void 0)),
                          (s = []),
                          o.forEach(function (e) {
                            e.items.forEach(function (t) {
                              s.push({ name: t.name + " (" + e.fullName + ")", id: t.id });
                            });
                          }),
                          He(s);
                      case 9:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            );
            return function (t, a, n) {
              return e.apply(this, arguments);
            };
          })(),
          $e = function (e) {
            var t = e.target.value;
            v(t);
          },
          et = function (e) {
            var t = e.target.value.split(",");
            "1" === t[1] ? re(t[0]) : "2" === t[1] && se(t[0]);
          },
          tt = function (e) {
            var t = e.target.value.split(",");
            "1" === t[1] ? Ae(t[0]) : "2" === t[1] && ge(t[0]);
          },
          at = function (e) {
            var t = e.target.value;
            Oe(t);
          },
          nt = function (e) {
            var t = e.target.value;
            Pe(t);
          },
          rt = function (e) {
            var t = e.target.value;
            Ve(t);
          },
          lt = function (e) {
            var t = e.target.value;
            Je(t);
          },
          it = n.snacks.Votes ? n.snacks.Votes : 0,
          ot = <js />;
        y ||
          (ot = (
            <Vs.a className="ModalForm-Submit" type="submit" variant="success">
              Submit
            </Vs.a>
          ));
        var st = 0,
          ct = 0,
          ut =
            "2" === I ? (
              <l.a.Fragment>
                {T.info.map(function (e) {
                  if (e.type === Lb.TeamDropdown) {
                    if (1 === (st += 1))
                      return (
                        <q.a.Group controlId="team selection">
                          <q.a.Label>{e.description}</q.a.Label>
                          <q.a.Control
                            as="select"
                            onChange={et}
                            className="ModalForm-Dropdown"
                            disabled={!(j.length > 0)}
                          >
                            <option value="" defaultValue={ae} key={-1}>
                              Choose a team.
                            </option>
                            {j.map(function (e, t) {
                              return (
                                <option value={[e.id, 1]} defaultValue={ae} key={t}>
                                  {e.fullName}
                                </option>
                              );
                            })}
                            ;
                          </q.a.Control>
                        </q.a.Group>
                      );
                    if (2 === st)
                      return (
                        <q.a.Group controlId="team selection">
                          <q.a.Label>{e.description}</q.a.Label>
                          <q.a.Control
                            as="select"
                            onChange={et}
                            className="ModalForm-Dropdown"
                            disabled={!(G.length > 0)}
                          >
                            <option value="" defaultValue={oe} key={-1}>
                              Choose a team.
                            </option>
                            {G.map(function (e, t) {
                              return (
                                <option value={[e.id, 2]} defaultValue={oe} key={t}>
                                  {e.fullName}
                                </option>
                              );
                            })}
                            ;
                          </q.a.Control>
                        </q.a.Group>
                      );
                  } else if (e.type === Lb.PlayerDropdown) {
                    if (1 === (ct += 1))
                      return (
                        <q.a.Group controlId="team selection">
                          <q.a.Label>{e.description}</q.a.Label>
                          <q.a.Control
                            as="select"
                            onChange={tt}
                            className="ModalForm-Dropdown"
                            disabled={!(X.length > 0)}
                          >
                            <option value="" defaultValue={me} key={-1}>
                              Choose a player.
                            </option>
                            {X.map(function (e, t) {
                              if (e.id !== he)
                                return (
                                  <option value={[e.id, 1]} defaultValue={me} key={t}>
                                    {e.fullName}
                                  </option>
                                );
                            })}
                            ;
                          </q.a.Control>
                        </q.a.Group>
                      );
                    if (2 === ct && 2 === ct)
                      return (
                        <q.a.Group controlId="team selection">
                          <q.a.Label>{e.description}</q.a.Label>
                          <q.a.Control
                            as="select"
                            onChange={tt}
                            className="ModalForm-Dropdown"
                            disabled={!(_.length > 0)}
                          >
                            <option value="" defaultValue={he} key={-1}>
                              {_.length < 1 ? "No valid players." : "Choose a player."}
                            </option>
                            {_.map(function (e, t) {
                              if (e.id !== me)
                                return (
                                  <option value={[e.id, 2]} defaultValue={he} key={t}>
                                    {e.fullName}
                                  </option>
                                );
                            })}
                            ;
                          </q.a.Control>
                        </q.a.Group>
                      );
                  } else {
                    if (e.type === Lb.ModDropdown)
                      return (
                        <q.a.Group controlId="team selection">
                          <q.a.Label>{e.description}</q.a.Label>
                          <q.a.Control
                            as="select"
                            onChange={at}
                            className="ModalForm-Dropdown"
                            disabled={!(ve.length > 0)}
                          >
                            <option value="" defaultValue={Be} key={-1}>
                              Choose a mod.
                            </option>
                            {ve.map(function (e, t) {
                              return (
                                <option value={e.id} defaultValue={Be} key={t}>
                                  {e.title}
                                </option>
                              );
                            })}
                            ;
                          </q.a.Control>
                        </q.a.Group>
                      );
                    if (e.type === Lb.PositionDropdown)
                      return (
                        <q.a.Group controlId="team selection">
                          <q.a.Label>{e.description}</q.a.Label>
                          <q.a.Control
                            as="select"
                            onChange={nt}
                            className="ModalForm-Dropdown"
                            disabled={!(Ce.length > 0)}
                          >
                            <option value="" defaultValue={xe} key={-1}>
                              Choose a position.
                            </option>
                            {Ce.map(function (e, t) {
                              return (
                                <option value={e.id} defaultValue={xe} key={t}>
                                  {e.name}
                                </option>
                              );
                            })}
                            ;
                          </q.a.Control>
                        </q.a.Group>
                      );
                    if (e.type === Lb.RatingDropdown)
                      return (
                        <q.a.Group controlId="team selection">
                          <q.a.Label>{e.description}</q.a.Label>
                          <q.a.Control
                            as="select"
                            onChange={rt}
                            className="ModalForm-Dropdown"
                            disabled={!(Re.length > 0)}
                          >
                            <option value="" defaultValue={xe} key={-1}>
                              Choose a stat.
                            </option>
                            {Re.map(function (e, t) {
                              return (
                                <option value={e.id} defaultValue={je} key={t}>
                                  {e.name}
                                </option>
                              );
                            })}
                            ;
                          </q.a.Control>
                        </q.a.Group>
                      );
                    if (e.type === Lb.ItemDropdown)
                      return (
                        <q.a.Group controlId="team selection">
                          <q.a.Label>{e.description}?</q.a.Label>
                          <q.a.Control
                            as="select"
                            onChange={lt}
                            className="ModalForm-Dropdown"
                            disabled={!(Ge.length > 0)}
                          >
                            <option value="" defaultValue={Xe} key={-1}>
                              Choose an item.
                            </option>
                            {Ge.map(function (e, t) {
                              return (
                                <option value={e.id} defaultValue={Xe} key={t}>
                                  {e.name}
                                </option>
                              );
                            })}
                            ;
                          </q.a.Control>
                        </q.a.Group>
                      );
                  }
                })}
              </l.a.Fragment>
            ) : null,
          mt =
            null === R || void 0 === R
              ? void 0
              : R.wills.find(function (e) {
                  return e.id === T.id;
                }),
          At = mt ? mt.percent : 0;
        return (
          <Fs {...Object.assign({}, e, { className: "Vote" })}>
            <div className="ModalForm-Header">Cast Your Votes</div>
            <div className="Gift-List">
              <div className="Player-Team-Line" style={{ justifyContent: "center" }}>
                <div className="Player-Team-Name">
                  <strong>{T.title}</strong>
                </div>
              </div>
              {T.description}
            </div>
            <q.a
              className="ModalForm-Form"
              onSubmit={function (e) {
                if ((e.preventDefault(), B(!0), E > it))
                  return t("Max vote is ".concat(it, "!"), { appearance: "error" }), void B(!1);
                if (E < 1) return t("You must cast at least 1 vote!", { appearance: "error" }), void B(!1);
                var a = {};
                if ("2" === I) {
                  var r = 0,
                    l = 0,
                    s = 0,
                    c = 0,
                    u = 0,
                    m = 0;
                  if (
                    (T.info.forEach(function (e) {
                      e.type === Lb.TeamDropdown && (l += 1),
                        e.type === Lb.PlayerDropdown && (r += 1),
                        e.type === Lb.ModDropdown && (s += 1),
                        e.type === Lb.PositionDropdown && (c += 1),
                        e.type === Lb.RatingDropdown && (u += 1),
                        e.type === Lb.ItemDropdown && (m += 1);
                    }),
                    2 === l && ("" === ae || "" === oe))
                  )
                    return t("You must select both teams!", { appearance: "error" }), void B(!1);
                  if (1 === l && "" === ae) return t("You must select a team!", { appearance: "error" }), void B(!1);
                  if (2 === r && ("" === me || "" === he))
                    return t("You must select both players!", { appearance: "error" }), void B(!1);
                  if (2 === r && me === he)
                    return t("You cannot select the same player twice!", { appearance: "error" }), void B(!1);
                  if (1 === r && "" === me) return t("You must select a player!", { appearance: "error" }), void B(!1);
                  if (1 === s && "" === Be) return t("You must select a mod!", { appearance: "error" }), void B(!1);
                  if (1 === c && "" === xe)
                    return t("You must select a location!", { appearance: "error" }), void B(!1);
                  if (1 === u && "" === je) return t("You must select a rating!", { appearance: "error" }), void B(!1);
                  if (1 === m && "" === Xe) return t("You must select an item!", { appearance: "error" }), void B(!1);
                  "" !== ae && (a = Object(C.a)(Object(C.a)({}, a), {}, { teamTarget0: ae })),
                    "" !== oe && (a = Object(C.a)(Object(C.a)({}, a), {}, { teamTarget1: oe })),
                    "" !== me && (a = Object(C.a)(Object(C.a)({}, a), {}, { playerTarget0: me })),
                    "" !== he && (a = Object(C.a)(Object(C.a)({}, a), {}, { playerTarget1: he })),
                    "" !== Be && (a = Object(C.a)(Object(C.a)({}, a), {}, { modTarget0: Be })),
                    "" !== xe && (a = Object(C.a)(Object(C.a)({}, a), {}, { locationTarget0: xe })),
                    "" !== je && (a = Object(C.a)(Object(C.a)({}, a), {}, { ratingTarget0: je })),
                    "" !== Xe && (a = Object(C.a)(Object(C.a)({}, a), {}, { itemTarget0: Xe }));
                }
                a = Object(C.a)(Object(C.a)({}, a), {}, { team1: n.favoriteTeam });
                var A = { amount: E, entityId: S, voteType: I, data: a };
                km("/api/vote", JSON.stringify(A))
                  .then(function (e) {
                    if (e.status && 200 === e.status && e.ok) {
                      var a = Object(C.a)({}, n.snacks),
                        r = n.snackOrder;
                      (a[ne.VOTES] = a[ne.VOTES] - E),
                        a[ne.VOTES] <= 0 && (delete a[ne.VOTES], (r = ne.RemoveFromSnackOrder(ne.VOTES, n.snackOrder))),
                        (n.snacks = a),
                        (n.snackOrder = r),
                        (n.trackers.VOTES_CAST += E),
                        i(Object(C.a)({}, n)),
                        t("Vote Placed", { appearance: "success" }),
                        o.goBack();
                    } else
                      e.json().then(function (e) {
                        t(e.error || "Error", { appearance: "error" });
                      });
                  })
                  .finally(
                    Object(h.a)(
                      f.a.mark(function e() {
                        return f.a.wrap(function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                B(!1);
                              case 1:
                              case "end":
                                return e.stop();
                            }
                        }, e);
                      })
                    )
                  );
              }}
            >
              {ut}
              <q.a.Group className="ModalForm-Form-Amount" controlId="amount">
                <q.a.Label>
                  How many votes do you want to cast for this {"0" === I ? "Decree" : "1" === I ? "Blessing" : "Will"}?
                </q.a.Label>
                <div
                  className={
                    "ModalForm-Form-Inputs-Amount" + (n.lightMode ? " ModalForm-Form-Inputs-Amount-LightMode" : "")
                  }
                >
                  <div className="ModalForm-Ticket-Wrapper">
                    <ya className="ModalForm-Ticket-Icon" />
                    {n.snacks.Votes}
                  </div>
                  <q.a.Control type="number" value={E} onChange={$e} />
                  <q.a.Control
                    type="range"
                    className="ModalForm-Range"
                    min={1}
                    max={Math.min(n.snacks.Votes, it)}
                    value={E}
                    onChange={$e}
                    step="1"
                  />
                  <a
                    className={
                      "ModalForm-Form-Inputs-Amount-Max" +
                      (n.lightMode ? " ModalForm-Form-Inputs-Amount-Max-LightMode" : "")
                    }
                    onClick={function (e) {
                      e.preventDefault(), v(Math.min(n.snacks.Votes, it));
                    }}
                  >
                    Max Vote: {it}
                  </a>
                </div>
              </q.a.Group>
              {void 0 !== n.snacks.Forbidden_Knowledge_Access && "2" === I ? (
                <l.a.Fragment>
                  <div className="Team-Construction-Renovation-Percent-Line">
                    <div
                      className="Team-Construction-Renovation-Percent-Line-Fill"
                      style={{ width: "".concat(At, "%") }}
                    />
                  </div>
                  <div className="Team-Construction-Renovation-Percent">{At}% of Your Team's Will Votes</div>
                </l.a.Fragment>
              ) : null}
              <div className="ModalForm-Submit-Wrapper">{ot}</div>
            </q.a>
          </Fs>
        );
      };
      a(201);
      function jb(e) {
        var t,
          a = e.path,
          n = Object(r.useContext)(xo.context),
          i = Object(r.useContext)(M.context).user,
          o = Object(r.useContext)(S.context);
        if (void 0 === n || void 0 === o) return null;
        var s = [],
          c = [],
          u = [],
          m = [];
        if (
          (o.postseasons.forEach(function (e) {
            var t;
            if (
              void 0 !== (null === e || void 0 === e || null === (t = e.playoffs) || void 0 === t ? void 0 : t.winner)
            ) {
              var a = n.teams.find(function (t) {
                var a;
                return (
                  t.id === (null === e || void 0 === e || null === (a = e.playoffs) || void 0 === a ? void 0 : a.winner)
                );
              });
              void 0 !== a && (s.push(a), c.push(a.secondaryColor), u.push(a.fullName), m.push(e.playoffs.name));
            }
          }),
          s.length <= 0)
        )
          return null;
        for (var A = void 0 !== o.sim ? o.sim.season : -1, d = [], f = 0; f < s.length; f++)
          d.push(
            void 0 !== s[f] ? (
              <div className="League-Info-Body">
                Your {m[f]} Champions are the{" "}
                <span className="League-Info-Callout" style={Ao(i, s[f])}>
                  {u[f]}
                </span>
                !
              </div>
            ) : null
          );
        return (
          <div>
            <div className="GodsDay">
              <div className="GodsDay-Header">Blaseball Gods' Day</div>
              {d}
              <Kh dateString={null === (t = o.sim) || void 0 === t ? void 0 : t.earlseasonDate} />
              <div className="GodsDay-Body">
                Welcome to Blaseball. Season {A + 2} will begin on June 14th at 8am PST. Check the{" "}
                <a href="https://twitter.com/blaseball">Twitter</a> or <a href="https://discord.gg/3uFgJhu">Discord</a>{" "}
                for updates!
              </div>
            </div>
            <Yh />
            {"/leaderboard" === a ? <tg /> : <ig />}
          </div>
        );
      }
      a(202);
      var Vb,
        Wb = function () {
          return (
            <div className="Privacy">
              <h1 className="Privacy-Header">Privacy Policy</h1>
              <div className="Privacy-Content">
                <h2 className="Privacy-Subheader">Introduction</h2>
                <p>
                  The Game Band ("<b>The Game Band</b>" or "<b>We</b>") respect your privacy and are committed to
                  protecting it through our compliance with this policy. This policy describes:
                </p>
                <ul>
                  <li>
                    The types of information we may collect or that you may provide when you download, install, access,
                    or use the Game, “BLASEBALL” (the “<b>Game</b>"); and
                  </li>
                  <li>
                    Our practices for collecting, using, maintaining, protecting, and disclosing that information.
                  </li>
                </ul>
                <p>
                  This policy applies only to information we collect on the Game and in email, text, and other
                  electronic communications sent through or in connection with the Game. This policy DOES NOT apply to
                  information that:
                </p>
                <ul>
                  <li>We collect offline, or</li>
                  <li>You provide to or is collected by any third party (see Third-Party Information Collection).</li>
                </ul>
                <p>
                  Third parties may have their own privacy policies, which we encourage you to read before providing
                  information on or through them.
                </p>
                <p>
                  Please read this policy carefully to understand our policies and practices regarding your information
                  and how we will treat it. If you do not agree with our policies and practices, do not download,
                  register with, or use the Game. By downloading, registering with, or using this Game you agree to this
                  privacy policy. This policy may change from time to time (see Changes to Our Privacy Policy). Your
                  continued use of this Game after we revise this policy means you accept those changes, so please check
                  the policy periodically for updates.
                </p>
                <h2 className="Privacy-Subheader">Children Under the Age of 13</h2>
                <p>
                  The Game is not intended for children under 13 years of age, and we do not knowingly collect personal
                  information from children under 13. If we learn we have collected or received personal information
                  from a child under 13 without verification of parental consent, we will delete that information. If
                  you believe we might have any information from or about a child under 13, please contact us at{" "}
                  <a href="mailto:legal@thegameband.com">legal@thegameband.com</a>.
                </p>
                <h2 className="Privacy-Subheader">Information We Collect and How We Collect It</h2>
                <p>We collect several types of information from and about users of the Game, from two sources:</p>
                <ul>
                  <li>You, either directly when provide it to us or automatically when you use the Game; and</li>
                  <li>Third parties</li>
                </ul>
                <h3 className="Privacy-Miniheader">
                  Information You Provide to Us <b>Directly</b>
                </h3>
                <p>
                  When using the Game, you may provide us with certain types of information which may include,
                  information:
                </p>
                <ul>
                  <li>
                    By which you may be personally identified, such as your name, email address, or any other identifier
                    by which you may be contacted online or offline ("<b>personal information</b>").
                  </li>
                  <li>About your internet connection, the equipment you use to access the Game, and usage details.</li>
                </ul>
                <p>This information includes: </p>
                <ul>
                  <li>Information you provide us when you create an account.</li>
                  <li>
                    Information provided by your device, by which to identify it, when you download and use the Game.
                  </li>
                  <li>
                    Records and copies of your correspondence (including email addresses and phone numbers), if you
                    contact us.
                  </li>
                </ul>
                <h3 className="Privacy-Miniheader">Information Collected Automatically When You Use The Game</h3>
                <p>When you download, access, and use the Game it may use technology to automatically collect:</p>
                <ul>
                  <li>
                    <b>Usage Details.</b> When you access and use the Game, we may automatically collect certain details
                    of your access to and use of the Game including traffic data, logs, communication data and the
                    resources that you access and use on or through the Game.
                  </li>
                  <li>
                    <b>Device or Computer Information.</b> We may collect information about your computer, mobile device
                    and internet connection, including the device's unique device identifier, IP address, operating
                    system, browser type, mobile network information, and the device's telephone number.
                  </li>
                </ul>
                <p>
                  If you do not want us to collect this information do not use or download the Game or delete it from
                  your device.
                </p>
                <h2 className="Privacy-Subheader">Information Collection Technologies</h2>
                <p>The technologies we use for automatic information collection may include:</p>
                <ul>
                  <li>
                    <b>Cookies (or mobile cookies).</b> A cookie is a small file placed on your computer or smartphone.
                    It may be possible to refuse to accept mobile cookies by activating the appropriate setting on your
                    smartphone. However, if you select this setting you may be unable to access certain parts of the
                    Game
                  </li>
                </ul>
                <h2 className="Privacy-Subheader">How We Use Your Information</h2>
                <p>
                  We use information that we collect about you or that you provide to us, including any personal
                  information, to:
                </p>
                <ul>
                  <li>
                    Provide you with the Game, and any other information, products or services that you specifically
                    request from us.
                  </li>
                  <li>Provide you with news and information about us and the Game.</li>
                  <li>Improve and optimize the Game and our users’ experiences.</li>
                  <li>Fulfill any other purpose for which you provide it.</li>
                  <li>
                    Carry out our obligations and enforce our rights arising from any contracts entered into between you
                    and us, including for billing and collection.
                  </li>
                  <li>
                    Notify you when Game updates are available, and of changes to any products or services we offer or
                    provide though it.
                  </li>
                </ul>
                <p>
                  The usage information we collect helps us to improve the Game and to deliver a better and more
                  personalized experience by enabling us to:
                </p>
                <ul>
                  <li>Estimate our audience size, demographics and usage patterns.</li>
                  <li>
                    Store information about your preferences, allowing us to tailor our services according to your
                    individual interests.
                  </li>
                  <li>Recognize you when you use the Game.</li>
                </ul>
                <p>For more information, see Your Rights and Choices below.</p>
                <h2 className="Privacy-Subheader">Disclosure of Your Information</h2>
                <p>
                  We may disclose aggregated information about our users, and information that does not identify any
                  individual or device without restriction.{" "}
                </p>
                <p>In addition, we may disclose personal information that we collect, or you provide:</p>
                <ul>
                  <li>To our subsidiaries and affiliates.</li>
                  <li>To contractors, service providers, and other third parties we use to support our business.</li>
                  <li>
                    To a buyer or other successor in the event of a merger, divestiture, restructuring, reorganization,
                    dissolution, or other sale or transfer of some or all of The Game Band's assets, whether as a going
                    concern or as part of bankruptcy, liquidation, or similar proceeding, in which personal information
                    held by The Game Band about the Game users is among the assets transferred.
                  </li>
                  <li>To fulfill the purpose for which you provide it. </li>
                  <li>For any other purpose disclosed by us when you provide the information.</li>
                  <li>With your consent.</li>
                  <li>
                    To comply with any court order, law, or legal process, including to respond to any government or
                    regulatory request.
                  </li>
                  <li>
                    To enforce our rights arising from any contracts entered into between you and us, including our
                    Terms of Service.
                  </li>
                  <li>
                    If we believe disclosure is necessary or appropriate to protect the rights, property, or safety of
                    The Game Band, our customers or others.
                  </li>
                </ul>
                <h2 className="Privacy-Subheader">Where, How and How Long We Store Your Information</h2>
                <p>
                  We store your information securely in the United States. By using the Game, you authorize us to
                  transfer, store and process your information in the United States and any other country where we
                  operate.
                </p>
                <p>
                  We keep your information only for the length of time necessary to fulfill the purposes for which the
                  information was collected. For example, if you have an account with us, we will retain the personal
                  information associated with your account for the lifetime of your account. If applicable laws require
                  us to store your information for a longer period, then we will keep your information for the period of
                  time required by law. When it is no longer necessary or required for us to retain your data, we will
                  delete it.
                </p>
                <h2 className="Privacy-Subheader">Your Rights and Choices</h2>
                <h3 className="Privacy-Miniheader">
                  <b>Data Protection Rights</b>
                </h3>
                The laws of the European Economic Area and other territories provide their residents with certain data
                protection rights. If you are resident of the European Economic Area, these are your rights:
                <ul>
                  <li>
                    <b>The right to access</b> - You have the right to request The Game Band provide you with copies of
                    your personal data. We may charge you a small fee for this service.
                  </li>
                  <li>
                    <b>The right to rectification</b> - You have the right to request that The Game Band correct any
                    information you believe is inaccurate. You also have the right to request The Game Band to complete
                    information you believe is incomplete.
                  </li>
                  <li>
                    <b>The right to be forgotten</b> - You have the right to request that The Game Band erase your
                    personal data, under certain conditions.
                  </li>
                  <li>
                    <b>The right to restrict processing</b> - You have the right to request that The Game Band restrict
                    the processing of your personal data, under certain conditions.
                  </li>
                  <li>
                    <b>The right to object to processing</b> - You have the right to object to our processing of your
                    personal data, under certain conditions.
                  </li>
                  <li>
                    <b>The right to data portability</b> - You have the right to request that The Game Band transfer the
                    data that we have collected to another organization, or directly to you, under certain conditions.
                  </li>
                </ul>
                <p>
                  If you make a request, we have one month to respond to you. If you would like to exercise any of these
                  rights, please contact us at our email:{" "}
                  <a href="mailto:legal@thegameband.com">legal@thegameband.com</a>.
                </p>
                <h3 className="Privacy-Miniheader">
                  <b>Additional Data Choices</b>
                </h3>
                <p>
                  We strive to provide you with choices regarding the personal information you provide to us. This
                  section describes mechanisms we provide for you to control certain uses and disclosures of over your
                  information.
                </p>
                <ul>
                  <li>
                    <b>Tracking Technologies.</b> You can set your browser to refuse all or some browser cookies, or to
                    alert you when cookies are being sent. If you disable or refuse cookies or block the use of other
                    tracking technologies, some parts of the Game may then be inaccessible or not function properly.
                  </li>
                  <li>
                    <b>Promotion by The Game Band.</b> If you do not want us to use your email address to promote our
                    own or third parties' products or services, you can opt-out by clicking the unsubscribe link at the
                    bottom of our emails and following the instructions provided.{" "}
                  </li>
                </ul>
                <div className="Privacy-Subheader">Third-Party Information Collection</div>
                <p>
                  Some content in the Game is served by third-parties. When you use the Game or its content, certain
                  third parties may use automatic information collection technologies to collect information about you
                  or your device.
                </p>
                <p>These third parties include:</p>
                <ul>
                  <li>
                    <b>App marketplaces where you download or sign into the Game</b>
                  </li>
                  <ul>
                    <li>
                      To Learn more about the Apple and how they collect and use your information, please visit{" "}
                      <a href="https://www.apple.com/legal/privacy/en-ww/">
                        https://www.apple.com/legal/privacy/en-ww/
                      </a>
                    </li>
                    <li>
                      To Learn more about Google Play and how they collect and use your information, please visit:{" "}
                      <a href="https://play.google.com/about/privacy-security-deception/">
                        https://play.google.com/about/privacy-security-deception/
                      </a>
                    </li>
                    <li>
                      To learn more about the Facebook and how they collect and use your information, please visit:{" "}
                      <a href="https://www.facebook.com/privacy/explanation">
                        https://www.facebook.com/privacy/explanation
                      </a>
                    </li>
                    <li>
                      To learn more about the Google and how they collect and use your information, please visit:{" "}
                      <a href="https://policies.google.com/privacy?hl=en-US">
                        https://policies.google.com/privacy?hl=en-US
                      </a>
                    </li>
                  </ul>
                  <li>
                    <b>Wireless network providers</b>
                  </li>
                  <li>
                    <b>Analytics companies</b>
                  </li>
                  <ul>
                    <li>
                      To learn more about Google Analytics and how they collect and use your information, please visit{" "}
                      <a href="https://marketingplatform.google.com/about/">
                        https://marketingplatform.google.com/about/
                      </a>{" "}
                      or{" "}
                      <a href="https://support.google.com/analytics/answer/181881?hl=en">
                        https://support.google.com/analytics/answer/181881?hl=en
                      </a>
                      .
                    </li>
                  </ul>
                  <li>
                    <b>Your mobile device manufacturer</b>
                  </li>
                  <li>
                    <b>Your mobile service provider</b>
                  </li>
                  <li>
                    <b>
                      Our Social Media Accounts - when you interact with us on our social media accounts, the
                      information collected is governed by the privacy policies of the relevant social media platform.
                    </b>
                  </li>
                  <ul>
                    <li>
                      To learn more about the Twitter and how they collect and use your information, please visit:{" "}
                      <a href="https://twitter.com/en/privacy">https://twitter.com/en/privacy</a>
                    </li>
                    <li>
                      To learn more about the Facebook and how they collect and use your information, please visit:{" "}
                      <a href="https://www.facebook.com/privacy/explanation">
                        https://www.facebook.com/privacy/explanation
                      </a>
                    </li>
                    <li>
                      To learn more about the Instagram and how they collect and use your information, please visit:{" "}
                      <a href="https://help.instagram.com/519522125107875">
                        https://help.instagram.com/519522125107875
                      </a>
                    </li>
                  </ul>
                </ul>
                <p>
                  Note: the websites above are provided solely for your convenience and The Game Band is not responsible
                  for updating them or ensuring their validity or correctness.{" "}
                </p>
                <p>
                  These third parties may use tracking technologies to collect information about you when you use the
                  Game. The information they collect may be associated with your personal information or they may
                  collect information, including personal information, about your online activities over time and across
                  different websites, apps, and other online services websites. They may use this information to provide
                  you with interest-based (behavioral) advertising or other targeted content.{" "}
                </p>
                <p>
                  We do not control these third parties' tracking technologies or how they may be used. We do not
                  control third parties' collection or use of your information to serve interest-based advertising.
                  However, these third parties may provide you with ways to choose not to have your information
                  collected or used in this way. If you have any questions about an advertisement or other targeted
                  content, you should contact the responsible provider directly.
                </p>
                <h2 className="Privacy-Subheader">Changes to Our Privacy Policy</h2>
                <p>
                  We may update our privacy policy from time to time. If we make material changes to how we treat our
                  users' personal information, we will post the new privacy policy on this page with a notice that the
                  privacy policy has been updated.
                </p>
                <p>
                  The date the privacy policy was last revised is identified at the top of the page. You are responsible
                  for periodically visiting this privacy policy to check for any changes.
                </p>
                <h2 className="Privacy-Subheader">Contact Information</h2>
                <p>To ask questions or comment about this privacy policy and our privacy practices, contact us at:</p>
                <div className="Privacy-Contact">
                  The Game Band
                  <br />
                  448 S Hill St. Suite 301
                  <br />
                  Los Angeles, CA 90013
                </div>
              </div>
            </div>
          );
        },
        Ub =
          (a(203),
          function () {
            l.a.Fragment;
            return (
              <div className="TermsOfService">
                <h1 className="TermsOfService-Header">Terms of Service</h1>
                <div className="TermsOfService-Content">
                  <p>
                    <b>Last Updated: </b> 06/10/2021
                  </p>
                  <br />
                  <p>
                    Welcome to The Game Band! These Terms of Service (<b>“Terms”</b>) govern your use of our game,
                    BLASEBALL (referred to herein as the <b>“Game”</b>).
                  </p>
                  <p>
                    The Game is a copyrighted work belonging to The Game Band (<b>“The Game Band”</b>, <b>“us”</b>,{" "}
                    <b>“our”</b>, and <b>“we”</b>). Certain features of the Game may be subject to additional
                    guidelines, terms, or rules, which will be posted in the Game in connection with such features. All
                    such additional terms, guidelines, and rules are incorporated by reference into these Terms.
                  </p>
                  <p>
                    These Terms of Service (these <b>“Terms”</b>) set forth the legally binding terms and conditions
                    that govern your use of the Game.
                  </p>
                  <p>
                    BY DOWNLOADING/INSTALLING/USING/ACCESSING THE GAME, YOU (A) ACKNOWLEDGE THATYOU HAVE READ AND
                    UNDERSTAND THESE TERMS; (B) REPRESENT THAT YOU MEET THE ELIGIBLITY REQUIREMENTS IN SECTION 1.1
                    BELOW; AND (C) ACCEPT THIS AGREEMENT AND AGREE THAT YOU ARE LEGALLY BOUND BY ITS TERMS.
                  </p>
                  <p>
                    IF YOU DO NOT MEET THE ELIGIBLITY REQIREMENTS IN SECTION 1.1 BELOW OR IF YOU DO NOT AGREE TO THESE
                    TERMS, DO NOT DOWNLOAD, INSTALL OR USE THE GAME (IF YOU HAVE ALREADY DOWNLOADED THE GAME, PLEASE
                    DELETE IT FROM YOUR DEVICE) AND DO NOT USE OR ACCESS THE SITE.
                  </p>
                  <p>
                    These terms require the use of arbitration (Section 15.2) on an individual basis to resolvedisputes,
                    rather than jury trials or class actions, and also limit the remedies available to youin the event
                    of a dispute.
                  </p>
                  <ol className="numbered">
                    <li>
                      <b>Access to the Game.</b>
                      <ol className="numbered">
                        <li>
                          <b>
                            Eligibility to Play. YOU MAY ONLY USE THE GAME IF YOU MEET THE ELIGIBILITY REQUIREMENTS
                            BELOW AND AGREE TO AND COMPLY WITH ALL OF TERMS:
                          </b>
                          <ol className="alphabetical">
                            <li>
                              You must be 18 or older and you must agree to all of these Terms (including our Privacy
                              Policy), or
                            </li>
                            <li>
                              If you are younger than 18:
                              <ol className="romans">
                                <li>
                                  <b>(in the EU)</b> If you are residing in the EU then you must be at least 16 or older
                                  and both you and your parent or legal guardian must agree to these Terms (including
                                  our Privacy Policy) on your behalf and you must play the Game under their supervision;
                                  or
                                </li>
                                <li>
                                  <b>(outside of the EU)</b> If you do not reside in the EU then you must be at least 13
                                  years old or older and both you and your parent or legal guardian must agree to these
                                  Terms (including our Privacy Policy) on your behalf and you must play the Game under
                                  their supervision.
                                </li>
                              </ol>
                            </li>
                          </ol>
                        </li>
                        <li>
                          <b>License.</b> If you meet all of the eligibility requirements in Section 1.1 above, then
                          subject to the rest of these Terms, The Game Band grants you a limited non-transferable,
                          non-exclusive, revocable, limited license to:
                          <ol className="alphabetical">
                            <li>
                              download and install the Game for your personal, non-commercial use on a single gaming
                              device owned or otherwise controlled by you (“<b>Device</b>”) strictly in accordance with
                              the Game's documentation; and{" "}
                            </li>
                            <li>to use and access the Site solely for your own personal use.</li>
                          </ol>
                        </li>
                        <li>
                          <b>Certain Restrictions.</b> The rights granted to you in these Terms are subject to the
                          following restrictions: (a) you shall not license, sell, rent, lease, transfer, assign,
                          distribute, host, or otherwise commercially exploit the Game, whether in whole or in part, or
                          any content displayed in the Game; (b) you shall not modify, translate, adapt, make derivative
                          works of, improve, disassemble, decode, reverse compile or reverse engineer or otherwise
                          attempt to derive or gain access to the source code of any part of the Game; (c) you shall not
                          access the Game in order to build a similar or competitive website, product, game or service;
                          (d) except as expressly stated herein, no part of the Game may be copied, reproduced,
                          distributed, republished, downloaded, displayed, posted or transmitted in any form or by any
                          means; (e) you shall not use Game if we have suspended or banned you from using it; (f) you
                          shall not create or use more than one Game account; (g) you shall not permit anyone else to
                          use your account and (h) you shall not remove, disable, circumvent or otherwise create or
                          implement any workaround to any copy protection, rights management, or security features in or
                          protecting the Game. Unless otherwise indicated, any future release, update, or other addition
                          to functionality of the Game shall be subject to these Terms. All copyright and other
                          proprietary notices in the Game (or on any content displayed in the Game) must be retained on
                          all copies thereof.
                        </li>
                        <li>
                          <b>Modification.</b> The Game Band reserves the right, at any time, to modify, suspend, or
                          discontinue the Game (in whole or in part) with or without notice to you. You agree that The
                          Game Band will not be liable to you or to any third party for any modification, suspension, or
                          discontinuation of the Game or any part thereof.
                        </li>
                        <li>
                          <b>No Support or Maintenance.</b> You acknowledge and agree that The Game Band will have no
                          obligation to provide you with any support or maintenance in connection with the Game.
                        </li>
                        <li>
                          <b>Ownership.</b> You acknowledge and agree that the Game is provided under license, and not
                          sold, to you. You do not acquire any ownership interest in the Game under these Terms, or any
                          other rights thereto other than to use the Game in accordance with these Terms. The Game Band
                          and its licensors and service providers reserve and retain their entire right, title, and
                          interest in and to the Game, including all copyrights, trademarks, and other intellectual
                          property rights therein or relating thereto, except as expressly granted to you in these
                          Terms. Neither these Terms (nor your access to the Game) transfers to you or any third party
                          any rights, title or interest in or to such intellectual property rights, except for the
                          limited access rights expressly set forth in Section 1.1. The Game Band and its suppliers
                          reserve all rights not granted in these Terms. There are no implied licenses granted under
                          these Terms.
                        </li>
                      </ol>
                    </li>
                    <li>
                      <b>Accounts.</b>
                      <ol className="numbered">
                        <li>
                          <b>Account Creation.</b> In order to use certain features of the Game, you must register for
                          an account (“<b>Account</b>”) and provide certain information about yourself as prompted by
                          the account registration form (including but not limited to your full name, email address and
                          a unique password). You may not create more than one account. You represent and warrant that:
                          (a) you meet all the eligibility requirements in Section 1.1, (b) you are creating your
                          account for your own personal use and only you will access and use your account, (c) all
                          required registration information you submit is truthful and accurate; (d) you will maintain
                          the accuracy of such information; (e) you will not create more than one account; (f) you
                          reside in the United States or, if you reside outside the United States, that your use of the
                          Game will comply with applicable law in your jurisdiction; (g) you will not use the Game
                          during any period in which we suspend your account; and (h) if we ban you from playing the
                          Game and/or terminate your account, you will not use the Game. You may delete your Account at
                          any time, for any reason, by following the instructions in the Game. The Game Band may suspend
                          or terminate your Account in accordance with Section 14.
                        </li>
                        <li>
                          <b>Account Responsibilities.</b> You are responsible for maintaining the confidentiality of
                          your Account login information and are fully responsible for all activities that occur under
                          your Account. You agree to immediately notify The Game Band of any unauthorized use, or
                          suspected unauthorized use of your Account or any other breach of security. The Game Band
                          cannot and will not be liable for any loss or damage arising from your failure to comply with
                          the above requirements.
                        </li>
                      </ol>
                    </li>
                    <li>
                      <b>Feedback.</b> If you provide The Game Band with any feedback or suggestions regarding the Game
                      (“<b>Feedback</b>”), you hereby assign to The Game Band all rights in such Feedback and agree that
                      The Game Band shall have the right to use and fully exploit such Feedback and related information
                      in any manner it deems appropriate. The Game Band will treat any Feedback you provide to The Game
                      Band as non-confidential and non-proprietary. You agree that you will not submit to The Game Band
                      any information or ideas that you consider to be confidential or proprietary.
                    </li>
                    <li>
                      <b>Collection of Your Information.</b> You acknowledge that when you download, install, access or
                      use the Game, The Game Band may use automatic means (including, for example, cookies and web
                      beacons) to collect information about your device and about your use of the Game. You also may be
                      required to provide certain information about yourself as a condition to downloading, installing,
                      or using the Game or certain of its features or functionality. All information we collect through
                      or in connection with this Game is subject to our{" "}
                      <a href="https://blaseball.com/privacy">Privacy Policy</a>. You may not use the Game unless you
                      review and consent to the terms of our Privacy Policy. By downloading, installing, accessing,
                      using, and providing information to or through this Game, you consent to all actions taken by us
                      with respect to your information in compliance with the Privacy Policy.
                    </li>
                    <li>
                      <b>Device Requirements.</b> The Game can only be used via certain devices, like your smartphone, a
                      list of compatible devices is provided the third-party application marketplaces (“
                      <b>Marketplaces</b>”) where the Game can be downloaded. Your Device must also meet the system
                      requirements listed on the Site and/or the Marketplaces
                    </li>
                    <li>
                      <b>Free Content.</b> Upon downloading the Game, users will have access to certain features of the
                      game (“<b>Free Features</b>”). The Game Band may add, remove, modify or otherwise change the free
                      features at any time with or without notice to you.
                    </li>
                    <li>
                      <b>Updates.</b> The Game Band may from time to time in its sole discretion develop and provide
                      Game updates, which may include upgrades, bug fixes, patches, other error corrections, and/or new
                      features (collectively, including related documentation, “<b>Updates</b>”). Updates may also
                      modify or delete in their entirety certain features and functionality. You agree that The Game
                      Band has no obligation to provide any Updates or to continue to provide or enable any particular
                      features or functionality. Based on your Device settings, when your Device is connected to the
                      internet either:
                      <ol className="alphabetical">
                        <li>the Game will automatically download and install all available Updates; or</li>
                        <li>you may receive notice of or be prompted to download and install available Updates.</li>
                      </ol>
                      You will promptly download and install all Updates and acknowledge and agree that the Game or
                      portions thereof may not properly operate should you fail to do so. You further agree that all
                      Updates will be deemed part of the Game and be subject to all terms and conditions of these Terms.
                    </li>
                    <li>
                      <b>Virtual Goods and Virtual Money.</b>
                      <ol className="numbered">
                        <li>
                          The Game may include virtual currencies such as virtual coins or items or services for use
                          with the Game (collectively “<b>Virtual Items</b>"). Users may be able to earn Virtual Items
                          within the Game. You agree that once earned, Virtual Items have no monetary value and can
                          never be exchanged for real money, real goods or real services from us or anyone else. You
                          also agree that you will obtain the Virtual Items only from us, and not from any third party.
                          You agree that Virtual Items are not transferrable from one person to another or one account
                          to another, and you will not transfer or attempt to transfer any Virtual Items to any other
                          person or account.
                        </li>
                        <li>
                          You agree that any Virtual Items that you earn, are not owned by you, but that you instead
                          have been granted, by us, a limited personal revocable license to use such Virtual Items. You
                          agree that any balance of Virtual Items does not reflect any stored value.
                        </li>
                        <li>
                          You understand and agree that we are not responsible for any problems or losses associated
                          with your marketplace account, including without limitation, problems transferring Virtual
                          Items from one device to another, restoring Virtual Items from a lost or damaged device to a
                          different device, or any other losses of Virtual Items. The risk of loss of Virtual Items is
                          transferred to you at the time that you earn such Virtual Item.
                        </li>
                        <li>
                          We reserve the right to control, regulate, change or remove any Virtual Items without any
                          liability to you.
                        </li>
                        <li>
                          We may revise the requirements for earning Virtual Items through the Game at any time. We may
                          limit the total amount of Virtual Items that may be earned at any one time, and/or limit the
                          total amount of Virtual Items that may be held in your account in the aggregate. You are only
                          allowed to earn Virtual Items from us or our authorized partners through the Game, and not in
                          any other way.
                        </li>
                        <li>
                          If we suspend or terminate your account in accordance with these terms you will lose any
                          Virtual Items that you may have accumulated, and we will not compensate you for this loss.
                        </li>
                      </ol>
                    </li>
                    <li>
                      <b>Indemnification.</b> You agree to indemnify and hold The Game Band (and its officers,
                      employees, and agents) harmless, including costs and attorneys’ fees, from any claim or demand
                      made by any third party due to or arising out of (a) your use of the Game, (b) your violation of
                      these Terms, or (c) your violation of applicable laws or regulations. The Game Band reserves the
                      right, at your expense, to assume the exclusive defense and control of any matter for which you
                      are required to indemnify us, and you agree to cooperate with our defense of these claims. You
                      agree not to settle any matter without the prior written consent of The Game Band. The Game Band
                      will use reasonable efforts to notify you of any such claim, action or proceeding upon becoming
                      aware of it.
                    </li>
                    <li>
                      <b>Third Party Materials.</b> The Game may contain links to third-party websites and services,
                      including through third party advertising (collectively, “<b>Third-Party Materials</b>”). Such
                      Third Party Materials are not under the control of The Game Band, and The Game Band is not
                      responsible for any Third Party Materials. The Game Band provides access to these Third Party
                      Materials only as a convenience to you, and does not review, approve, monitor, endorse, warrant,
                      or make any representations with respect to Third Party Materials. You acknowledge and agree that
                      The Game Band is not responsible for Third Party Materials, including their accuracy,
                      completeness, timeliness, validity, copyright compliance, legality, decency, quality, or any other
                      aspect thereof. The Game Band does not assume and will not have any liability or responsibility to
                      you or any other person or entity for any Third Party Materials. Third Party Materials and links
                      thereto are provided solely as a convenience to you, and you access and use them entirely at your
                      own risk and subject to such third parties' terms and conditions. You should make whatever
                      investigation you feel necessary or appropriate before proceeding with any transaction in
                      connection with such Third Party Materials.
                    </li>
                    <li>
                      <b>Release.</b> You hereby release and forever discharge The Game Band (and our officers,
                      employees, agents, successors, and assigns) from, and hereby waive and relinquish, each and every
                      past, present and future dispute, claim, controversy, demand, right, obligation, liability, action
                      and cause of action of every kind and nature (including personal injuries, death, and property
                      damage), that has arisen or arises directly or indirectly out of, or that relates directly or
                      indirectly to, the Game (including any interactions with, or act or omission of, other Game users
                      or any Third Party Materials). IF YOU ARE A CALIFORNIA RESIDENT, YOU HEREBY WAIVE CALIFORNIA CIVIL
                      CODE SECTION 1542 IN CONNECTION WITH THE FOREGOING, WHICH STATES: “A GENERAL RELEASE DOES NOT
                      EXTEND TO CLAIMS WHICH THE CREDITOR DOES NOT KNOW OR SUSPECT TO EXIST IN HIS OR HER FAVOR AT THE
                      TIME OF EXECUTING THE RELEASE, WHICH IF KNOWN BY HIM OR HER MUST HAVE MATERIALLY AFFECTED HIS OR
                      HER SETTLEMENT WITH THE DEBTOR.”
                    </li>
                    <li>
                      <b>Disclaimers.</b> THE GAME IS PROVIDED TO YOU "AS IS" AND WITH ALL FAULTS AND DEFECTS WITHOUT
                      WARRANTY OF ANY KIND. TO THE MAXIMUM EXTENT PERMITTED UNDER APPLICABLE LAW, THE GAME BAND, ON ITS
                      OWN BEHALF AND ON BEHALF OF ITS AFFILIATES AND ITS AND THEIR RESPECTIVE LICENSORS AND SERVICE
                      PROVIDERS, EXPRESSLY DISCLAIMS ALL WARRANTIES, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE,
                      WITH RESPECT TO THE GAME, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
                      PARTICULAR PURPOSE, TITLE, QUIET ENJOYMENT AND NON-INFRINGEMENT, AND WARRANTIES THAT MAY ARISE OUT
                      OF COURSE OF DEALING, COURSE OF PERFORMANCE, USAGE, OR TRADE PRACTICE. WITHOUT LIMITATION TO THE
                      FOREGOING, THE GAME BAND PROVIDES NO WARRANTY OR UNDERTAKING, AND MAKES NO REPRESENTATION OF ANY
                      KIND THAT THE GAME WILL MEET YOUR REQUIREMENTS, ACHIEVE ANY INTENDED RESULTS, BE COMPATIBLE, OR
                      WORK WITH ANY OTHER SOFTWARE, GAMES, SYSTEMS, OR SERVICES, OPERATE WITHOUT INTERRUPTION, MEET ANY
                      PERFORMANCE OR RELIABILITY STANDARDS, OR BE ERROR-FREE, ACCURATE, RELIABLE, FREE FROM HARMFUL
                      CODE, COMPLETE, LEGAL, SAFE, ABAILABLE ON AN UNTERUPTED BASIS OR THAT ANY ERRORS OR DEFECTS CAN OR
                      WILL BE CORRECTED.
                      <div className="spacer">
                        SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO THE ABOVE EXCLUSION MAY
                        NOT APPLY TO YOU. SOME JURISDICTIONS DO NOT ALLOW LIMITATIONS ON HOW LONG AN IMPLIED WARRANTY
                        LASTS, SO THE ABOVE LIMITATION MAY NOT APPLY TO YOU.
                      </div>
                    </li>
                    <li>
                      <b>Limitation on Liability.</b> TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT
                      WILL THE GAME BAND OR ITS AFFILIATES, OR ANY OF ITS OR THEIR RESPECTIVE LICENSORS OR SERVICE
                      PROVIDERS, HAVE ANY LIABILITY ARISING FROM OR RELATED TO YOUR USE OF OR INABILITY TO USE THE GAME
                      FOR:
                      <ol className="alphabetical" style={{ counterSet: "letters 2" }}>
                        <li>
                          PERSONAL INJURY, PROPERTY DAMAGE, LOST PROFITS, COST OF SUBSTITUTE GOODS OR SERVICES, LOSS OF
                          DATA, LOSS OF GOODWILL, BUSINESS INTERRUPTION, COMPUTER OR DEVICE FAILURE OR MALFUNCTION, OR
                          ANY OTHER CONSEQUENTIAL, INCIDENTAL, INDIRECT, EXEMPLARY, SPECIAL, OR PUNITIVE DAMAGES.
                        </li>
                        <li>
                          DIRECT DAMAGES IN AMOUNTS THAT IN THE AGGREGATE EXCEED THE AMOUNT ACTUALLY PAID BY YOU FOR THE
                          GAME OR VIRTUAL ITEMS.
                          <div className="spacer">
                            THE FOREGOING LIMITATIONS WILL APPLY WHETHER SUCH DAMAGES ARISE OUT OF BREACH OF CONTRACT,
                            TORT (INCLUDING NEGLIGENCE), OR OTHERWISE AND REGARDLESS OF WHETHER SUCH DAMAGES WERE
                            FORESEEABLE OR THE GAME BAND WAS ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. SOME
                            JURISDICTIONS DO NOT ALLOW CERTAIN LIMITATIONS OF LIABILITY SO SOME OR ALL OF THE ABOVE
                            LIMITATIONS OF LIABILITY MAY NOT APPLY TO YOU.
                          </div>
                          <div className="spacer">
                            SOME JURISDICTIONS DO NOT ALLOW THE LIMITATION OR EXCLUSION OF LIABILITY FOR INCIDENTAL OR
                            CONSEQUENTIAL DAMAGES, SO THE ABOVE LIMITATION OR EXCLUSION MAY NOT APPLY TO YOU.{" "}
                          </div>
                        </li>
                      </ol>
                    </li>
                    <li>
                      <b>Term and Termination.</b> Subject to this Section, these Terms will remain in full force and
                      effect while you use the Game. We may suspend or terminate your rights to use the Game (including
                      your Account) at any time for any reason at our sole discretion, including for any use of the Game
                      in violation of these Terms. Upon termination of your rights under these Terms, your Account and
                      right to access and use the Game will terminate immediately. You understand that any termination
                      of your Account may involve deletion of all information and Virtual Items associated with your
                      Account from our live databases. The Game Band will not have any liability whatsoever to you for
                      any termination of your rights under these Terms, including for termination of your Account or
                      deletion of your information. Even after your rights under these Terms are terminated, the
                      following provisions of these Terms will remain in effect: Sections 1.2, Section 3 and Sections 6
                      through 15.
                    </li>
                    <li>
                      <b>General</b>
                      <ol className="numbered">
                        <li>
                          <b>Changes.</b> These Terms are subject to occasional revision, and if we make any substantial
                          changes, we may notify you by sending you an e-mail to the last e-mail address you provided to
                          us (if any), and/or by prominently posting notice of the changes in the Game. You are
                          responsible for providing us with your most current e-mail address. In the event that the last
                          e-mail address that you have provided us is not valid, or for any reason is not capable of
                          delivering to you the notice described above, our dispatch of the e-mail containing such
                          notice will nonetheless constitute effective notice of the changes described in the notice.
                          Any changes to these Terms will be effective upon the earlier of thirty (30) calendar days
                          following our dispatch of an e-mail notice to you (if applicable) or thirty (30) calendar days
                          following our posting of notice of the changes in the Game. These changes will be effective
                          immediately for new users of the Game. Continued use of the Game following notice of such
                          changes shall indicate your acknowledgement of such changes and agreement to be bound by the
                          terms and conditions of such changes.
                        </li>
                        <li>
                          <b>
                            Dispute Resolution.{" "}
                            <i>
                              Please read this Arbitration Agreement carefully. It is part of your contract with The
                              Game Band and affects your rights. It contains procedures for MANDATORY BINDING
                              ARBITRATION AND A CLASS ACTION WAIVER.
                            </i>
                          </b>
                          <ol className="alphabetical">
                            <li>
                              <i>Applicability of Arbitration Agreement.</i> All claims and disputes (excluding claims
                              for injunctive or other equitable relief as set forth below) in connection with the Terms
                              or the use of any product or service provided by The Game Band that cannot be resolved
                              informally or in small claims court shall be resolved by binding arbitration on an
                              individual basis under the terms of this Arbitration Agreement. Unless otherwise agreed
                              to, all arbitration proceedings shall be held in English. This Arbitration Agreement
                              applies to you and The Game Band, and to any subsidiaries, affiliates, agents, employees,
                              predecessors in interest, successors, and assigns, as well as all authorized or
                              unauthorized users or beneficiaries of services or goods provided under the Terms.
                            </li>
                            <li>
                              <i>Notice Requirement and Informal Dispute Resolution.</i> Before either party may seek
                              arbitration, the party must first send to the other party a written Notice of Dispute (“
                              <b>Notice</b>”) describing the nature and basis of the claim or dispute, and the requested
                              relief. A Notice to The Game Band should be sent to The Game Band attn.: Terms of Service
                              Dispute at the address listed in Section 15.12 (or such other address as may be provided
                              by The Game Band for this purpose. After the Notice is received, you and The Game Band may
                              attempt to resolve the claim or dispute informally. If you and The Game Band do not
                              resolve the claim or dispute within thirty (30) days after the Notice is received, either
                              party may begin an arbitration proceeding. The amount of any settlement offer made by any
                              party may not be disclosed to the arbitrator until after the arbitrator has determined the
                              amount of the award, if any, to which either party is entitled.
                            </li>
                            <li>
                              <i>Arbitration.</i> You agree that any dispute, claim or controversy arising hereunder or
                              relating in any way to these Terms and not informally resolved shall be settled by binding
                              arbitration in the Commonwealth of Massachusetts, in accordance with the commercial
                              arbitration rules of Judicial Arbitration and Mediation Services (“<b>JAMS</b>”). The
                              arbitrator shall issue a written decision specifying the basis for the award made. The
                              party filing a claim or counterclaim in the arbitration proceeding shall pay the
                              deposit(s) determined by JAMS with respect to such claim or counterclaim. All other costs
                              associated with the arbitration and imposed by JAMS shall be paid as determined by the
                              arbitrator(s) and, in absence of such determination, equally by each party to the
                              arbitration. In addition, unless the arbitrator awards payment of reasonable attorney and
                              other fees to a party, each party to the arbitration shall be responsible for its own
                              attorneys' fees and other professional fees incurred in connection with the arbitration.
                              Determinations of the arbitrator will be final and binding upon the parties to the
                              arbitration, and judgment upon the award rendered by the arbitrator may be entered in any
                              court having jurisdiction, or application may be made to such court for a judicial
                              acceptance of the award and an order of enforcement, as the case may be. The arbitrator
                              shall apply the substantive law of the Commonwealth of Massachusetts, without giving
                              effect to its conflict of laws rules.
                            </li>
                            <li>
                              <i>Waiver of Jury Trial.</i> THE PARTIES HEREBY WAIVE THEIR CONSTITUTIONAL AND STATUTORY
                              RIGHTS TO GO TO COURT AND HAVE A TRIAL IN FRONT OF A JUDGE OR A JURY, instead electing
                              that all claims and disputes shall be resolved by arbitration under this Arbitration
                              Agreement. Arbitration procedures are typically more limited, more efficient and less
                              costly than rules applicable in a court and are subject to very limited review by a court.
                              In the event any litigation should arise between you and The Game Band in any state or
                              federal court in a suit to vacate or enforce an arbitration award or otherwise, YOU AND
                              THE GAME BAND WAIVE ALL RIGHTS TO A JURY TRIAL, instead electing that the dispute be
                              resolved by a judge.
                            </li>
                            <li>
                              <i>Waiver of Class or Consolidated Actions.</i> ALL CLAIMS AND DISPUTES WITHIN THE SCOPE
                              OF THIS ARBITRATION AGREEMENT MUST BE ARBITRATED OR LITIGATED ON AN INDIVIDUAL BASIS AND
                              NOT ON A CLASS BASIS, AND CLAIMS OF MORE THAN ONE CUSTOMER OR USER CANNOT BE ARBITRATED OR
                              LITIGATED JOINTLY OR CONSOLIDATED WITH THOSE OF ANY OTHER CUSTOMER OR USER.
                            </li>
                            <li>
                              <i>Confidentiality.</i> All aspects of the arbitration proceeding, including but not
                              limited to the award of the arbitrator and compliance therewith, shall be strictly
                              confidential. The parties agree to maintain confidentiality unless otherwise required by
                              law. This paragraph shall not prevent a party from submitting to a court of law any
                              information necessary to enforce this Agreement, to enforce an arbitration award, or to
                              seek injunctive or equitable relief.
                            </li>
                            <li>
                              <i>Severability.</i> If any part or parts of this Arbitration Agreement are found under
                              the law to be invalid or unenforceable by a court of competent jurisdiction, then such
                              specific part or parts shall be of no force and effect and shall be severed and the
                              remainder of the Agreement shall continue in full force and effect.
                            </li>
                            <li>
                              <i>Right to Waive.</i> Any or all of the rights and limitations set forth in this
                              Arbitration Agreement may be waived by the party against whom the claim is asserted. Such
                              waiver shall not waive or affect any other portion of this Arbitration Agreement.
                            </li>
                            <li>
                              <i>Emergency Equitable Relief.</i> Notwithstanding the foregoing, either party may seek
                              emergency equitable relief before a state or federal court in order to maintain the status
                              quo pending arbitration. A request for interim measures shall not be deemed a waiver of
                              any other rights or obligations under this Arbitration Agreement.
                            </li>
                            <li>
                              <i>Claims Not Subject to Arbitration.</i> Notwithstanding the foregoing, claims of
                              defamation, violation of the Computer Fraud and Abuse Act, and infringement or
                              misappropriation of the other party’s patent, copyright, trademark or trade secrets shall
                              not be subject to this Arbitration Agreement.
                            </li>
                            <li>
                              <i>Courts.</i> In any circumstances where the foregoing Arbitration Agreement permits the
                              parties to litigate in court, the parties hereby agree to submit to the personal
                              jurisdiction of the courts located within the State of California, for such purpose
                            </li>
                          </ol>
                        </li>
                        <li>
                          <b>Export.</b> The Game may be subject to U.S. export control laws and may be subject to
                          export or import regulations in other countries. You agree not to export, reexport, or
                          transfer, directly or indirectly, any U.S. technical data acquired from The Game Band, or any
                          products utilizing such data, in violation of the United States export laws or regulations.
                        </li>
                        <li>
                          <b>Disclosures.</b> The Game Band is located at the address in Section 15.12. If you are a
                          California resident, you may report complaints to the Complaint Assistance Unit of the
                          Division of Consumer Product of the California Department of Consumer Affairs by contacting
                          them in writing at 400 R Street, Sacramento, CA 95814, or by telephone at (800) 952-5210.
                        </li>
                        <li>
                          <b>Electronic Communications.</b> The communications between you and The Game Band use
                          electronic means, whether you use the Game or send us emails, or whether The Game Band posts
                          notices in the Game or communicates with you via email. For contractual purposes, you (a)
                          consent to receive communications from The Game Band in an electronic form; and (b) agree that
                          all terms and conditions, agreements, notices, disclosures, and other communications that The
                          Game Band provides to you electronically satisfy any legal requirement that such
                          communications would satisfy if it were be in a hardcopy writing. The foregoing does not
                          affect your non-waivable rights.
                        </li>
                        <li>
                          <b>Severability.</b> If any provision of this Agreement is illegal or unenforceable under
                          applicable law, the remainder of the provision will be amended to achieve as closely as
                          possible the effect of the original term and all other provisions of this Agreement will
                          continue in full force and effect.
                        </li>
                        <li>
                          <b>Governing Law.</b> This Agreement is governed by and construed in accordance with the
                          internal laws of the State of California without giving effect to any choice or conflict of
                          law provision or rule.
                        </li>
                        <li>
                          <b>Limitation of Time for Claims.</b> ANY CAUSE OF ACTION OR CLAIM YOU MAY HAVE ARISING OUT OF
                          OR RELATING TO THIS AGREEMENT OR THE GAME MUST BE COMMENCED WITHIN ONE (1) YEAR AFTER THE
                          CAUSE OF ACTION ACCRUES OTHERWISE SUCH CAUSE OF ACTION OR CLAIM IS PERMANENTLY BARRED.
                        </li>
                        <li>
                          <b>Waiver.</b> No failure to exercise, and no delay in exercising, on the part of either
                          party, any right or any power hereunder will operate as a waiver thereof, nor will any single
                          or partial exercise of any right or power hereunder preclude further exercise of that or any
                          other right hereunder. In the event of a conflict between this Agreement and any applicable
                          purchase or other terms, the terms of this Agreement will govern.
                        </li>
                        <li>
                          <b>Entire Terms.</b> These Terms constitute the entire agreement between you and us regarding
                          the use of the Game. Our failure to exercise or enforce any right or provision of these Terms
                          shall not operate as a waiver of such right or provision. The section titles in these Terms
                          are for convenience only and have no legal or contractual effect. The word “including” means
                          “including without limitation”. If any provision of these Terms is, for any reason, held to be
                          invalid or unenforceable, the other provisions of these Terms will be unimpaired, and the
                          invalid or unenforceable provision will be deemed modified so that it is valid and enforceable
                          to the maximum extent permitted by law. Your relationship to The Game Band is that of an
                          independent contractor, and neither party is an agent or partner of the other. These Terms,
                          and your rights and obligations herein, may not be assigned, subcontracted, delegated, or
                          otherwise transferred by you without The Game Band’ prior written consent, and any attempted
                          assignment, subcontract, delegation, or transfer in violation of the foregoing will be null
                          and void. The Game Band may freely assign these Terms. The terms and conditions set forth in
                          these Terms shall be binding upon assignees.
                        </li>
                        <li>
                          <b>Copyright/Trademark Information.</b> Copyright © 2020 The Game Band. All rights reserved.
                          All trademarks, logos and service marks (“<b>Marks</b>”) displayed in the Game are our
                          property or the property of other third parties. You are not permitted to use these Marks
                          without our prior written consent or the consent of such third party which may own the Marks.
                        </li>
                        <li>
                          <b>Contact Information:</b>
                        </li>
                      </ol>
                    </li>
                    <div className="indented">
                      The Game Band
                      <br />
                      448 S Hill St. Suite 301
                      <br />
                      Los Angeles, CA 90013
                      <br />
                      <a href="mailto:legal@thegameband.com">legal@thegameband.com</a>
                    </div>
                  </ol>
                </div>
              </div>
            );
          }),
        Gb = ["title", "titleId"];
      function Hb() {
        return (Hb =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function Yb(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function zb(e, t) {
        var a = e.title,
          n = e.titleId,
          l = Yb(e, Gb);
        return (
          <svg
            {...Hb(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 959,
                height: 1065,
                viewBox: "0 0 959 1065",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Vb || (Vb = <image id="Ball" x={87} y={75} width={784} height={911} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var Xb = r.forwardRef(zb);
      a.p, a(204);
      function Jb(e) {
        return void 0 !== e.element ? e.element : <h2 className="Stubs-Header">{e.text}</h2>;
      }
      var Zb = function (e) {
          var t,
            a = e.path,
            n = Object(r.useContext)(S.context),
            i = (void 0 !== n.sim && void 0 !== n.sim.season && n.sim.season, null);
          switch (a) {
            case "/leaderboard":
              i = <tg />;
              break;
            case "/league":
              i = <ig />;
          }
          return (
            <div>
              <Jb
                element={
                  <div className="Stubs-All">
                    <div className="Stubs-Header">The Season is Over!</div>
                    <Kh dateString={null === (t = n.sim) || void 0 === t ? void 0 : t.nextPhaseTime} />
                    <div className="Stubs-Body">The Wild Card teams will be chosen soon.</div>
                  </div>
                }
                text="Offseason. Check for updates on the Discord!"
              />
              <Yh />
              {i}
            </div>
          );
        },
        qb = { notes: [] },
        Kb = Object(r.createContext)(qb),
        _b = function (e) {
          var t = e.children,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(r.useState)([]),
            c = Object(s.a)(o, 2),
            u = c[0],
            m = (c[1], Object(ks.useToasts)().addToast),
            A = (Object(r.useRef)(void 0), Object(r.useRef)()),
            d = Object(r.useCallback)(
              Object(h.a)(
                f.a.mark(function e() {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (
                            fetch("/api/getUserRewards", { credentials: "include" }).then(
                              (function () {
                                var e = Object(h.a)(
                                  f.a.mark(function e(t) {
                                    var a;
                                    return f.a.wrap(function (e) {
                                      for (;;)
                                        switch ((e.prev = e.next)) {
                                          case 0:
                                            if (!t || 200 !== t.status || !t.ok) {
                                              e.next = 5;
                                              break;
                                            }
                                            return (e.next = 3), t.json();
                                          case 3:
                                            (a = e.sent) &&
                                              (void 0 !== a.coins && (n.coins = a.coins),
                                              void 0 !== a.lightMode && (n.lightMode = a.lightMode),
                                              a.peanuts && (n.snacks.Peanuts = a.peanuts),
                                              i(Object(C.a)({}, n)),
                                              a.toasts &&
                                                a.toasts.forEach(function (e) {
                                                  m(np.DoParse(e), { appearance: "info", autoDismiss: !0 });
                                                }));
                                          case 5:
                                          case "end":
                                            return e.stop();
                                        }
                                    }, e);
                                  })
                                );
                                return function (t) {
                                  return e.apply(this, arguments);
                                };
                              })()
                            ),
                            e.abrupt("return", null)
                          );
                        case 2:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              ),
              []
            ),
            g = (function () {
              var e = Object(h.a)(
                f.a.mark(function e() {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (e.next = 2), d();
                        case 2:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function () {
                return e.apply(this, arguments);
              };
            })();
          Object(r.useEffect)(function () {
            g(), void 0 === A.current && (A.current = setInterval(g, 3e5));
          }, []),
            Object(r.useEffect)(
              function () {
                if (u)
                  for (var e = 0; e < u.length; e++) {
                    var t = u[e];
                    m(t.message, { appearance: "info", autoDismiss: !0 });
                  }
              },
              [u]
            );
          var p = { notes: u };
          return <Kb.Provider value={p}>{t}</Kb.Provider>;
        };
      _b.context = Kb;
      var $b = _b,
        ew = a(65),
        tw = function () {
          return (
            <div className="ModalItem-Content">
              <hm entity="" source={cm.Book} defaultCategory={4} defaultSort={um.NewestFirst} showCategory={!1} />
            </div>
          );
        };
      function aw() {
        var e = Object(r.useState)(0),
          t = Object(s.a)(e, 2),
          a = t[0],
          n = t[1];
        Object(r.useContext)(M.context).user;
        return (
          <div className="TheBook-All">
            <h2 className="TheBook-Header">The Book of Blaseball</h2>
            <div className="TheBook-Subheader" role="text">
              The Game of{" "}
              <span className="TheBook-Subheader-Group">
                <so str="||||||||||||||||||" /> and <so str="|||||||||||||" />
              </span>
            </div>
            {(function () {
              var e = [
                <button
                  role="link"
                  aria-selected={0 === a}
                  className={
                    0 === a
                      ? "TheBook-Navigation-Button TheBook-Navigation-Button-Current"
                      : "TheBook-Navigation-Button"
                  }
                  onClick={function () {
                    n(0);
                  }}
                >
                  Page 1
                </button>,
                <button
                  role="link"
                  aria-selected={1 === a}
                  className={
                    1 === a
                      ? "TheBook-Navigation-Button TheBook-Navigation-Button-Current"
                      : "TheBook-Navigation-Button"
                  }
                  onClick={function () {
                    n(1);
                  }}
                >
                  Page 2
                </button>,
                <button
                  role="link"
                  aria-selected={2 === a}
                  className={
                    2 === a
                      ? "TheBook-Navigation-Button TheBook-Navigation-Button-Current"
                      : "TheBook-Navigation-Button"
                  }
                  onClick={function () {
                    n(2);
                  }}
                >
                  Feed
                </button>,
                <button
                  role="link"
                  aria-selected={-1 === a}
                  className={
                    -1 === a
                      ? "TheBook-Navigation-Button TheBook-Navigation-Button-Current"
                      : "TheBook-Navigation-Button"
                  }
                  onClick={function () {
                    n(-1);
                  }}
                >
                  Glossary
                </button>,
              ];
              return <nav className="TheBook-Navigation">{e}</nav>;
            })()}
            <nw page={a} />
            <Lh />
          </div>
        );
      }
      function nw(e) {
        switch (e.page) {
          case 0:
            return <rw />;
          case 1:
            return <lw />;
          case 2:
            return <tw />;
          case -1:
            return <iw />;
        }
        return null;
      }
      function rw() {
        return (
          <l.a.Fragment>
            <h3 className="TheBook-Subheader" aria-label="Page 1: Official Rulebook">
              Official Rulebook
            </h3>
            <div role="section" aria-labelledby="section1">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section1">
                1. Seasons
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. Each season of Blaseball shall last 99 games. In the case of <so str="the Ultimate ||||||||" />,
                seasons shall <so str="|||||||||||||||||, or at least until the ||||||| have ||||||||." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. Every day of Blaseball shall last one <so str="|||||" /> hour.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. If any games last longer than one <so str="|||||" /> hour, a Spillover shall occur, and all games
                shall be delayed until the next <so str="|||||" /> hour. In the case of a game lasting two{" "}
                <so str="|||||" /> hours, the{" "}
                <so str="entire season should be ||||||||| and both teams should be ||||||||| ||||||||| |||||||| |||| for |||||| |||||||||||." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                d. A season should start on a "Monday" and therefore conclude on a "Friday".
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                e. The Standings of a season of Blaseball shall be decided by two factors: Wins and Divine Favor.{" "}
                <so str="Nothing else matters" />. The Team with the higher number of Wins shall be considered higher in
                the Standings. If two Teams are tied, the tie-breaker will be decided by their positions on the Divine
                Favor list.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                f. Party Time: A Team will enter Party Time if receiving 1 Win per remaining game would not land them in
                the Postseason.
              </div>
            </div>
            <div role="section" aria-labelledby="section2">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section2">
                2. Postseasons
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                AMENDMENT. As per the Wild Card Decree, the Postseason has been Amended as follows:
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. Each Postseason of Blaseball shall consist of 10 teams.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. The 2 Division Winners from each Sub-League will receive a Postseason Birth.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. The next 2 Runnerups from each Sub-League will receive a Postseason Birth based on regular season
                standings, regardless of Division.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                d. At the end of the regular season, 1 Wild Card will be drawn at random from the remaining teams in
                each Sub-League to receive a Postseason Birth.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                e. All Postseason teams will be removed from Party Time, if applicable.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                f. Following the Wild Card draw, all Postseason teams will be seeded 1-5 in their Sub-League according
                to regular season standings.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                g. The 4 and 5 Seeds shall play in the Wild Card Round, a 2-Win series.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                h. All other Postseason series shall be 3-Win series.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                i. Postseason series are decided when, at the conclusion of a game, a Team has reached the specified Win
                count, and has more Wins than their opponent.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                j. The home team in each Postseason game shall be{" "}
                <so str="the |||||||||||, if the |||||||||||||||||||." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                k. The first two Rounds should begin after the end of the regular season. One full <so str="|||||" />{" "}
                hour shall be skipped, and then the Wild Card Round shall begin at the top of the next available{" "}
                <so str="|||||" /> hour.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                l. The Postseason shall continue early on a "Saturday" and conclude within the same day. If the
                Postseason lasts into the following day, no{" "}
                <so str="||||| shall be ||||||||, and both teams shall be |||||||||| |||||||| ||||||||||||." />
              </div>
            </div>
            <div role="section" aria-labelledby="section3">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section3">
                3. Elections
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. Participants should be allowed to Vote on the rules, rosters, and other effects of the game of
                Blaseball.{" "}
                <so str="The content of such Votes shall be ||||||||||||||| ||||||||||||||||||| ||||||||| entertainment" />
                .
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                <span>b. Decrees will be decided by popular vote.</span>
                <so str="It is understood that ||||||||||||||||| will be a ||||||||||| |||||||||||, and the others shall ||||||||||||||| ||||||||||||||| ||||||||| |||||||||||||." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. Blessings will be decided by a raffle. <so str="It is understood that each of these" /> should give
                players <so str="||||||||||||| |||||||||||" /> control of the league. All won Blessings shall be
                processed & applied in order of the standings.{" "}
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. End of Season Events may occur at the end of an Election, before Decrees and Blessings are processed.{" "}
                <so str="Anything can happen here" />. Good luck.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                d. Elections should end on a "Sunday," although Votes should be able to be cast on any day of the week.
              </div>
            </div>
            <div role="section" aria-labelledby="section4">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section4">
                4. Teams
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. Teams are a <so str="|||||||||| || players" /> bound by <so str="| |||||| |||||||||| |||| ||||||" />.
                Names, colors, icons, and slogans are{" "}
                <so str="||||||||||| |||||||||||| || ||| |||| |||||| || ||||| |||||||||||||" /> in order for the Fans{" "}
                <so str="to find them palatable." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. A Team's roster is built of four sections: Lineup, Rotation, <so str="Bench" />, and{" "}
                <so str="Bullpen" />. The Lineup and Rotation make up a Team's Active Roster, and the <so str="Bench" />{" "}
                and <so str="Bullpen" /> make up a Team's Shadows. A Team's Shadows cannot be accessed unless directly
                specified, or through direct selection from a public interface.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. Teams may choose <so str="|| |||| ||||| ||||| || ||||||||, a |||||| |||||" /> to contain and
                represent their <so str="||||||" />. The Fans may shape <so str="|||| |||||| as they" /> uncover and
                decipher <so str="their ||||' ||||||." />
              </div>
            </div>
            <div role="section" aria-labelledby="section5">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section5">
                5. Playing the Game
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. The game of Blaseball should be played between two teams.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. Each game should take place <so str="at the home team's stadium" /> on the immaterial plane.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. Weather: <so str="The home team's stadium should determine the weather." /> In the case that{" "}
                <so str="||||||||||||||||||||" />, a Solar Eclipse shall last until <so str="||||||||||||||||||||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                d. There are <so str="two positions" /> in Blaseball, <so str="||||||||||||||||||||." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                e. When a team is on Defense,{" "}
                <so str="all of the team's ||||||| will stand ||||||||| out in the field. Doesn't really matter where." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                f. The pitcher must throw the ball <so str="with their hands." />, unless{" "}
                <so str="that doesn't make sense." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                g. Once the ball is in play,{" "}
                <so str="||| |||| || ||| |||||||||| ||||| |||||||||| the outcome of the play. ||| |||| ||||||| || ||||||||||||||||" />{" "}
                immaterial plane{" "}
                <so str="|||||||||||||| ||||||| ||||||| ||||||||| ||||||||||||||| |||||||||||||||| |||||||| |||||||| unfathomable." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                h. The team with the most runs will win the game.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                i. Turntables: Any Win earned from a non-loss during the Regular Season will be converted into an Unwin.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                j. Shame Phase: If the home team scores the winning run in the bottom of the final inning, the away team
                must complete the game in shame, despite being mathematically eliminated.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                k. Hotel Motel: Games during the Earlseason will have a chance of being Holiday Innings, during which
                Teams Party instead of Score.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                l. <del>Nothing truly matters.</del>
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                m. Crying in Blaseball is <so str="||||||||||." />
              </div>
            </div>
            <div role="section" aria-labelledby="section6">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section6">
                6. <so str="The Gods" /> and You
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. Should the Participants open the Forbidden Book,{" "}
                <so str="The Discipline Era should begin||||||||||||||||||||||" /> suffering{" "}
                <so str="upon the league. Players shall be " /> banished{" "}
                <so str="at the ||||||||||| ||||||||| |||| ||||||||||||||||." /> The Discipline Era shall last until{" "}
                <so str="the Participants have" /> atoned.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. <del>If a team wins three championships, they, and Blaseball, shall ascend.</del>
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. <del>When teams are sent to</del> <so str="||||||||||| |||||||||||||" />,{" "}
                <del>they shall return once</del> <so str="|||||||||||||||| |||||||||||||||||||||| ||||||" />{" "}
                <del>the Under.</del> When teams are sent to <so str="||||||||| |||" />, they shall return once{" "}
                <so str="|||| ||| |||||||||| ||| ||||| |||||||||| ||||| || ||||||||||" /> Blasphemy.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                d. Divine Favor: the <so str="||||" /> have an internal ranking of favored teams. The list is decided{" "}
                <so str="|||||||||" /> each season, and determines all standings tiebreakers.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                e.{" "}
                <del>
                  If at any time the Fans have angered the Blaseball Gods, they may atone by eating one million Peanuts.
                </del>{" "}
                STRIKE TWO
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                h. Eat The Rich: Every season, immediately before the Election, the Wealthiest 1% of Fans will have
                their Coins removed and distributed evenly to the other 99% of Fans.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                i. Based Evolution: Every Third Championship a Team wins will cause the Team and its Players to Evolve.
                Players that round the phylogenic Bases will get to go Home.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                j.{" "}
                <del>
                  Blood Bath:{" "}
                  <so str="||||| ||||||, ||||||||||| |||||| ||| ||||||||, ||| ||||| |||| |||| ||||||| ||| ||||||. ||||| |||| || |||||||||||| ||||| || |||| |||||| ||||| |||||||||||||" />
                </del>
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                f. Sunglasses{" "}
                <so str="shall be |||||||||| ||||||||||||| |||||||||||||||||. They shall provide |||||||||||||| may be ||||||||||||||||||||." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                g. Splortsmanship, splortsmanship, is BACK.
              </div>
              <h4 role="text" className="TheBook-Line TheBook-Bullet">
                7. <so str="||||||||||||" />
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. It is known{" "}
                <so str="that the intention of the game of Blaseball |||||||||||||||||||||||| |||||||||||||||||||| |||||||||||||| |||||||||||||||||| ||||||||||| |||||||||| would be diminished." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. <so str="|||||||" />: Several entities in the <so str="||||||||||||||" /> shall be chosen{" "}
                <so str="||||||||||" /> to bring Blaseball to the people{" "}
                <so str="|||||||||||||||||| ||||||||||||||||||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. It is known that the majority of the icons on the site are sourced from{" "}
                <a href="https://game-icons.net">Game-Icons.net</a>. <so str="||||||||" /> thank the authors immensely.
                Individual author credits coming soon.
              </div>
            </div>
            <div role="section" aria-label="Signatures">
              <div className="TheBook-Line TheBook-Bullet">Signed,</div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                <so str="||||" />,  <so str="||||" />,  <so str="||||||||" />,  <so str="|||||||" />,  
                <so str="||||||||" />,  <so str="|||||||||" />,  <so str="|||||||" />,  <so str="||||" />,  
                <so str="||||||" />,  H
                <so str="||||||||||" />,  <so str="||||||" />,  <so str="|||||||" />,  <so str="||||| ||||" />,  A
                <so str="|||||| ||||||" />,  <so str="||||" />,  N
                <so str="||||||" />,  <so str="||" />,  <so str="||||||" />,  
                <del>
                  M<so str="|| ||||||" />
                </del>
              </div>
            </div>
          </l.a.Fragment>
        );
      }
      function lw() {
        Object(r.useContext)(M.context).user;
        return (
          <l.a.Fragment>
            <h3 className="TheBook-Subheader" aria-label="Page 2: Expansions">
              Expansions
            </h3>
            <div role="section" aria-labelledby="section1">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section1">
                <del>1. Arcana</del>
              </h4>
              <div className="TheBook-Line TheBook-SubBullet">
                <del>a. Major Arcana will be Dealt to Teams during the First Reading.</del>
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                <del>
                  b. Fans may purchase Tarot Spread to receive a Three-Card Spread, which may be read in their
                  Inventory.
                </del>
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                <del>c. A Seasonal Reading will take place during each Season's Earlsiesta.</del>
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                <del>
                  d. <so str="||| ||||| ||| ||||| |||| |||" /> Fates <so str="|| ||||| ||||| |||||| |||" /> the Seasonal
                  Reading.
                </del>
              </div>
            </div>
            <div role="section" aria-labelledby="section2">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section2">
                2. Bury - <so str="|||||||||" />
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. <so str="||||||||||||||||||||||||" /> the Dead.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. <so str="|||||||||||||| |||||||||| |||||||||||||||||||||||||" /> Hall of Flame{" "}
                <so str="||| ||||||| |||||||||| |||| ||||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. <so str="||||||||||| |||||| |||||||| || ||| ||||| || ||||||||||| ||||||||" />
              </div>
            </div>
            <div role="section" aria-labelledby="section3">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section3">
                3. Burn - <so str="|||||||||||" />
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a.{" "}
                <so str="||||||||| |||||| |||||| || ||| |||||||| |||| |||| || ||| |||||| |||| |||| |||||||| || ||| ||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. <so str="||||||||| ||| ||| |||||||| ||||| |||||||||| ||| || " /> Days 27 & 72.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c.{" "}
                <so str="|| ||| |||| ||| ||| |||||||| ||||| |||||||||| ||| || |||| |||| || | |||||||||| |||||| ||||||| ||||||||| ||||||| |||||||" />
              </div>
            </div>
            <div role="section" aria-labelledby="section4">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section4">
                4. Close - Ballparks
              </h4>
              <div className="TheBook-Line TheBook-SubBullet">
                a. Before a Ballpark may be constructed, a Team must Plant its Flag. When Planting their Flag, Teams may
                choose an Architectural Style from a selection of Prefabricated Models.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                b. Home Ballparks shall be Renovated in their Image. Renovations may change the State of Play. A number
                of Renovations can be built each Season.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                c. Flag Planting and Renovations shall be financed by the Fans and accessed only by Snackholders.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                d. Flag Planting and Renovations begin during the Earlsiesta and are completed during the Latesiesta.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                e. Renovations may affect <so str="|||||||| ||| |||||||||||| ||||||||, ||||||||| ||| ||| ||||||| ||" />{" "}
                Field Conditions, Weather patterns, and Elements of Play.
              </div>
            </div>
            <div role="section" aria-labelledby="section5">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section5">
                5. Deface - Wills
              </h4>
              <div className="TheBook-Line TheBook-SubBullet">a. Fans shall bend the Election to their Will.</div>
              <div className="TheBook-Line TheBook-SubBullet">
                b. Wills shall be added to the Election, allowing Fans to name Beneficiaries.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                c. In the spirit of <so str="||||||||" />, each Team shall win the same base number of Wills, unless
                affected by Free Will. Wills will be decided by random selection from each Team's Votes.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                d. Free Wills: Each season, The bottom four finishing Teams in the league will receive an extra Will in
                that season's Election.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                e. Wills will be Executed in order of League Standings.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                f. <so str="|| ||| |||||, | |||| |||| |||||| |" /> Wont.
              </div>
            </div>
            <div role="section" aria-labelledby="section6">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section6">
                6. Eat - Concessions
              </h4>
              <div className="TheBook-Line TheBook-SubBullet">a. The League shall sell Concessions to the Fans.</div>
              <div className="TheBook-Line TheBook-SubBullet">
                b. Fans will be provided a Snack Pack to hold their Snacks.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                c. Snackholders are granted access to Compensation, Betting, Exclusive Areas and Democratic Processes.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                d. Seasonal Menus will be updated according to Market Trends.
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                e. Snackholders may sell a Snack back to the Food & Beverage Director.{" "}
                <so str="|||| ||||| || | |||||." />
              </div>
              <div className="TheBook-Line TheBook-SubBullet">
                f. Fans will be able to freely buy and sell Snack Slots at any time. The less Snack Slots a Fan owns,
                the higher the Payout Modifier for the Snacks in them.
              </div>
            </div>
            <div role="section" aria-labelledby="section7">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section7">
                7. Freeze - <so str="||||||||||||||" />
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. <so str="|| |||||| |||| ||| |||||| |||| |||| |||||| || ||| ||||||| ||" /> improvements.
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. <so str="|||||" />: <so str="||||| |||||| ||| ||||||| ||| ||| |||||| || |||| ||||||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. <so str="|||||||" />:{" "}
                <so str="|||||| ||||| | |||||| ||||| ||| ||||||| |||| |||| ||||| ||||||||||| |||| ||| ||||| |||| ||||||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                d. <so str="|||||" />:{" "}
                <so str="||||| |||| ||| ||| |||| |||||| ||| ||| || |||| || |||| |||||||| ||||| ||| |||| |||||| || ||||||" />
              </div>
            </div>
            <div role="section" aria-labelledby="section8">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section8">
                8. Shred - <so str="|||||||||" />
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a. <so str="|||| ||| ||||| ||| ||| ||| ||| |||||||| ||| |||||| ||||| |||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b.{" "}
                <so str="||||||||| ||||| ||| ||| ||| |||||| || ||||||| ||| || ||||||| ||| ||| |||||||||| |||||| ||| |||||||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. <so str="||||| ||||||||||| ||| ||| ||||||||||| || ||||||| |||||||" /> Rivalries{" "}
                <so str="||| |||| ||| ||| |||||| |||||||||| ||| ||||||||| |||||" /> Alliances
              </div>
            </div>
            <div role="section" aria-labelledby="section9">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section9">
                9. Sink - <so str="|||||||||" />
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a.{" "}
                <so str="|| ||| ||||| |||| |||||||| |||||||| ||||||||| || || ||||| |||| ||| |||||||| |||| ||||||||| ||| |||||||| ||| |||||||| |||| ||| ||| |||||| ||| ||||| ||||| |||| ||||| ||||||||| ||||||||| ||||||||| |||||| |||||| ||||| |||||| |||||| ||||||| ||||||" />{" "}
                Below Zero.
              </div>
            </div>
            <div role="section" aria-labelledby="section10">
              <h4 role="text" className="TheBook-Line TheBook-Bullet" id="section10">
                10. Trash - <so str="||||||||||||||" />
              </h4>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                a.{" "}
                <so str="||||| |||| |||| |||| ||||| ||||| |||| |||||||| |||| |||| ||||| ||||| ||||| |||| ||||| |||| ||||||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                b. Pitchers:{" "}
                <so str="||||||||| |||| || |||| || ||||| ||| ||||||| ||| |||| ||||| |||| |||| |||||||| ||| |||||||| || ||||||| |||| |||| |||||" />
              </div>
              <div className="TheBook-Line TheBook-SubBullet" role="text">
                c. Hitters:{" "}
                <so str="||||||| |||| ||| ||||| |||| |||||| |||||| ||||||||| || |||| ||||| ||| ||||| |||| ||||| |||| ||||" />
              </div>
            </div>
          </l.a.Fragment>
        );
      }
      function iw() {
        return (
          <l.a.Fragment>
            <h3 className="TheBook-Subheader">Glossary</h3>
            {ew.glossary.map(function (e, t) {
              return (
                <div
                  className="TheBook-Glossary-Item"
                  role={e.definition.length > 1 ? "group" : "text"}
                  aria-labelledby={e.definition.length > 1 ? t.toString() : ""}
                >
                  <span className="TheBook-Glossary-Term" id={t.toString()}>
                    {e.name.includes("|") ? <so str={e.name} /> : e.name}: 
                  </span>
                  <co str={e.definition} />
                </div>
              );
            })}
          </l.a.Fragment>
        );
      }
      function ow(e) {
        var t = ew.glossary.find(function (t) {
          return t.name === e;
        });
        return void 0 === t ? [""] : t.definition;
      }
      a(131);
      var sw = a(119);
      function cw() {
        var e = Object(c.h)(),
          t = e.book,
          a = e.chapter,
          n = Number.isNaN(Number(t)) ? 0 : Number(t),
          r = Number.isNaN(Number(a)) ? 0 : Number(a);
        return (
          <div className="Library" id="Main-Body">
            <h2 className="Library-Header">Library</h2>
            <qE className="Library-Librarian" />
            <h4 className="Stubs-Body Library-Description">
              Welcome to the Library. Collections will be made available pending approval from the League Historian.
            </h4>
            <div className="League-Nav">
              {sw.books.map(function (e, t) {
                var a = "/library" + (0 === t ? "" : "/".concat(t)),
                  n =
                    0 === t
                      ? []
                      : e.chapters.map(function (e, t) {
                          return { text: "", path: "".concat(a, "/").concat(t) };
                        });
                return (
                  <Qh path={a} subpaths={n}>
                    {e.title}
                  </Qh>
                );
              })}
            </div>
            <uw book={n} chapter={r} />
            <Lh />
          </div>
        );
      }
      function uw(e) {
        var t = e.book,
          a = e.chapter,
          n = sw.books[t].chapters;
        return (
          <div className="Library-Body">
            <div className={"Library-Wrapper " + (a > 0 ? "Library-Wrapper-Open" : "")}>
              <div className={"Library-Chapters " + (a > 0 ? "Library-Chapters-Open" : "")}>
                {n.map(function (e, n) {
                  return (
                    <mw
                      num={n + 1}
                      str={e.title}
                      book={t}
                      chapter={n}
                      redacted={e.redacted}
                      key={n}
                      open={a === n + 1}
                    />
                  );
                })}
              </div>
              <div className={"Library-Story " + (a > 0 ? "Library-Story-Open" : "")}>
                <h4 className="TheBook-Subheader Library-Subheader">{a > 0 ? n[a - 1].title : ""}</h4>
                {n.map(function (e, t) {
                  return e.id && !e.redacted && a === t + 1 ? (
                    <hm entity={e.id} source={cm.Story} showButtons={!1} key={t} />
                  ) : null;
                })}
              </div>
            </div>
          </div>
        );
      }
      function mw(e) {
        var t = e.num,
          a = e.str,
          n = e.book,
          r = e.chapter,
          i = e.redacted,
          o = e.open;
        return i ? (
          <div className="Library-Chapters-Item Library-Chapters-Item-Redacted" key={t}>
            {t}.{" "}
            <div className="Library-Chapters-Item-Body">
              <co str={[a]} />
            </div>
          </div>
        ) : (
          <A background={!1} path={"/library/".concat(n, "/").concat(r + 1)} className="Library-Chapters-Item" key={t}>
            {t}.{" "}
            <div className="Library-Chapters-Item-Body">
              <co str={[a]} /> {o ? <ee.h className="Library-Chapters-Item-Arrow" /> : null}
            </div>
          </A>
        );
      }
      a(205);
      var Aw,
        dw,
        fw,
        hw,
        gw = a(154),
        pw = a(155),
        Ew = a.n(pw),
        vw = a(156),
        bw = ["title", "titleId"];
      function ww() {
        return (ww =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function yw(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function Bw(e, t) {
        var a = e.title,
          n = e.titleId,
          l = yw(e, bw);
        return (
          <svg
            {...ww(
              {
                id: "Layer_1",
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                x: "0px",
                y: "0px",
                viewBox: "0 0 240 240",
                style: { enableBackground: "new 0 0 240 240" },
                xmlSpace: "preserve",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Aw ||
              (Aw = r.createElement(
                "style",
                { type: "text/css" },
                "\n\t.st0{fill:none;stroke:#FFFFFF;stroke-width:4;stroke-miterlimit:10;}\n\t.st1{fill:#FFFFFF;stroke:#FFFFFF;stroke-width:4;stroke-miterlimit:10;}\n"
              ))}
            {dw ||
              (dw = (
                <rect
                  id="base2"
                  x={84.83}
                  y={48.54}
                  transform="matrix(0.7071 -0.7071 0.7071 0.7071 -24.0414 109.3548)"
                  className="st1"
                  width={70.31}
                  height={70.31}
                />
              ))}
            {fw ||
              (fw = (
                <rect
                  id="base1"
                  x={141.95}
                  y={105.74}
                  transform="matrix(0.7071 -0.7071 0.7071 0.7071 -47.7562 166.5032)"
                  className="st0"
                  width={70.31}
                  height={70.31}
                />
              ))}
            {hw ||
              (hw = (
                <rect
                  id="base3"
                  x={27.38}
                  y={105.74}
                  transform="matrix(0.7071 -0.7071 0.7071 0.7071 -81.3152 85.4845)"
                  className="st1"
                  width={70.31}
                  height={70.31}
                />
              ))}
          </svg>
        );
      }
      var Ow = r.forwardRef(Bw);
      a.p;
      function Iw() {
        var e,
          t,
          a = Object(r.useContext)(S.context),
          n = Object(r.useContext)(M.context).user,
          i = Object(c.g)(),
          o = Object(r.useContext)(xo.context),
          u = Object(r.useContext)(hs.context),
          d = Object(r.useRef)(null),
          g = Object(r.useState)(ew.glossary[Math.floor(Math.random() * ew.glossary.length)]),
          p = Object(s.a)(g, 1)[0],
          E = Object(r.useState)(0),
          v = Object(s.a)(E, 2),
          b = v[0],
          w = v[1];
        Object(r.useEffect)(
          function () {
            (function () {
              var e = Object(h.a)(
                f.a.mark(function e() {
                  var t, a;
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          void 0 !==
                            (a =
                              null === o || void 0 === o || null === (t = o.stats) || void 0 === t
                                ? void 0
                                : t.communityChest) && w(a.runs);
                        case 2:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function () {
                return e.apply(this, arguments);
              };
            })()();
          },
          [o]
        );
        var y,
          B,
          O,
          I,
          C,
          k,
          N,
          T = null,
          x = !(!u || !u.doc) && u.doc.delta,
          P = a && a.sim ? a.sim.phase : 0;
        if (
          (Object(r.useEffect)(
            function () {
              d.current && d && d.current.scrollIntoView({ block: "nearest", inline: "start" });
            },
            [P]
          ),
          !a || !a.sim)
        )
          return <js />;
        var L = 13 === P || 0 === P;
        (y = (
          <l.a.Fragment>
            <div className="Bulletin-Item-Header">
              <div className="Bulletin-Item-Header-Icon" style={{ background: "#ba1111" }}>
                <le.f />
              </div>
              <h2 className="Bulletin-Item-Header-Title">
                Blaseball Cares
                <Mg
                  header="Blaseball Cares"
                  lines={[
                    "Sundays are #BlaseballCares Day. Each week, The Game Band and Division Ambassadors highlight important work being done in their communities.",
                  ]}
                />
              </h2>
            </div>
            <div className="Bulletin-Item-Contents">
              <div className="Bulletin-Item-Contents-Text Bulletin-Item-Contents-Text-Soft" />
              <div className="Bulletin-Item-Contents-Text">
                As we head into the Off Season, The Game Band would once again like to highlight{" "}
                <a target="_blank" href="https://www.mutualaidla.org/" className="Bulletin-Serif">
                  the COVID-19 Mutual Aid Network LA initiative
                </a>
                , a mutual aid network organized by{" "}
                <a target="_blank" href="https://www.power-la.org/" className="Bulletin-Serif">
                  POWER
                </a>{" "}
                and{" "}
                <a target="_blank" href="https://www.groundgamela.org/" className="Bulletin-Serif">
                  Ground Game LA
                </a>{" "}
                comprised of different grassroots organizations, movements, organizers, and volunteers who are committed
                to organizing material support in the LA community.
              </div>
              <div className="Bulletin-Item-Contents-Text">
                There are infinite Los Angeli. Together we can build a better one.
              </div>
            </div>
          </l.a.Fragment>
        )),
          (C = (
            <hm
              entity=""
              defaultCategory={-1}
              source={cm.Home}
              defaultSort={um.Hot}
              categoryOptions={[-1, F.Outcomes, F.Changes, F.Game, F.Abilities, F.Narrative]}
              consolidated={!!x}
            />
          )),
          (B = (
            <l.a.Fragment>
              <div className="Bulletin-Item-Header">
                <div className="Bulletin-Item-Header-Icon" style={{ background: "#1b95e0" }}>
                  <_.lc />
                </div>
                <h2 className="Bulletin-Item-Header-Title" id="community">
                  Art Gallery
                </h2>
              </div>
              <div className="Bulletin-Item-Contents Bulletin-Item-ImageGrid">
                {Sw.map(function (e) {
                  return (
                    <gw.a
                      id={e}
                      options={{ theme: n.lightMode ? "light" : "dark", conversation: "none", dnt: !0 }}
                      className="Bulletin-Tweet"
                    />
                  );
                })}
              </div>
            </l.a.Fragment>
          ));
        var R = o.leagues.find(function (e) {
          var t;
          return e.id === (null === (t = a.season) || void 0 === t ? void 0 : t.league);
        });
        N = (
          <l.a.Fragment>
            <div className="Bulletin-Item-Header Bulletin-Item-League-Small">
              <h2 className="Bulletin-Item-Header-Title Bulletin-Item-League-Small-Text">
                {null === R || void 0 === R ? void 0 : R.name}
              </h2>
            </div>
            <div className="Bulletin-Item-League">
              {L ? null : (
                <h3 className="League-Header Bulletin-Item-League-Day">
                  Season<span className="League-Number">{a.sim.season + 1}</span>Day
                  <span className="League-Number">{a.sim.day + 1}</span>
                </h3>
              )}
              <Gh />
              <Ow className="Bulletin-Item-League-Icon" />
              {L ? null : (
                <l.a.Fragment>
                  {PA(a.sim, "SIM_COMMUNITY_CHEST") ? wo(<Re />, "LeagueInfo-Bar", b, 3e3) : null}
                  <A
                    background={i}
                    path="/leagueinfo"
                    className="Bulletin-Widget-Button btn btn-success Bulletin-Widget-Button-White"
                  >
                    See More
                  </A>
                </l.a.Fragment>
              )}
            </div>
          </l.a.Fragment>
        );
        var Q = [
          { datetime: a.sim.godsDayDate, phase: [0], name: "Gods' Day" },
          { datetime: a.sim.preseasonDate, phase: [1], name: "Preseason" },
          { datetime: a.sim.earlseasonDate, phase: [2], name: "Earlseason" },
          { datetime: a.sim.earlsiestaDate, phase: [3], name: "Earlsiesta" },
          { datetime: a.sim.midseasonDate, phase: [4], name: "Midseason" },
          { datetime: a.sim.latesiestaDate, phase: [5], name: "Latesiesta" },
          { datetime: a.sim.lateseasonDate, phase: [6], name: "Lateseason" },
          { datetime: a.sim.endseasonDate, phase: [7], name: "Endseason" },
          { datetime: a.sim.earlpostseasonDate, phase: [9, 10], name: "Earlpostseason" },
          { datetime: a.sim.latepostseasonDate, phase: [11, 12, 13], name: "Latepostseason" },
        ];
        O = (
          <l.a.Fragment>
            <div className="Bulletin-Item-Header">
              <div className="Bulletin-Item-Header-Icon" style={{ background: "#ffcb49", color: "#e30050" }}>
                <_.y />
              </div>
              <h2 className="Bulletin-Item-Header-Title" id="schedule">
                Schedule
              </h2>
            </div>
            {x ? (
              <div className="Bulletin-Schedule-Contents">
                <p className="Bulletin-Item-Contents-Text" role="text">
                  The third On Season of the Expansion Era, Seasons 18 and 19, has concluded.
                </p>
                <p className="Bulletin-Item-Contents-Text" role="text">
                  Blaseball is currently in an Off Season and will return for Season 20 on June 14th, 2021 at 8am PST.
                </p>
                <p className="Bulletin-Item-Contents-Text" role="text">
                  Check the{" "}
                  <a target="_blank" className="Bulletin-Serif" href="https://twitter.com/blaseball">
                    Twitter
                  </a>{" "}
                  or{" "}
                  <a href="https://discord.gg/3uFgJhu" target="_blank" className="Bulletin-Serif">
                    Discord
                  </a>{" "}
                  for updates!
                </p>
              </div>
            ) : (
              <div role="list" className="Bulletin-Schedule-Contents">
                {Q.map(function (e, t) {
                  var a = !1;
                  return (
                    e.phase.forEach(function (e) {
                      P === e && (a = !0);
                    }),
                    (
                      <div
                        className={
                          "Bulletin-Schedule-Item" +
                          (a ? " Bulletin-Schedule-Item-Current" : "") +
                          (P < e.phase[0] ? " Bulletin-Schedule-Item-Future" : "")
                        }
                        aria-hidden={P > e.phase[0]}
                        key={t}
                        ref={a ? d : null}
                      >
                        <span className="Bulletin-Schedule-Date" aria-hidden="true">
                          {Cw(e.datetime)}
                        </span>
                        <span className="Bulletin-Schedule-Name" role="text">
                          {e.name} <span className="sr-only" aria-label={" starts at " + kw(e.datetime)} role="text" />
                        </span>
                        <Mg header={e.name} lines={ow(e.name)} noMargin={!0} />
                      </div>
                    )
                  );
                })}
                <div
                  className={"Bulletin-Schedule-Item" + (a.sim.phase < 13 ? " Bulletin-Schedule-Item-Future" : "")}
                  aria-hidden={a.sim.phase > 13}
                >
                  <span className="Bulletin-Schedule-Date" aria-hidden="true">
                    {Cw(a.sim.electionDate)}
                  </span>
                  <span className="Bulletin-Schedule-Name" role="text">
                    Election
                    <span className="sr-only" aria-label={" starts at " + kw(a.sim.electionDate)} role="text" />
                  </span>
                  <Mg header="Election" lines={ow("Election")} noMargin={!0} />
                </div>
              </div>
            )}
          </l.a.Fragment>
        );
        var j = [];
        0 === n.trackers.BETS &&
          j.push(
            <li className="Bulletin-Actions-Item">
              <div className="Bulletin-Actions-Item-Title">Place Your First Bet</div>
              <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Games">
                <m.b to="/upcoming">Try It</m.b>
              </Vs.a>
              <div className="Bulletin-Actions-Item-Text">Bet on Upcoming Games to earn more Coins.</div>
            </li>
          ),
          n.unlockedShop &&
            n.coins < 1 &&
            n.trackers.BEGS < 3 &&
            j.push(
              <li className="Bulletin-Actions-Item">
                <div className="Bulletin-Actions-Item-Title">Beg to the Gods</div>
                <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Shop">
                  <m.b to={"/shop/".concat(ne.BEG)}>Try It</m.b>
                </Vs.a>
                <div className="Bulletin-Actions-Item-Text">
                  When you are out of coins, use Bread Crumbs to beg for more.
                </div>
              </li>
            ),
          (void 0 !== n.idol && "" !== n.idol && null !== n.idol) ||
            j.push(
              <li className="Bulletin-Actions-Item">
                <div className="Bulletin-Actions-Item-Title">Choose Your First Idol</div>
                <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Idols Board">
                  <m.b to="/leaderboard">Try It</m.b>
                </Vs.a>
                <div className="Bulletin-Actions-Item-Text">Go to a Player's page to Idolize them.</div>
              </li>
            ),
          !n.unlockedShop &&
            n.coins >= 20 &&
            j.push(
              <li className="Bulletin-Actions-Item">
                <div className="Bulletin-Actions-Item-Title">Unlock the Shop</div>
                <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Shop">
                  <m.b to="/shop/">Try It</m.b>
                </Vs.a>
                <div className="Bulletin-Actions-Item-Text">
                  In the Shop, you will find Snacks that help you earn Coins.
                </div>
              </li>
            ),
          n.trackers.SNACKS_BOUGHT < 2 &&
            j.push(
              <li className="Bulletin-Actions-Item">
                <div className="Bulletin-Actions-Item-Title">Buy a Snack</div>
                <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Shop">
                  <m.b to={"/shop/" + (void 0 === n.snacks.Team_Win ? "".concat(ne.TEAM_WIN) : "")}>Try It</m.b>
                </Vs.a>
                <div className="Bulletin-Actions-Item-Text">Buy Snacks. They'll help you earn Coins.</div>
              </li>
            ),
          !n.unlockedElection &&
            n.coins >= 100 &&
            j.push(
              <li className="Bulletin-Actions-Item">
                <div className="Bulletin-Actions-Item-Title">Unlock the Election</div>
                <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Election">
                  <m.b to="/offseason">Try It</m.b>
                </Vs.a>
                <div className="Bulletin-Actions-Item-Text">Vote in the Election to create Change.</div>
              </li>
            ),
          n.trackers.BETS >= 1 &&
            n.trackers.BETS < 10 &&
            j.push(
              <li className="Bulletin-Actions-Item">
                <div className="Bulletin-Actions-Item-Title">
                  Place Bets
                  <div
                    className="Bulletin-Actions-Item-Amount"
                    role="text"
                    aria-label={"Bets Placed: ".concat(n.trackers.BETS, " of 10 completed")}
                  >
                    {n.trackers.BETS} / 10
                  </div>
                </div>
                <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Games">
                  <m.b to="/upcoming">Try It</m.b>
                </Vs.a>
                <div className="Bulletin-Actions-Item-Text">Bet on Upcoming Games. Takes Coins to make Coins.</div>
              </li>
            ),
          n.unlockedShop &&
            n.trackers.SNACK_UPGRADES < 3 &&
            (function (e) {
              for (var t = Object(r.useContext)(CA.context), a = Object.keys(e), n = a.length - 1; n >= 0; n--) {
                var l = ne.GetTiers(a[n], t.snackData);
                if (void 0 !== l && void 0 !== l[e[a[n]] + 1]) return !0;
              }
              return !1;
            })(n.snacks) &&
            j.push(
              <li className="Bulletin-Actions-Item">
                <div className="Bulletin-Actions-Item-Title">
                  Upgrade a Snack
                  <div
                    className="Bulletin-Actions-Item-Amount"
                    role="text"
                    aria-label={"Bets Placed: ".concat(n.trackers.SNACK_UPGRADES, " of 3 completed")}
                  >
                    {n.trackers.SNACK_UPGRADES} / 3
                  </div>
                </div>
                <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Shop">
                  <m.b to={"/shop/" + (void 0 !== n.snacks.Max_Bet ? "".concat(ne.MAX_BET) : "")}>Try It</m.b>
                </Vs.a>
                <div className="Bulletin-Actions-Item-Text">Buying more of a Snack earns you more Coins.</div>
              </li>
            ),
          n.unlockedElection &&
            0 === n.trackers.VOTES_CAST &&
            (n.snacks.Votes < 1
              ? j.push(
                  <li className="Bulletin-Actions-Item">
                    <div className="Bulletin-Actions-Item-Title">Buy Votes</div>
                    <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Shop">
                      <m.b to={"/shop/".concat(ne.VOTES)}>Try It</m.b>
                    </Vs.a>
                    <div className="Bulletin-Actions-Item-Text">Buy Votes in order to participate in the Election.</div>
                  </li>
                )
              : j.push(
                  <li className="Bulletin-Actions-Item">
                    <div className="Bulletin-Actions-Item-Title">Cast Votes</div>
                    <Vs.a className="Bulletin-Actions-Item-Button" variant="info" aria-label="Go To Election">
                      <m.b to="/offseason">Try It</m.b>
                    </Vs.a>
                    <div className="Bulletin-Actions-Item-Text">The Future is in your hands. Democracy now!</div>
                  </li>
                )),
          (I =
            0 === j.length || 0 === (null === (e = a.sim) || void 0 === e ? void 0 : e.phase) || x ? (
              <l.a.Fragment>
                <div className="Bulletin-Item-Header">
                  <div className="Bulletin-Item-Header-Icon" style={{ background: "#3337dd", color: "#baf4ff" }}>
                    <le.h />
                  </div>
                  <h2 className="Bulletin-Item-Header-Title" id="actions">
                    Glossary
                  </h2>
                </div>
                <div className="Bulletin-Item-Contents Bulletin-Item-Glossary">
                  <span className="Bulletin-Item-Word">{p.name.includes("|") ? <so str={p.name} /> : p.name}: </span>
                  {1 === p.definition.length ? (
                    <span className="Bulletin-Item-Def">
                      <co str={p.definition} />
                    </span>
                  ) : (
                    <div className="Bulletin-Item-Def">
                      <co str={p.definition} />
                    </div>
                  )}
                </div>
              </l.a.Fragment>
            ) : (
              <l.a.Fragment>
                <div className="Bulletin-Item-Header">
                  <div className="Bulletin-Item-Header-Icon" style={{ background: "#0eb854", color: "#323d20" }}>
                    <_.Sb />
                  </div>
                  <h2 className="Bulletin-Item-Header-Title" id="actions">
                    Actions
                  </h2>
                </div>
                <div role="list" className="Bulletin-Item-Contents">
                  {j.slice(0, 2)}
                </div>
              </l.a.Fragment>
            ));
        var V,
          W =
            void 0 === (V = null === a || void 0 === a ? void 0 : a.sim) ||
            (V.phase !== D.Earlseason &&
              V.phase !== D.Midseason &&
              V.phase !== D.Lateseason &&
              V.phase !== D.EarlyPostseason &&
              V.phase !== D.Postseason) ||
            x ||
            null === a ||
            void 0 === a ||
            null === (t = a.schedule) ||
            void 0 === t
              ? void 0
              : t.find(function (e) {
                  return e.awayTeam === n.favoriteTeam || e.homeTeam === n.favoriteTeam ? e : void 0;
                }),
          U = o.teams.find(function (e) {
            return e.id === n.favoriteTeam;
          }),
          G = void 0 !== U ? lo(U.id, a.standings) : new oe();
        if (void 0 === W) {
          var H = x ? null : (
            <Vs.a className="Bulletin-Widget-Button" variant="success">
              <m.b to="/league">Go To Games</m.b>
            </Vs.a>
          );
          T =
            null === n.favoriteTeam ||
            "" == n.favoriteTeam ||
            void 0 === n.favoriteTeam ||
            null === U ||
            void 0 === U ? (
              <div className="Bulletin-Item" style={{ gridRow: 3 }}>
                <div className="Bulletin-Widget-NoGame">
                  <div className="Bulletin-Actions-Item-Text">You currently don't have a favorite team.</div>
                  {H}
                </div>
              </div>
            ) : (
              <div className="Bulletin-Item" style={{ gridRow: 3 }}>
                <div className="Bulletin-Widget-NoGame">
                  <A background={i} path={"/team/".concat(U.id)} className="Bulletin-Widget-Team">
                    <div className="Bulletin-Widget-ScoreTeamColorBar" style={{ background: U.mainColor }}>
                      {FA(U.emoji)}
                    </div>
                    <div
                      className="Bulletin-Widget-ScoreName"
                      style={{
                        color: n.lightMode ? NA(U.secondaryColor) : U.secondaryColor,
                        background: n.lightMode ? U.secondaryColor : "none",
                        padding: n.lightMode ? "2px 8px" : "initial",
                      }}
                    >
                      {U.fullName}
                    </div>
                  </A>
                  <div className="GameWidget-ScoreRecord">
                    {void 0 !== a.standings && n.favoriteTeam ? oo(G) : "?? - ??"}
                  </div>
                  <div className="Bulletin-Actions-Item-Text">
                    Your favorite team isn't playing games at the moment.
                  </div>
                  {H}
                </div>
              </div>
            );
        } else {
          var Y = W.isPostseason
              ? "to ".concat(W.seriesLength)
              : "".concat(W.seriesIndex, " of ").concat(W.seriesLength),
            z = W.homeScore,
            X = W.awayScore,
            J = z > X && W.gameComplete ? { border: 2, borderColor: "#fffffff", borderStyle: "solid" } : {},
            Z = X > z && W.gameComplete ? { border: 2, borderColor: "#fffffff", borderStyle: "solid" } : {},
            q = Ah(W, a.standings),
            K = uh(W),
            $ = null,
            ee = "";
          if (null !== W.stadiumId) {
            var te = o.stadiums.find(function (e) {
              return e.id === W.stadiumId;
            });
            te && (($ = <sh stadium={te} style={ah.GameWidget} />), (ee = te.nickname));
          }
          T = (
            <div
              className="Bulletin-Widget"
              style={{ gridRow: 3, minHeight: "300px" }}
              aria-label={"".concat(q.awayTeamName, " versus ").concat(q.homeTeamName)}
            >
              <div className="Bulletin-Widget-Header-Wrapper">
                <div className="Widget-Header" role="group" aria-label="Game Status Bar">
                  <div className="Widget-StatusBar-WithStadium">
                    {mh(K)}
                    <div className="Widget-StadiumLabel">
                      {K.started ? (
                        <Ct.a
                          placement="top"
                          overlay={
                            <St.a id="tooltip-stadium">
                              <strong>{ee}</strong>
                            </St.a>
                          }
                        >
                          <div className="Widget-Stadium-Icon">{$}</div>
                        </Ct.a>
                      ) : null}
                    </div>
                  </div>
                  <div className="Widget-ScoreLabel Widget-ScoreLabel--Series" aria-label={Y + " Games"} role="text">
                    {Y}
                  </div>
                </div>
                <div className="Bulletin-Widget-ScoreBacking" role="group" aria-label="The Teams">
                  <A background={i} path={"/team/".concat(W.awayTeam)} className="GameWidget-ScoreLine">
                    <div
                      className="GameWidget-ScoreTeamColorBar"
                      aria-hidden={!0}
                      style={{ background: W.awayTeamColor }}
                    >
                      {FA(W.awayTeamEmoji)}
                    </div>
                    <div className="GameWidget-ScoreTeam">
                      <div
                        className="GameWidget-ScoreName"
                        style={{
                          color: n.lightMode ? NA(W.awayTeamSecondaryColor) : W.awayTeamSecondaryColor,
                          background: n.lightMode ? W.awayTeamSecondaryColor : "none",
                          padding: n.lightMode ? "2px 8px" : "initial",
                          lineHeight: n.lightMode ? "1.6rem" : "initial",
                        }}
                      >
                        {q.awayTeamName}
                      </div>
                      <div className="GameWidget-ScoreTeamInfo">
                        <div
                          className="GameWidget-ScoreRecord"
                          aria-label={""
                            .concat(lo(W.awayTeam, a.standings).wins, " Wins, ")
                            .concat(lo(W.awayTeam, a.standings).losses, " Losses")}
                        >
                          {oo(lo(W.awayTeam, a.standings))}
                        </div>
                        <div
                          className="GameWidget-WinChance"
                          aria-label={"".concat(Math.round(100 * W.awayOdds), "% Chance of Winning")}
                          style={{
                            color: n.lightMode ? NA(W.awayTeamSecondaryColor) : W.awayTeamSecondaryColor,
                            background: n.lightMode ? W.awayTeamSecondaryColor : "none",
                            padding: n.lightMode ? "2px 8px" : "initial",
                            lineHeight: n.lightMode ? "1.2rem" : "initial",
                          }}
                        >
                          {Math.round(100 * W.awayOdds)}%
                        </div>
                      </div>
                    </div>
                    <div className="GameWidget-ScoreNumber" style={Z} aria-label={"".concat(q.awayTeamScore, " Runs")}>
                      {q.awayTeamScore}
                    </div>
                  </A>
                  <A background={i} path={"/team/".concat(W.homeTeam)} className="GameWidget-ScoreLine">
                    <div
                      className="GameWidget-ScoreTeamColorBar"
                      aria-hidden={!0}
                      style={{ background: W.homeTeamColor }}
                    >
                      {FA(W.homeTeamEmoji)}
                    </div>
                    <div className="GameWidget-ScoreTeam">
                      <div
                        className="GameWidget-ScoreName"
                        style={{
                          color: n.lightMode ? NA(W.homeTeamSecondaryColor) : W.homeTeamSecondaryColor,
                          background: n.lightMode ? W.homeTeamSecondaryColor : "none",
                          padding: n.lightMode ? "2px 8px" : "initial",
                          lineHeight: n.lightMode ? "1.6rem" : "initial",
                        }}
                      >
                        {q.homeTeamName}
                      </div>
                      <div className="GameWidget-ScoreTeamInfo">
                        <div
                          className="GameWidget-ScoreRecord"
                          aria-label={""
                            .concat(lo(W.homeTeam, a.standings).wins, " Wins, ")
                            .concat(lo(W.homeTeam, a.standings).losses, " Losses")}
                        >
                          {oo(lo(W.homeTeam, a.standings))}
                        </div>
                        <div
                          className="GameWidget-WinChance"
                          aria-label={"".concat(Math.round(100 * W.homeOdds), "% Chance of Winning")}
                          style={{
                            color: n.lightMode ? NA(W.homeTeamSecondaryColor) : W.homeTeamSecondaryColor,
                            background: n.lightMode ? W.homeTeamSecondaryColor : "none",
                            padding: n.lightMode ? "2px 8px" : "initial",
                            lineHeight: n.lightMode ? "1.2rem" : "initial",
                          }}
                        >
                          {Math.round(100 * W.homeOdds)}%
                        </div>
                      </div>
                    </div>
                    <div className="GameWidget-ScoreNumber" style={J} aria-label={"".concat(q.homeTeamScore, " Runs")}>
                      {q.homeTeamScore}
                    </div>
                  </A>
                </div>
              </div>
              <div className="Bulletin-Widget-Log" aria-label="Log">
                <div className="Bulletin-Widget-Log-Content">
                  {W.lastUpdate.split("\n").map(function (e, t) {
                    return (
                      <div className="Widget-Log-Line" key={t}>
                        {e}
                      </div>
                    );
                  })}
                  {"" !== W.scoreLedger
                    ? W.scoreLedger.split("\n").map(function (e, t) {
                        return (
                          <div className="Widget-Log-Line Widget-Log-Ledger" key={t}>
                            {e}
                          </div>
                        );
                      })
                    : null}
                  {"" !== W.scoreUpdate
                    ? W.scoreUpdate.split("\n").map(function (e, t) {
                        return (
                          <div className="Widget-Log-Line Widget-Log-Score" key={t}>
                            {e}
                          </div>
                        );
                      })
                    : null}
                </div>
              </div>
              <Vs.a className="Bulletin-Widget-Button" variant="success">
                <m.b to="/league">Go To Games</m.b>
              </Vs.a>
            </div>
          );
        }
        k = (
          <l.a.Fragment>
            <div className="Bulletin-Item-Header">
              <div className="Bulletin-Item-Header-Icon" style={{ background: "#4b35b4", color: "#efecff" }}>
                <_.sc />
              </div>
              <h2 className="Bulletin-Item-Header-Title" id="actions">
                Recap
              </h2>
            </div>
            <div className="Bulletin-Item-Contents-Video">
              <Ew.a id="skpHXzM3Pzc" />
            </div>
          </l.a.Fragment>
        );
        var ae = (
          <div className="Bulletin" id="Main-Body">
            <div className="Bulletin-Rows">
              <div role="article" className="Bulletin-Item" style={{ gridRow: 1, paddingBottom: L ? "0" : "20px" }}>
                {N}
              </div>
              <div
                role="article"
                className="Bulletin-Item Bulletin-Item-Actions"
                aria-labelledby="actions"
                style={{ gridRow: 3 }}
              >
                {I}
              </div>
              {T}
              <div role="article" className="Bulletin-Item" style={{ gridRow: 3 }}>
                {k}
              </div>
              <div
                role="article"
                className="Bulletin-Item Bulletin-Item-League-Wrapper"
                aria-labelledby="actions"
                style={{ gridRow: "1 / 3", gridColumn: "2 / 4", maxHeight: "100%" }}
              >
                {C}
              </div>
              {L ? (
                <div
                  role="article"
                  className="Bulletin-Item"
                  aria-labelledby="schedule"
                  style={{ gridRow: 2, gridColumn: 1, minWidth: "350px" }}
                >
                  {y}
                </div>
              ) : (
                <div
                  role="article"
                  className="Bulletin-Item"
                  aria-labelledby="schedule"
                  style={{ gridRow: 2, gridColumn: 1, minWidth: "350px" }}
                >
                  {O}
                </div>
              )}
              <div role="article" aria-labelledby="community" className="Bulletin-Item Bulletin-Wide-Bottom">
                {B}
              </div>
            </div>
          </div>
        );
        return x ? (
          <div className="Bulletin" id="Main-Body">
            <div className="Bulletin-Rows Bulletin-Rows-Siesta">
              <div role="article" className="Bulletin-Item" aria-labelledby="schedule" style={{ gridRow: 1 }}>
                {O}
              </div>
              <div
                role="article"
                className="Bulletin-Item"
                aria-labelledby="actions"
                style={{ gridRow: "1 / 3", gridColumn: "2 / 4" }}
              >
                {k}
              </div>
              <div
                role="article"
                className="Bulletin-Item"
                aria-labelledby="actions"
                style={{ gridRow: "2 / 4", gridColumn: 1, maxHeight: "400px", minHeight: "100%", minWidth: "400px" }}
              >
                {C}
              </div>
              <div
                role="article"
                className="Bulletin-Item Bulletin-Item-Actions"
                aria-labelledby="actions"
                style={{ gridRow: 3 }}
              >
                {I}
              </div>
              {T}
              <div role="article" aria-labelledby="community" className="Bulletin-Item Bulletin-Wide-Bottom">
                {B}
              </div>
            </div>
          </div>
        ) : (
          ae
        );
      }
      var Sw = (function (e) {
        var t,
          a = [];
        for (; a.length <= 2; ) (t = Math.floor(Math.random() * e.length)), a.includes(t) || a.push(t);
        return [e[a[0]], e[a[1]], e[a[2]]];
      })(vw.collection);
      function Cw(e) {
        var t = new Date(e),
          a = (t.getMonth() + 1).toString(),
          n = t.getDate().toString(),
          r = t.getHours().toString(),
          l = t.getMinutes().toString(),
          i = "AM";
        return (
          parseInt(l) < 10 && (l = "0" + l),
          parseInt(r) >= 12 && ((r = (parseInt(r) - 12).toString()), (i = "PM")),
          "0" === r && (r = "12"),
          a + "." + n + " " + r + ":" + l + i
        );
      }
      function kw(e) {
        var t = new Date(e),
          a = (t.getMonth() + 1).toString(),
          n = t.getDate().toString(),
          r = t.getHours().toString(),
          l = t.getMinutes().toString(),
          i = "AM";
        return (
          parseInt(l) < 10 && (l = "0" + l),
          parseInt(r) >= 12 && ((r = (parseInt(r) - 12).toString()), (i = "PM")),
          "0" === r && (r = "12"),
          a + "/" + n + " " + r + i
        );
      }
      var Nw = { player: void 0, item: void 0 };
      var Tw,
        xw = function (e) {
          var t,
            a,
            n = Object(c.h)().id,
            i = (Object(r.useContext)(S.context), Object(r.useContext)(xo.context)),
            o = Object(r.useState)(!1),
            u = Object(s.a)(o, 2),
            m = u[0],
            A = u[1],
            d = Object(r.useState)(Nw),
            g = Object(s.a)(d, 2),
            p = g[0],
            E = g[1];
          if (
            (void 0 !== e.player && (p.player = e.player),
            void 0 !== e.item && (p.item = e.item),
            Object(r.useEffect)(
              function () {
                (function () {
                  var t = Object(h.a)(
                    f.a.mark(function t() {
                      var a, r;
                      return f.a.wrap(function (t) {
                        for (;;)
                          switch ((t.prev = t.next)) {
                            case 0:
                              if (void 0 !== e.item) {
                                t.next = 6;
                                break;
                              }
                              return A(!0), (t.next = 4), Xm([n]);
                            case 4:
                              void 0 !== (a = t.sent) && 1 == a.length ? (p.item = a[0]) : (p.item = void 0);
                            case 6:
                              if (void 0 !== e.player || void 0 === p.item) {
                                t.next = 12;
                                break;
                              }
                              return A(!0), (t.next = 10), Zm(p.item.id);
                            case 10:
                              void 0 !== (r = t.sent) && 1 == r.length ? (p.player = r[0]) : (p.player = void 0);
                            case 12:
                              A(!1), E(p);
                            case 14:
                            case "end":
                              return t.stop();
                          }
                      }, t);
                    })
                  );
                  return function () {
                    return t.apply(this, arguments);
                  };
                })()();
              },
              [e]
            ),
            !p.item || !p || m)
          )
            return <js />;
          var v,
            b = i.teams.find(function (e) {
              var t;
              return e.id === (null === (t = p.player) || void 0 === t ? void 0 : t.leagueTeamId);
            }),
            w = (function (e) {
              if (void 0 === e) return [];
              var t = [];
              null !== e.prePrefix && t.push(e.prePrefix);
              null !== e.prefixes && t.push.apply(t, Object(J.a)(e.prefixes));
              null !== e.postPrefix && t.push(e.postPrefix);
              null !== e.suffix && t.push(e.suffix);
              null !== e.root && t.push(e.root);
              return t;
            })(p.item),
            y = [],
            B = [],
            O = "",
            I = Object(z.a)(w);
          try {
            for (I.s(); !(v = I.n()).done; ) {
              var C,
                k = v.value;
              if (null !== k) {
                k === (null === (C = p.item) || void 0 === C ? void 0 : C.root) ? (O = k.name) : B.push(k.name);
                var N,
                  T = Object(z.a)(k.adjustments);
                try {
                  for (T.s(); !(N = T.n()).done; ) {
                    var x = N.value;
                    0 === x.type && y.push(x);
                  }
                } catch (F) {
                  T.e(F);
                } finally {
                  T.f();
                }
              }
            }
          } catch (F) {
            I.e(F);
          } finally {
            I.f();
          }
          var P =
              void 0 !== p.item && y.length > 0
                ? y.map(function (e, t) {
                    return <Tt id={e.mod} type={Ot.Item} key={t} />;
                  })
                : null,
            M = (
              <div className="Item-Stats-Line-Body">
                {vo(p.item.health, p.item.durability)}
                <span className="Player-Stars-Num" aria-label="hidden">
                  ({p.item.health})
                </span>
              </div>
            ),
            L = null;
          0 === p.item.health &&
            1 !== p.item.durability &&
            (L = <div className="Item-Status Item-Status-Broken">- Broken</div>),
            -1 === p.item.durability &&
              ((M = (
                <div className="Item-Stats-Line-Body">
                  {vo(p.item.health, p.item.durability)}
                  <span className="Player-Stars-Num">(Unbreakable, Undroppable)</span>
                </div>
              )),
              (L = (
                <Ct.a
                  placement="top"
                  overlay={
                    <St.a id="tooltip-disabled" className="ModalItem-Tooltip">
                      <strong>Legendary Items cannot break or be dropped</strong>
                    </St.a>
                  }
                >
                  <div className="Item-Status Item-Status-Legendary">- Legendary</div>
                </Ct.a>
              )));
          var R = (
              <ul className="Player-Info-Stats">
                <li className="Player-Info-Line Item-Info-Line">
                  <div className="Player-Info-Line-Header">Durability</div>
                  {M}
                </li>
                {null !== P ? (
                  <li className="Player-Info-Line Item-Info-Line">
                    <div className="Player-Info-Line-Header">Mods</div>
                    <div className="Item-Stats-Line-Body">{P}</div>
                  </li>
                ) : null}
                <li className="Player-Info-Line Item-Info-Line">
                  <div className="Player-Info-Line-Header">Type</div>
                  <div className="Item-Stats-Line-Body">
                    {bo(O)} {O}
                  </div>
                </li>
                <li className="Player-Info-Line Item-Info-Line">
                  <div className="Player-Info-Line-Header">Elements</div>
                  {B.length > 0 ? B.join(", ") : "None"}
                </li>
              </ul>
            ),
            D = (
              <l.a.Fragment>
                <div className="ModalItem-Info Item-Info">
                  <div className="Player-Header Item-Header">
                    <h2 className="ModalItem-Name Item-Name">
                      {null === (t = p.item) || void 0 === t ? void 0 : t.name}
                    </h2>
                    {L}
                  </div>
                  <div className="Player-Header-Bottom">
                    <div className="Player-Teams-Section">
                      <div className="Player-Team-Line">
                        <div
                          className="Player-Team-Logo"
                          style={{ background: void 0 !== b ? b.mainColor : "#999999" }}
                        >
                          <div className="Player-Team-Emoji">{DA(b)}</div>
                        </div>
                        <div className="Player-Team-Name">
                          {null === (a = p.player) || void 0 === a ? void 0 : a.name}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="ModalItem-Content Item-Content">{R}</div>
              </l.a.Fragment>
            );
          return <Fs {...Object.assign({}, e, { className: "ModalItem Item" })}>{D}</Fs>;
        },
        Pw = function (e) {
          var t = Object(r.useContext)(xo.context),
            a = Object(r.useState)(void 0),
            n = Object(s.a)(a, 2),
            i = n[0],
            o = n[1],
            u = Object(r.useState)([]),
            m = Object(s.a)(u, 2),
            A = m[0],
            d = m[1],
            g = Object(c.h)().id;
          if (
            (Object(r.useEffect)(function () {
              (function () {
                var e = Object(h.a)(
                  f.a.mark(function e() {
                    var t, a;
                    return f.a.wrap(function (e) {
                      for (;;)
                        switch ((e.prev = e.next)) {
                          case 0:
                            return (e.next = 2), oA(g, um.OldestFirst);
                          case 2:
                            (t = e.sent) &&
                              (d(t),
                              (a = t.find(function (e) {
                                return 0 === e.type;
                              })),
                              o(a));
                          case 4:
                          case "end":
                            return e.stop();
                        }
                    }, e);
                  })
                );
                return function () {
                  return e.apply(this, arguments);
                };
              })()();
            }, []),
            void 0 === i || null === i.metadata)
          )
            return null;
          var p = t.teams.find(function (e) {
              return e.id === i.metadata.home;
            }),
            E = t.teams.find(function (e) {
              return e.id === i.metadata.away;
            });
          if (void 0 === p) return null;
          if (void 0 === E) return null;
          var v = i.metadata.weather,
            b = (
              <l.a.Fragment>
                <div className="ModalItem-Info">
                  <div className="ModalItem-Name">
                    {E.nickname} at {p.nickname}
                  </div>
                  <div className="Events-List-Row Events-Time">
                    Season {ym(i.phase, i.tournament, i.season)}, Day {Bm(i.phase, i.day)}
                  </div>
                  <span className="Events-List-Row">
                    <Xu type={v} tooltip={!0} />
                    <span className="Events-Time Events-List-Row-Group">{Ju(v)}</span>
                  </span>
                </div>
                <div className="ModalItem-Content ModalItem-Scroll">
                  <hm
                    entity={g}
                    source={cm.Game}
                    defaultCategory={-1}
                    defaultSort={um.OldestFirst}
                    preloadEvents={A}
                    categoryOptions={[-1, F.Changes, F.Game, F.Abilities]}
                  />
                </div>
              </l.a.Fragment>
            );
          return <Fs {...Object.assign({}, e, { className: "ModalItem" })}>{b}</Fs>;
        },
        Mw = function (e) {
          var t,
            a = e.path,
            n = Object(r.useContext)(S.context),
            i = void 0 !== n.sim && void 0 !== n.sim.season ? n.sim.season : -1;
          return (
            <div>
              <Jb
                element={
                  <div className="Stubs-All">
                    <div className="Stubs-Header">It's the Pre-Season.</div>
                    <Kh dateString={null === (t = n.sim) || void 0 === t ? void 0 : t.nextPhaseTime} />
                    <div className="Stubs-Body">Season {i + 1} will begin soon.</div>
                  </div>
                }
                text="Offseason. Check for updates on the Discord!"
              />
              <Yh />
              {"/leaderboard" === a ? <tg /> : <ig />}
            </div>
          );
        },
        Lw = function (e) {
          var t,
            a = e.path,
            n = Object(r.useContext)(S.context),
            i = void 0 !== n.sim && void 0 !== n.sim.season ? n.sim.season : -1,
            o = null;
          switch (a) {
            case "/leaderboard":
              o = <tg />;
              break;
            case "/standings":
              o = <ig />;
              break;
            case "/league":
              for (var s = [], c = 0; c < n.postseasons.length; c++) s.push(<pg playoffIndex={c} />);
              o = <l.a.Fragment>{s}</l.a.Fragment>;
          }
          return (
            <div>
              <Jb
                element={
                  <div className="Stubs-All">
                    <div className="Stubs-Header">The Season is Over!</div>
                    <Kh dateString={null === (t = n.sim) || void 0 === t ? void 0 : t.nextPhaseTime} />
                    <div className="Stubs-Body">Postseason {i + 1} will begin soon.</div>
                  </div>
                }
                text="Offseason. Check for updates on the Discord!"
              />
              <Xh />
              {o}
            </div>
          );
        },
        Rw =
          (a(252),
          function () {
            var e = (
                <l.a.Fragment>
                  <h2 className="FAQ-Content-Header" id="general">
                    General
                  </h2>
                  <div className="FAQ-Question">
                    <h3 id="1" className="FAQ-Question-Header">
                      What is <i>Blaseball</i>?
                    </h3>
                    <i>Blaseball</i> is a splort in which 20 teams compete under the Internet League Blaseball
                    organization, day and night, rain or shine, and at the behest of us fans who vote to remake the
                    league in our own image.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="2" className="FAQ-Question-Header">
                      No, really— Out of character, <i>what is</i> <i>Blaseball</i>?
                    </h3>
                    <i>Blaseball</i> is a browser game developed by{" "}
                    <a href="https://twitter.com/thegameband" className="FAQ-Question-Link">
                      The Game Band
                    </a>
                    , about an absurdist simulation of baseball that is almost entirely depicted in text. Strange
                    features include random incinerations that force team players to be replaced, Forbidden Rule Books,
                    or peanuts raining from the sky that induce allergic reactions.
                    <br />
                    <br />
                    <i>Blaseball</i> is a fan simulator: you don’t play <i>Blaseball</i>, you watch it. Gameplay
                    involves choosing a favorite team, placing bets on simulated matches to earn coins (all in fictional
                    currency), then spending those coins to benefit your team at the end of the week. With luck and a
                    bit of strategizing with fellow fans, your team just might win the championship! (See{" "}
                    <a href="#gameplay" className="FAQ-Question-Link">
                      Gameplay
                    </a>{" "}
                    section for more)
                    <br />
                    <br />
                    Community & fandom involvement is also a huge draw. Because the presentation of <i>Blaseball</i> is
                    so bare, but the descriptions & names are so evocative, there is a wide gap of imagination that the
                    community has filled in with incredible art, fan lore, and more (we’re talkin’ music albums, radio
                    mockumentaries, play-by-play livestreams — the community is incredible).{" "}
                    <a
                      href="https://blaseball.fandom.com/wiki/<i>Blaseball</i>,_The_Internet_Blaseball_League_Wiki"
                      className="FAQ-Question-Link"
                    >
                      The Blaseball Wiki
                    </a>{" "}
                    and the{" "}
                    <a href="https://discord.com/invite/kmEGttm" className="FAQ-Question-Link">
                      Discord
                    </a>{" "}
                    are ideal places to start if this interests you the most.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="3" className="FAQ-Question-Header">
                      Why do people care about <i>Blaseball</i>?
                    </h3>
                    These articles from the first few weeks of <i>Blaseball</i> do a pretty good job at conveying what’s
                    so interesting about it:
                    <br />
                    <br />
                    <a
                      href="https://www.vice.com/en_us/article/n7w44w/blaseball-is-the-real-return-of-baseball"
                      className="FAQ-Question-Link"
                    >
                      <i>Blaseball is the Real Return of Baseball</i>
                    </a>{" "}
                    covers what the act of keeping up with simulated matches is like.
                    <br />
                    <br />
                    <a
                      href="https://www.polygon.com/features/2020/8/6/21357131/blaseball-fans-absurd-baseball-sim-the-game-band"
                      className="FAQ-Question-Link"
                    >
                      <i>An absurdist baseball game is tearing up the internet, thanks to fans</i>
                    </a>{" "}
                    covers writers’ & artists’ homemade contributions to <i>Blaseball</i>.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="4" className="FAQ-Question-Header">
                      Actually, I hate reading. Is there a video?
                    </h3>
                    Yeah, okay, pal. Discord user <i>Aluuvia</i> made this video called{" "}
                    <a href="https://www.youtube.com/watch?v=TqwvJbkVPhU" className="FAQ-Question-Link">
                      <i>Blaseball: A Fever Dream of a Cultural Event</i>
                    </a>{" "}
                    — which gives you a great overview of what playing <i>Blaseball</i> is like, and what early historic
                    events shaped the game & fandom.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="5" className="FAQ-Question-Header">
                      How long has this been going on?
                    </h3>
                    <i>Blaseball.com</i> opened on July 20, 2020. Seasons 1-3 ran the following three weeks, through
                    August 9. Season 3 is about the time that <i>Blaseball</i> exploded in popularity-- after Season 3,{" "}
                    <i>Blaseball</i>’s creators declared an “extended siesta” until August 24 to take care of technical
                    issues that pop up with so many people, plus take some much-needed rest. Season 4 started on August
                    24.
                    <br />
                    <br />
                    (For a timeline of in-game events, see{" "}
                    <a href="#events" className="FAQ-Question-Link">
                      Events
                    </a>{" "}
                    section)
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="6" className="FAQ-Question-Header">
                      How can I materially support <i>Blaseball</i>?
                    </h3>
                    <i>Blaseball</i> has a{" "}
                    <a href="https://www.patreon.com/blaseball" className="FAQ-Question-Link">
                      Patreon
                    </a>{" "}
                    where you can send them money every month and gain access to the Bloodhouse, a Discord clubhouse
                    channel where everyone talks about blood, as well as other rewards.
                    <br />
                    <br />
                    Official merchandise is currently in the works.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="7" className="FAQ-Question-Header">
                      How do I learn about official updates?
                    </h3>
                    Twitter or Discord. The Twitter account{" "}
                    <a href="https://twitter.com/blaseball" className="FAQ-Question-Link">
                      @Blaseball
                    </a>{" "}
                    announces news/updates, usually in the voice of a character called “
                    <a href="https://blaseball.fandom.com/wiki/The_Commissioner" className="FAQ-Question-Link">
                      The Commissioner
                    </a>
                    .” The Discord channel #announcements also features updates, usually posted by the{" "}
                    <a href="https://blaseball.fandom.com/wiki/Umpire#Named_Umpires" className="FAQ-Question-Link">
                      Umpires
                    </a>{" "}
                    who are both characters within <i>Blaseball</i> and the real designers of the game.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="8" className="FAQ-Question-Header">
                      Does fan lore actually “matter”?
                    </h3>
                    Yes, absolutely. The developers have stated{" "}
                    <a
                      href="https://www.polygon.com/features/2020/8/6/21357131/blaseball-fans-absurd-baseball-sim-the-game-band"
                      className="FAQ-Question-Link"
                    >
                      during interviews
                    </a>{" "}
                    that they encourage the “collaborative attitude” of fan interpretations to continue, and that they
                    believe in “a ‘Many Worlds’ interpretation...that leaves room for everyone.” Any respectful
                    additions you can make to the world of <i>Blaseball</i> is valid and encouraged.
                    <br />
                    <br />
                    Specifically, fan-created lore is regularly integrated into the game itself, with examples such as
                    the{" "}
                    <a href="https://blaseball.fandom.com/wiki/Legendary_Items#Season_1" className="FAQ-Question-Link">
                      Dial Tone and Vibe Check
                    </a>{" "}
                    and{" "}
                    <a href="https://blaseball.fandom.com/wiki/The_Grand_Unslam" className="FAQ-Question-Link">
                      The Grand Unslam
                    </a>
                    .
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="9" className="FAQ-Question-Header">
                      Can I follow this without understanding anything about real-life baseball?
                    </h3>
                    Absolutely. Many fans aren’t necessarily knowledgeable about baseball. Rooting for your team,
                    betting on games, or getting invested in events require no knowledge about the rules of baseball.
                    <br />
                    <br />
                    On the other hand, if you really want to follow play-by-plays closely, there are many existing
                    resources about making sense of baseball such as this YouTube video,{" "}
                    <a href="https://www.youtube.com/watch?v=skOsApsF0jQ" className="FAQ-Question-Link">
                      Rules of Baseball Explained
                    </a>
                    . <i>Blaseball</i> does have some key rule differences, but a basic understanding should keep you
                    covered.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="10" className="FAQ-Question-Header">
                      How do I… participate in the cultural event known as <i>Blaseball</i>?
                    </h3>
                    First thing’s first: sign up at <i>Blaseball.com</i> and choose your team. There’s no wrong team to
                    pick, and you can always change your mind later. (See also: the{" "}
                    <a href="#community" className="FAQ-Question-Link">
                      Community
                    </a>{" "}
                    section for{" "}
                    <a href="#" className="FAQ-Question-Link">
                      What team should I join?
                    </a>
                    )<br />
                    <br />
                    Of course, you can always participate by following the story, or making cool stuff, or adding to the
                    Wiki, or diving into stats, or helping out newcomers, or just telling your friends. And just like
                    doing The Wave, you’ll have a lot more fun with others than you would alone.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="11" className="FAQ-Question-Header">
                      Can I do a <i>Blaseball</i> now? Like right now?
                    </h3>
                    <i>Yes!</i> Seasons run every week from Monday-Saturday.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="12" className="FAQ-Question-Header">
                      What time zone are the <i>Blaseball</i> servers located?
                    </h3>
                    Pacific US time zone. When the site mentions times & dates, it’s Pacific US.
                  </div>
                </l.a.Fragment>
              ),
              t = (
                <l.a.Fragment>
                  <h2 className="FAQ-Content-Header" id="gameplay">
                    Gameplay
                  </h2>
                  <div className="FAQ-Question">
                    <h3 id="13" className="FAQ-Question-Header">
                      How do I play <i>Blaseball</i>?
                    </h3>
                    Technically, <i>you</i> can’t. The <i>Blaseball</i> players do. You will watch from the stands,
                    supporting your favorite team.
                    <br />
                    <br />
                    For clarity, usually “players” means the named characters on teams who play in matches, and “fans”
                    or “participants” means the people like you who watch & influence those matches.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="14" className="FAQ-Question-Header">
                      What can I do in <i>Blaseball</i>?
                    </h3>
                    You can earn coins by betting on matches. If your bet wins, you gain double (more-or-less).
                    Additionally, you earn passive income every time your favorite team wins. (See{" "}
                    <a href="#16" className="FAQ-Question-Link">
                      How can I get lots of coins?
                    </a>{" "}
                    for more)
                    <br />
                    <br />
                    Coins are used in the Shop to either buy other items that help your gambling in the long run, or buy
                    Votes.
                    <br />
                    <br />
                    Votes are spent on an election ballot that wraps up at the end of every season. You vote on decrees
                    and blessings that you want to see in action. (See{" "}
                    <a href="#19" className="FAQ-Question-Link">
                      What are decrees and blessings?
                    </a>{" "}
                    for more)
                    <br />
                    <br />
                    Throughout the season, you’ll watch the progress of matches, track your favorite team’s record, and
                    root for them along with the rest of the community. That’s most of the interaction inside the game.
                    But don’t forget that it’s still a living world full of underlying mysteries, storied interruptions,
                    and emergent narratives. Taking part in the{" "}
                    <a href="https://discord.com/invite/kmEGttm" className="FAQ-Question-Link">
                      Discord
                    </a>{" "}
                    is highly recommended for a fuller experience!
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="15" className="FAQ-Question-Header">
                      When do games happen? What is a season like?
                    </h3>
                    A season has 3 parts: the regular season, the postseason, and the election results. All of this
                    takes place within a real-life week, Monday to Sunday. (
                    <a href="https://blaseball.fandom.com/wiki/Blaseball#Structure" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )<br />
                    <br />
                    Specifically, individual games happen at the start of every hour. The regular season wraps up on
                    Friday and <i>Blaseball</i> takes a brief break. The playoffs begin on Saturday and run throughout
                    most of the day. (The exception to all of this is siestas & other unplanned downtime events.)
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="16" className="FAQ-Question-Header">
                      How can I get lots of coins?
                    </h3>
                    See this helpful doc from the Discord community:{" "}
                    <a
                      href="https://docs.google.com/document/d/1oKbsrZuXxyul4VzcWcZPwvC-HfpApDd1MjA9oBw0pzE/edit"
                      className="FAQ-Question-Link"
                    >
                      Blaseball Coin Making Guide for New Fans
                    </a>
                    . It covers items & betting strategy if you’re trying to maximize your payouts.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="17" className="FAQ-Question-Header">
                      Do the items in the Shop expire? (Passive Income Potion, High Roller Snake Oil…)
                    </h3>
                    No! These are permanent upgrades. Anything you buy in the Shop will carry over to the next season,
                    unless they are consumable items like Votes and Peanuts. (
                    <a href="https://blaseball.fandom.com/wiki/Shop" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="18" className="FAQ-Question-Header">
                      When do games stop? What is a siesta?
                    </h3>
                    A siesta is when the{" "}
                    <a href="https://blaseball.fandom.com/wiki/Umpire" className="FAQ-Question-Link">
                      umpires
                    </a>{" "}
                    declare an official pause to all games. This can be for out-of-universe reasons like the website
                    being overloaded, or in-universe reasons like a message from{" "}
                    <a href="https://blaseball.fandom.com/wiki/The_Peanut" className="FAQ-Question-Link">
                      The Peanut
                    </a>
                    . Sometimes the fun of <i>Blaseball</i> is that these reasons can be one and the same. (
                    <a href="https://blaseball.fandom.com/wiki/Siesta" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )<br />
                    <br />
                    Games are not in session on Sunday, when election results are revealed.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="19" className="FAQ-Question-Header">
                      What are decrees and blessings?
                    </h3>
                    Decrees are sweeping rule-changes to <i>Blaseball</i>, such as “retire the team in last place” or
                    “redistribute wealth from the top 1% every season.” Decree votes are collective and affect
                    everybody, regardless of what team you root for. Decrees are also typically how big changes in the
                    world get declared, such as{" "}
                    <a href="https://blaseball.fandom.com/wiki/Season_1#Decrees_2" className="FAQ-Question-Link">
                      umpires turning rogue
                    </a>{" "}
                    or{" "}
                    <a href="https://blaseball.fandom.com/wiki/Season_3#Decrees_2" className="FAQ-Question-Link">
                      Los Angeles tearing into infinite cities
                    </a>
                    . (
                    <a href="https://blaseball.fandom.com/wiki/Decree" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )<br />
                    <br />
                    Blessings are changes to individual team players, usually with the intent of helping one team
                    perform better next season, such as “give player a Legendary Bat and max out their batting stats” or
                    “steal the best pitcher in your league.” Blessing votes are tallied up per team and are awarded like
                    a raffle: more fans voting on a particular blessing means their team is more likely, but not
                    guaranteed, to win that blessing. (
                    <a href="https://blaseball.fandom.com/wiki/Blessing" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="20" className="FAQ-Question-Header">
                      What’s the point of winning a championship?
                    </h3>
                    Well. Okay. Sure. What’s the point of anything, huh?
                    <br />
                    <br />
                    Winning a championship does not provide any material changes to a team, such as bonus blessings. On
                    the other hand, it does feel really good to see your team make it to the finals and earn a
                    hard-fought victory. (Plus you get one free Vote ticket.)
                    <br />
                    <br />
                    The Rulebook mentions that any team who wins 3 times will “ascend” and that something else will
                    happen to <i>Blaseball</i> itself. The meaning of this is still a mystery. The Philly Pies and Hades
                    Tigers have won 2 championships each, making them the closest to achieving whatever this is.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="21" className="FAQ-Question-Header">
                      What are weather conditions?
                    </h3>
                    A weather condition affects every match, and weather is seemingly randomized for every match.
                    Weather conditions are generally meant to be a mystery, but the Wiki has pages that lay it out for
                    you if you really want to know: (
                    <a href="https://blaseball.fandom.com/wiki/Weather" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="22" className="FAQ-Question-Header">
                      What is Shame?
                    </h3>
                    Shame is a rule unique to <i>Blaseball</i>. When two teams are tied, the tiebreaker gets to continue
                    racking up points while the loser must be shamed by sitting through a game that they've already
                    lost. (
                    <a href="https://blaseball.fandom.com/wiki/Shame" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="23" className="FAQ-Question-Header">
                      Which teams are the Home Team and Away Team?
                    </h3>
                    For any live match, the team listed on top is the Away Team and the one listed on bottom is the Home
                    Team.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="24" className="FAQ-Question-Header">
                      What does lineup and rotation mean?
                    </h3>
                    You’ll see this on every team’s roster page. In short, lineup = batters and rotation = pitchers.
                    <br />
                    <br />
                    The lineup plays every game, and they go up to bat in the order listed. The rotation only selects
                    one pitcher to play each game, and pitchers cycle out per game in the order listed.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="25" className="FAQ-Question-Header">
                      What does it mean when the Live game log says (so-and-so baseball terminology)?
                    </h3>
                    The Wiki has a guide to the live game log, which is really helpful if you’re not super familiar with
                    baseball terminology. It explains phrases like “strike, looking” or “fielder’s choice”: (
                    <a href="https://blaseball.fandom.com/wiki/Game_Log" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="26" className="FAQ-Question-Header">
                      What do the icons mean in the Watch Live interface?
                    </h3>
                    Refer to these helpful diagrams, made by <i>daxleopard</i> from the Discord:
                    <img
                      src="https://lh6.googleusercontent.com/wSHniACO-lJdx5nBGjs8TGnHkuevzav0upnxuIyS6OAy4QyiSeVjNRj-TIOPT_5YQuZ_i7mIsEJ32ICHtdQMhYB_QUGBdPsdmR45__ecoZ9mctxkHvwAwHImJt73vALQKA"
                      className="FAQ-Question-Image"
                    />
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="27" className="FAQ-Question-Header">
                      Which teams make the playoffs when they have the same win-loss record?
                    </h3>
                    Currently, there’s a tie-breaker system called Divine Favor. It’s a priority list that determines
                    who wins a tie for qualifying for the playoffs. (
                    <a href="https://blaseball.fandom.com/wiki/Divine_Favor" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                </l.a.Fragment>
              ),
              a = (
                <l.a.Fragment>
                  <h2 className="FAQ-Content-Header" id="events">
                    Events & Recent Additions
                  </h2>
                  <div className="FAQ-Question">
                    <h3 id="28" className="FAQ-Question-Header">
                      Where can I find a timeline of major events?
                    </h3>
                    Currently, the Wiki has a lot of recorded events in various places. Until there is a discrete
                    Timeline article, the best place to start is by{" "}
                    <a href="https://blaseball.fandom.com/wiki/Category:History" className="FAQ-Question-Link">
                      reading up on each Season
                    </a>
                    , since there aren’t many so far. Take note of the Decrees and Notable Events listed for each
                    Season: those are usually major highlights.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="29" className="FAQ-Question-Header">
                      What are incinerations?
                    </h3>
                    Season 1 ended with{" "}
                    <a
                      href="https://blaseball.fandom.com/wiki/The_Book_of_Blaseball#Opening_the_Forbidden_Book"
                      className="FAQ-Question-Link"
                    >
                      Opening the Forbidden Book
                    </a>
                    . Like most forbidden things, there were consequences, including the addition of Rogue Umpires who
                    can incinerate any player under certain conditions. When this happens, the player is no more and
                    must immediately be replaced. (
                    <a href="https://blaseball.fandom.com/wiki/Incineration" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )<br />
                    <br />
                    If you want to think of players as merely numbers and not people, then incineration is basically
                    re-rolling for a new player. But you wouldn’t be so callous as <i>not</i> to grieve for a fallen
                    splortsman, would you?
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="30" className="FAQ-Question-Header">
                      What are peanuts?
                    </h3>
                    Short answer: it’s mostly still a mystery. There is no immediate effect to owning or using peanuts.
                    But it has a long history that offers some clues, such as “atonement” to the <i>Blaseball</i> Gods.
                    (
                    <a href="https://blaseball.fandom.com/wiki/Peanuts" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="31" className="FAQ-Question-Header">
                      Why are we in “The Discipline Era”?
                    </h3>
                    We, the fans, have so far committed two sins, or “strikes,” in the eyes of the <i>Blaseball</i>{" "}
                    Gods. The first is{" "}
                    <a
                      href="https://blaseball.fandom.com/wiki/The_Book_of_Blaseball#Opening_the_Forbidden_Book"
                      className="FAQ-Question-Link"
                    >
                      Opening the Forbidden Book
                    </a>{" "}
                    at the end of Season 1. This is when things in the world of <i>Blaseball</i> really started to get
                    weird, and when “The Discipline Era” first appeared on the in-game header.
                    <br />
                    <br />
                    The second strike is{" "}
                    <a href="https://blaseball.fandom.com/wiki/Blasphemy" className="FAQ-Question-Link">
                      Peanut Fraud
                    </a>
                    : a real-life incident in which at least one unidentified player took advantage of the{" "}
                    <i>Blaseball</i> API to cheat the game and was publicly called out by the umpires-- as well as by a
                    giant Peanut taking over the front page. (
                    <a href="https://blaseball.fandom.com/wiki/Peanut_Fraud" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )<br />
                    <br />
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="32" className="FAQ-Question-Header">
                      Who are the Unlimited Tacos? What happened to the Los Angeles Tacos?
                    </h3>
                    Season 3 involved a temporal anomaly called The Grand Unslam, during a match featuring the Los
                    Angeles Tacos. (
                    <a href="https://blaseball.fandom.com/wiki/The_Grand_Unslam" className="FAQ-Question-Link">
                      Read more
                    </a>
                    ) It’s generally believed that this was a real server shutdown that led to a glitch (in which the
                    Tacos tallied 100 games instead of the usual 99 games)-- that fans then wrote lore about-- that
                    developers then integrated into the story later that week. A fun time.
                    <br />
                    <br />
                    Season 3 ended with the announcement that “spacetime” tore over Los Angeles and split it into
                    “Infinite Cit(ies),” causing the team to be renamed the Unlimited Tacos. (
                    <a href="https://blaseball.fandom.com/wiki/Season_3#Decrees_2" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="33" className="FAQ-Question-Header">
                      Who or what is The Microphone?
                    </h3>
                    A new mystery introduced in Season 4. The Season 3 election ended with the passing of a decree
                    called Interviews, which opened up player stats & profiles on the website. But it also ominously
                    described: “The microphone is lifted.” A few days later, a new Twitter account called{" "}
                    <a href="https://twitter.com/BlaseballMic" className="FAQ-Question-Link">
                      The Microphone
                    </a>{" "}
                    appeared and seems to have the support of the official <i>Blaseball</i> account. So the
                    aforementioned, lifted microphone appears to be sentient. (
                    <a href="https://blaseball.fandom.com/wiki/The_Microphone" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="34" className="FAQ-Question-Header">
                      How do I learn about official updates?
                    </h3>
                    Twitter or Discord. The Twitter account{" "}
                    <a href="https://twitter.com/blaseball" className="FAQ-Question-Link">
                      @Blaseball
                    </a>{" "}
                    announces news/updates, usually in the voice of a character called “
                    <a href="https://blaseball.fandom.com/wiki/The_Commissioner" className="FAQ-Question-Link">
                      The Commissioner
                    </a>
                    .” The Discord channel #announcements also features updates, usually posted by the{" "}
                    <a href="https://blaseball.fandom.com/wiki/Umpire#Named_Umpires" className="FAQ-Question-Link">
                      Umpires
                    </a>{" "}
                    who are both characters within <i>Blaseball</i> and the real designers of the game.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="36" className="FAQ-Question-Header">
                      What does a player’s Vibes stat do?
                    </h3>
                    Introduced in Season 4, you can see any player’s Vibes by clicking on their name. It’s so new that
                    we aren’t sure what it does. It probably affects their performance, but that’s inconclusive. We do
                    know that Vibes go up or down at the start of every game, so they’re regularly fluctuating.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="37" className="FAQ-Question-Header">
                      What are Blagonballs?
                    </h3>
                    Introduced in Season 4, the blagonballs are a meta-textual item so far revealed on the Twitter and
                    on the Patreon. (
                    <a href="https://blaseball.fandom.com/wiki/Blagonballs" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )
                  </div>
                </l.a.Fragment>
              ),
              n = (
                <l.a.Fragment>
                  <h2 className="FAQ-Content-Header" id="community">
                    Community
                  </h2>
                  <div className="FAQ-Question">
                    <h3 id="38" className="FAQ-Question-Header">
                      What team should I join? What is the vibe of each team?
                    </h3>
                    We don’t have an easy way to answer this question yet! There are developing efforts to sum up the
                    personality of every team at a glance, but they aren’t ready yet. Some frequent advice includes:
                    Check out each team’s{" "}
                    <a href="https://blaseball.fandom.com/wiki/Teams" className="FAQ-Question-Link">
                      Wiki page
                    </a>
                    . Ask for personalized advice on Discord. Pick a city closest to you. Pick at a whim-- you can
                    always change your mind later.
                    <br />
                    <br />
                    Yellowstone Magic is one team with a{" "}
                    <a
                      href="https://docs.google.com/presentation/d/1-YxJDVA8L7aHkhcvBxsNtRUlvQVVlrydeA8ZTvvUve8/edit#slide=id.p"
                      className="FAQ-Question-Link"
                    >
                      Newbie Handbook
                    </a>{" "}
                    that includes helpful info! We will update as more resources become available.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="39" className="FAQ-Question-Header">
                      Who are umpires? Who are groundskeepers?
                    </h3>
                    Umpires are named characters who both represent high-level entities who answer to the{" "}
                    <i>Blaseball</i> Gods, as well as the real-life designers of the game. Think of them like Game
                    Masters. They communicate with people in the Discord in-character and announce updates about the
                    game, but are typically not available for direct questions or comments. (
                    <a href="https://blaseball.fandom.com/wiki/Umpire" className="FAQ-Question-Link">
                      Read more
                    </a>
                    )<br />
                    <br />
                    Groundskeepers (a.k.a. keepers) are found in the Discord and are moderators for the <i>
                      Blaseball
                    </i>{" "}
                    community. Is there greater lore for keepers? Who knows. You can see which keepers are online by
                    looking at the server’s Member List, and you can go to #discord-help if you need something in the
                    server. (Or direct message them any time if it’s something that requires privacy.)
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="40" className="FAQ-Question-Header">
                      What is the Wiki?
                    </h3>
                    The{" "}
                    <a
                      href="https://blaseball.fandom.com/wiki/Blaseball,_The_Internet_Blaseball_League_Wiki"
                      className="FAQ-Question-Link"
                    >
                      <i>Blaseball</i> Wiki
                    </a>{" "}
                    is a site designed to catalog historical & cultural elements of <i>Blaseball</i>, from a list of
                    every blessing ever named to fan lore about a player’s origin story. The Wiki is unofficial and
                    foremost a community effort, however it does have the <i>Blaseball</i> creators’ stamp of approval.
                    More info can be found in the Discord’s #fan-lore channel.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="41" className="FAQ-Question-Header">
                      What is SIBR?
                    </h3>
                    SIBR stands for Society for Internet Blaseball Research, an organized group of <i>Blaseball</i> fans
                    who archive & analyze game data such as player statistics, seasonal records, and lots of other
                    mechanisms under the hood. More info can be found at{" "}
                    <a
                      href="https://github.com/Society-for-Internet-Blaseball-Research/sibr-faq/blob/master/README.md"
                      className="FAQ-Question-Link"
                    >
                      SIBR’s FAQ
                    </a>
                    , plus pinned posts in the Discord’s #stats channel.
                    <br />
                    <br />
                    SIBR is indeed a parody of the baseball stat-collecting organization,{" "}
                    <a
                      href="https://en.wikipedia.org/wiki/Society_for_American_Baseball_Research"
                      className="FAQ-Question-Link"
                    >
                      SABR
                    </a>
                    .
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="42" className="FAQ-Question-Header">
                      What is Forbidden Knowledge?
                    </h3>
                    Forbidden Knowledge refers to gameplay elements that have been discovered within game code, but have
                    not been publicly announced or formally introduced. These elements are considered spoilers because
                    they may give away future surprises, or simply make <i>Blaseball</i> a lot less mysterious than
                    intended.
                    <br />
                    <br />
                    When discussing Forbidden Knowledge in the Discord, it is common courtesy to use spoiler tags. The
                    format for spoiler tags is: ||Hidden text goes here||.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="43" className="FAQ-Question-Header">
                      Why does the Discord have a word filter? Why can’t we use custom emotes?
                    </h3>
                    The creators believe that <i>Blaseball</i> should be a PG-13 experience, both for the sake of its
                    youngest fans, and to foster a friendly atmosphere of splortsmanship. Besides, with 10k+ members,
                    it’s more reasonable that we draw the line instead of allowing room for any potential abuse.
                    <br />
                    <br />
                    Notably, the absence of foul language or custom emotes have led the community to become more funny
                    and creative when it comes to team trash-talk and team cheers.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="44" className="FAQ-Question-Header">
                      What is “The Commissioner is doing a great job”?
                    </h3>
                    This is an oft-repeated line that comes from an early ticker message on <i>Blaseball</i>.com that
                    simply says, “The Commissioner is doing a great job!” It’s a catchy line that is easy to repeat
                    because-- as it turns out,{" "}
                    <a href="https://blaseball.fandom.com/wiki/The_Commissioner" className="FAQ-Question-Link">
                      The Commissioner
                    </a>{" "}
                    is in fact doing a great job.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="45" className="FAQ-Question-Header">
                      What are some other <i>Blaseball</i> memes that I should be aware of?
                    </h3>
                    “We are all love <i>Blaseball</i>” — Another unusual phrase that came from the early{" "}
                    <i>Blaseball</i> ticker & early tweets. I don’t think there’s any hidden meaning to its popularity;
                    it simply sounds funny, and we truly are, all, love <i>Blaseball</i>.<br />
                    <br />
                    “Incineration is the only way out” — It is established that <i>Blaseball</i> players do play
                    non-stop, literally for 100+ days every season. Soon after incineration was introduced, Discord
                    member bool joked that very line about fiery destruction being the only way to stop playing, and it
                    became an instant classic.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="46" className="FAQ-Question-Header">
                      What are some team-specific memes or cheers?
                    </h3>
                    Too many to cover in this FAQ! Each team does have a{" "}
                    <a href="https://blaseball.fandom.com/wiki/Teams" className="FAQ-Question-Link">
                      Wiki article
                    </a>{" "}
                    that records ‘fan culture,’ including cheers. However, your best bet might be to ask your fellow
                    fans inside your team’s channel on Discord to show you around.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="47" className="FAQ-Question-Header">
                      Are there official team accounts on social media?
                    </h3>
                    Not explicitly! The only official <i>Blaseball</i> account is{" "}
                    <a href="https://twitter.com/blaseball" className="FAQ-Question-Link">
                      @Blaseball
                    </a>{" "}
                    on Twitter. Many teams and players have accounts operated by fans, typically with the support of the
                    rest of their team. It’s best to ask in your team channel or elsewhere in the Discord if you have
                    more specific questions.
                    <br />
                    <br />
                    The Wiki has a collected list of <i>Blaseball</i> RP accounts on social media. Most accounts are on
                    Twitter. (
                    <a
                      href="https://blaseball.fandom.com/wiki/Team,_Player,_and_Staff_Social_Media_Accounts"
                      className="FAQ-Question-Link"
                    >
                      Read more
                    </a>
                    )
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="48" className="FAQ-Question-Header">
                      Who are the most popular & least popular teams?
                    </h3>
                    We don’t have access to accurate counts of the registered users on <i>Blaseball.com</i>. But we do
                    have user data from the Discord. If you go to #choose-your-team, the numbers displayed are good
                    representations of how “big” each team’s fandom is relative to one another.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="49" className="FAQ-Question-Header">
                      How can I contribute to <i>Blaseball</i> lore? Haven’t other fans written it all by now?
                    </h3>
                    <i>Blaseball</i>’s creators and Wiki management both support a ‘multiverse’ vision of{" "}
                    <i>Blaseball</i> where several interpretations can be true. This is even supported structurally in
                    the Wiki with{" "}
                    <a
                      href="https://blaseball.fandom.com/wiki/Interdimensional_Rumor_Mill"
                      className="FAQ-Question-Link"
                    >
                      “interdimensional” pages
                    </a>
                    . Additionally, <i>Blaseball</i> does gain fresh new players and new moments to write about every
                    single season. There’s a lot of uncovered territory; a lot of blank spaces in-between what the game
                    itself could possibly describe.
                    <br />
                    <br />
                    As long as you’re being respectful (i.e., not a jerk), <i>Blaseball</i>’s staff and community alike
                    are welcoming of all sorts of creative additions and re-interpretations.
                    <br />
                    <br />
                    Please keep in mind that the official community does impose PG-13 restrictions, for the sake of{" "}
                    <i>Blaseball</i>’s youngest fans. More explicit content should be kept to spaces outside of the
                    official Discord and the Wiki.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="50" className="FAQ-Question-Header">
                      How can I contribute to the <i>Blaseball</i> Wiki, in particular?
                    </h3>
                    The Wiki does have a{" "}
                    <a href="https://blaseball.fandom.com/wiki/Style_Guide" className="FAQ-Question-Link">
                      Style Guide
                    </a>{" "}
                    that you should read. Be aware that this is all still relatively very new, and consistent best
                    practices are being hashed out over time thanks to the efforts of folks in #fan-lore. Beyond that,
                    here are some worthwhile etiquette tips:
                    <br />
                    <br />
                    Before making major additions to the Wiki: It’s recommended that you open up your ideas to feedback
                    in either team chat (when it’s about your team), or in #fan-lore (when it’s broader than teams).
                    Sometimes an idea is covered by some obscure bit of canon; sometimes other fans can help connect
                    your ideas to existing character lore; etc. Collaboration is encouraged.
                    <br />
                    <br />
                    If you want to write lore about others’ teams, you should ask members of that team in #fan-lore.
                    Though in some cases, it’s best to simply let members of that team dictate their own stories.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="51" className="FAQ-Question-Header">
                      What if I want to draw a player but the Wiki has no description of them? (Or a description I’m not
                      into?
                    </h3>
                    It’s worth stating that none of the descriptions, images, pronouns, or histories of players on the
                    Wiki are “canon” in the traditional sense. Those are simply what took off within the community the
                    earliest. All depictions of all players are fair game.
                    <br />
                    <br />
                    Seriously, just draw whatever you want. There’s so much existing <i>Blaseball</i> art of players who
                    aren’t athletes; who aren’t human; who can’t even hold a bat. It’s a weird & silly universe already
                    so anything is within the realm of possibility. As always, though, you’re welcome to start a
                    conversation in your team chat or in #fanwork when you need ideas-- or perhaps if you want to know
                    how other artists tend to draw the team uniform, for example.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="52" className="FAQ-Question-Header">
                      Where should I post fan work I made (such as art, music, fics, etc)?
                    </h3>
                    We have a channel in Discord, #fanwork, just for this purpose. Share it in your team chat, too. And
                    on social media, of course-- fan-made stuff on Twitter gets retweeted by @Blaseball all the time.
                    Most folks use the hashtag #blaseball.
                    <br />
                    <br />
                    If you’re looking for a more permanent home besides the usual ephemeral social media, well, we don’t
                    have a perfect answer for that so far. The Wiki can be one such solution, as it already hosts lots
                    of fan art & external links to music. Pop by the #fan-lore channel if you’d like help with adding
                    your creative work to a relevant Wiki page.
                    <br />
                    <br />
                    There’s also a growing{" "}
                    <a href="https://blase.booru.org/" className="FAQ-Question-Link">
                      blase.booru
                    </a>{" "}
                    gallery where you should upload & tag any visual fan art.
                  </div>
                  <div className="FAQ-Question">
                    <h3 id="53" className="FAQ-Question-Header">
                      If I make <i>Blaseball</i> fan art or fan merch, can I sell my work?
                    </h3>
                    Yes! Please read this official statement released in August: (
                    <a
                      href="https://twitter.com/blaseballcomms/status/1294400162505187329"
                      className="FAQ-Question-Link"
                    >
                      Read more
                    </a>
                    )
                  </div>
                </l.a.Fragment>
              );
            return (
              <div className="FAQ">
                <h1 className="FAQ-Header">Frequently Asked Questions</h1>
                <div className="FAQ-Content">
                  <h2 className="FAQ-Content-Subheader">
                    <a href="#general">General</a>
                  </h2>
                  <ul className="FAQ-Content-List">
                    <li>
                      <a href="#1">
                        What is <i>Blaseball</i>?
                      </a>
                    </li>
                    <li>
                      <a href="#2">
                        No, really— Out of character, what is <i>Blaseball</i>?
                      </a>
                    </li>
                    <li>
                      <a href="#3">
                        Why do people care about <i>Blaseball</i>?
                      </a>
                    </li>
                    <li>
                      <a href="#4">Actually, I hate reading. Is there a video?</a>
                    </li>
                    <li>
                      <a href="#5">How long has this been going on?</a>
                    </li>
                    <li>
                      <a href="#6">
                        How can I materially support <i>Blaseball</i>?
                      </a>
                    </li>
                    <li>
                      <a href="#7">How do I learn about official updates?</a>
                    </li>
                    <li>
                      <a href="#8">Does fan lore actually “matter”?</a>
                    </li>
                    <li>
                      <a href="#9">Can I follow this without understanding anything about real-life baseball?</a>
                    </li>
                    <li>
                      <a href="#10">
                        How do I… participate in the cultural event known as <i>Blaseball</i>?
                      </a>
                    </li>
                    <li>
                      <a href="#11">
                        Can I do a <i>Blaseball</i> now? Like right now?
                      </a>
                    </li>
                    <li>
                      <a href="#12">
                        What time zone are the <i>Blaseball</i> servers located?
                      </a>
                    </li>
                  </ul>
                  <h2 className="FAQ-Content-Subheader">
                    <a href="#gameplay">Gameplay</a>
                  </h2>
                  <ul className="FAQ-Content-List">
                    <li>
                      <a href="#13">
                        How do I play <i>Blaseball</i>?
                      </a>
                    </li>
                    <li>
                      <a href="#14">
                        What can I do in <i>Blaseball</i>?
                      </a>
                    </li>
                    <li>
                      <a href="#15">When do games happen? What is a season like?</a>
                    </li>
                    <li>
                      <a href="#16">How can I get lots of coins?</a>
                    </li>
                    <li>
                      <a href="#17">Do the items in the Shop expire?</a>
                    </li>
                    <li>
                      <a href="#18">When do games stop? What is a siesta?</a>
                    </li>
                    <li>
                      <a href="#19">What are decrees and blessings?</a>
                    </li>
                    <li>
                      <a href="#20">What’s the point of winning a championship?</a>
                    </li>
                    <li>
                      <a href="#21">What are weather conditions?</a>
                    </li>
                    <li>
                      <a href="#22">What is Shame?</a>
                    </li>
                    <li>
                      <a href="#23">Which teams are the Home Team and Away Team?</a>
                    </li>
                    <li>
                      <a href="#24">What does lineup and rotation mean?</a>
                    </li>
                    <li>
                      <a href="#25">What does it mean when the Live game log says (so-and-so baseball terminology)?</a>
                    </li>
                    <li>
                      <a href="#26">What do the icons mean in the Watch Live interface?</a>
                    </li>
                    <li>
                      <a href="#27">Which teams make the playoffs when they have the same win-loss record?</a>
                    </li>
                  </ul>
                  <h2 className="FAQ-Content-Subheader">
                    <a href="#events">Events & Recent Additions</a>
                  </h2>
                  <ul className="FAQ-Content-List">
                    <li>
                      <a href="#28">Where can I find a timeline of major events?</a>
                    </li>
                    <li>
                      <a href="#29">What are incinerations?</a>
                    </li>
                    <li>
                      <a href="#30">What are peanuts?</a>
                    </li>
                    <li>
                      <a href="#31">Why are we in “The Discipline Era”?</a>
                    </li>
                    <li>
                      <a href="#32">Who are the Unlimited Tacos? What happened to the Los Angeles Tacos?</a>
                    </li>
                    <li>
                      <a href="#33">Who or what is The Microphone?</a>
                    </li>
                    <li>
                      <a href="#35">What does a player’s Vibes stat do?</a>
                    </li>
                    <li>
                      <a href="#37">What are Blagonballs?</a>
                    </li>
                  </ul>
                  <h2 className="FAQ-Content-Subheader">
                    <a href="#community">Community</a>
                  </h2>
                  <ul className="FAQ-Content-List">
                    <li>
                      <a href="#38">What team should I join? What is the vibe of each team?</a>
                    </li>
                    <li>
                      <a href="#39">Who are umpires? Who are groundskeepers?</a>
                    </li>
                    <li>
                      <a href="#40">What is the Wiki?</a>
                    </li>
                    <li>
                      <a href="#41">What is SIBR?</a>
                    </li>
                    <li>
                      <a href="#42">What is Forbidden Knowledge?</a>
                    </li>
                    <li>
                      <a href="#43">Why does the Discord have a word filter? Why can’t we use custom emotes?</a>
                    </li>
                    <li>
                      <a href="#44">What is “The Commissioner is doing a great job”?</a>
                    </li>
                    <li>
                      <a href="#45">
                        What are some other <i>Blaseball</i> memes that I should be aware of?
                      </a>
                    </li>
                    <li>
                      <a href="#46">What are some team-specific memes or cheers?</a>
                    </li>
                    <li>
                      <a href="#47">Are there official team accounts on social media?</a>
                    </li>
                    <li>
                      <a href="#48">Who are the most popular & least popular teams?</a>
                    </li>
                    <li>
                      <a href="#49">
                        How can I contribute to <i>Blaseball</i> lore? Haven’t other fans written it all by now?
                      </a>
                    </li>
                    <li>
                      <a href="#50">
                        How can I contribute to the <i>Blaseball</i> Wiki, in particular?
                      </a>
                    </li>
                    <li>
                      <a href="#51">
                        What if I want to draw a player but the Wiki has no description of them? (Or a description I’m
                        not into?)
                      </a>
                    </li>
                    <li>
                      <a href="#52">Where should I post fan work I made (such as art, music, fics, etc)?</a>
                    </li>
                    <li>
                      <a href="#53">
                        If I make <i>Blaseball</i> fan art or fan merch, can I sell my work?
                      </a>
                    </li>
                  </ul>
                  {e}
                  {t}
                  {a}
                  {n}
                  <h3 className="FAQ-Return">
                    <a href="#root" className="FAQ-Question-Link">
                      <ue.b /> Back to Top.
                    </a>
                  </h3>
                </div>
              </div>
            );
          }),
        Dw = function (e) {
          var t,
            a = e.path,
            n = Object(r.useContext)(S.context),
            i = void 0 !== n.sim && void 0 !== n.sim.season ? n.sim.season : -1,
            o = null;
          switch (a) {
            case "/leaderboard":
              o = <tg />;
              break;
            case "/standings":
              o = <ig />;
              break;
            case "/league":
              for (var s = [], c = 0; c < n.postseasons.length; c++) s.push(<pg playoffIndex={c} />);
              o = <l.a.Fragment>{s}</l.a.Fragment>;
          }
          return (
            <div>
              <Jb
                element={
                  <div className="Stubs-All">
                    <div className="Stubs-Header">Wild Card Evening</div>
                    <Kh dateString={null === (t = n.sim) || void 0 === t ? void 0 : t.nextPhaseTime} />
                    <div className="Stubs-Body">
                      The Wild Card round has ended. Postseason {i + 1} will continue soon.
                    </div>
                  </div>
                }
                text="Offseason. Check for updates on the Discord!"
              />
              <Xh />
              {o}
            </div>
          );
        },
        Fw = (a(253), a(123));
      function Qw(e, t) {
        var a = (e / t) * 100;
        return e >= 1e3 && a < 8 ? 8 : e >= 100 && a < 6 ? 6 : e >= 10 && a < 4 ? 4 : a < 2.5 ? 2.5 : a;
      }
      function jw(e) {
        return e > 70 ? "success" : e > 20 ? "warning" : "danger";
      }
      function Vw(e, t) {
        var a = 0,
          n = {
            Steal: 0,
            "Steal Home": 0,
            Run: 0,
            "Home Run": 0,
            Strike: 0,
            Foul: 0,
            "Strike Out": 0,
            "Fly Out": 0,
            "Ground Out": 0,
            Single: 0,
            Double: 0,
            Triple: 0,
            Quadruple: 0,
            Walk: 0,
            "Caught Stealing": 0,
            Ball: 0,
            "Sacrifice Fly": 0,
            Out: 0,
            Crows: 0,
            "Give Spirit": 0,
            "Big Peanut": 0,
            Blooddrain: 0,
            Allergy: 0,
            Incineration: 0,
            Feedback: 0,
            Reverb: 0,
            Unshelled: 0,
            Partying: 0,
            "Love Spell": 0,
            Yummy: 0,
            "Super Yummy": 0,
            "Super Allergy": 0,
            Rise: 0,
          };
        e.forEach(function (e) {
          if (t === e.teamTarget) {
            a += e.dmg;
            switch (e.dmgType) {
              case U.Steal:
                n.Steal = n.Steal + 1;
                break;
              case U.HomeSteal:
                n["Steal Home"] = n["Steal Home"] + 1;
                break;
              case U.Run:
                n.Run = n.Run + 1;
                break;
              case U.HomeRun:
                n["Home Run"] = n["Home Run"] + 1;
                break;
              case U.Strike:
                n.Strike = n.Strike + 1;
                break;
              case U.FoulBall:
                n.Foul = n.Foul + 1;
                break;
              case U.StrikeOut:
                n["Strike Out"] = n["Strike Out"] + 1;
                break;
              case U.FlyOut:
                n["Fly Out"] = n["Fly Out"] + 1;
                break;
              case U.GroundOut:
                n["Ground Out"] = n["Ground Out"] + 1;
                break;
              case U.Single:
                n.Single = n.Single + 1;
                break;
              case U.Double:
                n.Double = n.Double + 1;
                break;
              case U.Triple:
                n.Triple = n.Triple + 1;
                break;
              case U.Quadruple:
                n.Quadruple = n.Quadruple + 1;
                break;
              case U.Walk:
                n.Walk = n.Walk + 1;
                break;
              case U.CaughtStealing:
                n["Caught Stealing"] = n["Caught Stealing"] + 1;
                break;
              case U.Ball:
                n.Ball = n.Ball + 1;
                break;
              case U.SacrificeFly:
                n["Sacrifice Fly"] = n["Sacrifice Fly"] + 1;
                break;
              case U.Out:
                n.Out = n.Out + 1;
                break;
              case U.CurseOfCrows:
                n.Crows = n.Crows + 1;
                break;
              case U.GiveSpirit:
                n["Give Spirit"] = n["Give Spirit"] + 1;
                break;
              case U.BigPeanut:
                n["Big Peanut"] = n["Big Peanut"] + 1;
                break;
              case U.BloodDrain:
                n.Blooddrain = n.Blooddrain + 1;
                break;
              case U.PeanutSwallowed:
                n.Allergy = n.Allergy + 1;
                break;
              case U.Incineration:
                n.Incineration = n.Incineration + 1;
                break;
              case U.Feedback:
                n.Feedback = n.Feedback + 1;
                break;
              case U.Reverb:
                n.Reverb = n.Reverb + 1;
                break;
              case U.Unshelled:
                n.Unshelled = n.Unshelled + 1;
                break;
              case U.Partying:
                n.Partying = n.Partying + 1;
                break;
              case U.LoveSpell:
                n["Love Spell"] = n["Love Spell"] + 1;
                break;
              case U.PeanutYummy:
                n.Yummy = n.Yummy + 1;
                break;
              case U.SuperPeanutYummy:
                n["Super Yummy"] = n["Super Yummy"] + 1;
                break;
              case U.SuperPeanutAllergic:
                n["Super Allergy"] = n["Super Allergy"] + 1;
                break;
              case U.Rebirth:
                n.Rise = n.Rise + 1;
            }
          }
        });
        var r = Object.entries(n).filter(function (e) {
            return e[1] > 0;
          })[0],
          i = "",
          o = !1;
        return (
          (i = Math.abs(a) > 2e3 ? "Large" : Math.abs(a) > 1e3 ? "Medium" : "Small"),
          a < 0 && (o = !0),
          0 === a ? (
            ""
          ) : (
            <l.a.Fragment>
              <span className={"BossFightWidget-Log-Damage-" + i + (o ? "-Heal" : "-Hurt")}>
                {o ? "+" : "-"}
                {ad(Math.abs(a))}
              </span>{" "}
              ({r[0].toUpperCase()}
              {r[1] > 1 ? " x".concat(r[1]) : ""})
            </l.a.Fragment>
          )
        );
      }
      function Ww(e) {
        return <Uw data={e.data} />;
      }
      function Uw(e) {
        var t,
          a,
          n = e.data,
          i =
            (Object(r.useContext)(M.context).user,
            Object(r.useContext)(Y.context).activeBets,
            {
              started: (a = n).gameStart,
              complete: a.gameComplete,
              shame: a.shame,
              inning: a.inning,
              topOfInning: a.topOfInning,
              outs: a.halfInningOuts,
              outsNeeded: a.topOfInning ? a.awayOuts : a.homeOuts,
              balls: a.atBatBalls,
              ballsNeeded: a.topOfInning ? a.awayBalls : a.homeBalls,
              strikes: a.atBatStrikes,
              strikesNeeded: a.topOfInning ? a.awayStrikes : a.homeStrikes,
              bases: a.topOfInning ? a.awayBases : a.homeBases,
              weather: a.weather,
              playCount: a.playCount,
            }),
          o = (function (e) {
            var t, a;
            if (e.complete) (a = "Complete"), (t = "Final" + (e.inning <= 9 ? "" : " (".concat(e.inning + 1, ")")));
            else if (e.started) {
              a = "Live";
              var n = e.topOfInning ? "\u25b2" : "\u25bc";
              t = "Live - ".concat(e.inning + 1, " ").concat(n);
            } else (t = "Upcoming"), (a = "Upcoming");
            return (
              <div className="BossFightWidget-StatusBar">
                <div className={"BossFightWidget-Status BossFightWidget-Status--".concat(a)}>{t}</div>
                {e.started ? <Xu type={e.weather} tooltip={!0} /> : null}
              </div>
            );
          })(i),
          u = (function (e) {
            for (var t = [], a = 0; a < e.ballsNeeded - 1; a++)
              t.push(
                <div className="GameWidget-Outs-Dots" key={a}>
                  {a < e.balls ? "\u25cf" : "\u25cb"}
                </div>
              );
            for (var n = [], r = 0; r < e.strikesNeeded - 1; r++)
              n.push(
                <div className="GameWidget-Outs-Dots" key={r}>
                  {r < e.strikes ? "\u25cf" : "\u25cb"}
                </div>
              );
            for (var i = [], o = 0; o < e.outsNeeded - 1; o++)
              i.push(
                <div className="GameWidget-Outs-Dots" key={o}>
                  {o < e.outs ? "\u25cf" : "\u25cb"}
                </div>
              );
            return (
              <l.a.Fragment>
                <div className="BossFightWidget-Outs-Row">
                  <div className="BossFightWidget-Outs-Label">Balls</div>
                  <div className="BossFightWidget-Outs-DotList">{t}</div>
                </div>
                <div className="BossFightWidget-Outs-Row">
                  <div className="BossFightWidget-Outs-Label">Strikes</div>
                  <div className="BossFightWidget-Outs-DotList">{n}</div>
                </div>
                <div className="BossFightWidget-Outs-Row">
                  <div className="BossFightWidget-Outs-Label">Outs</div>
                  <div className="BossFightWidget-Outs-DotList">{i}</div>
                </div>
              </l.a.Fragment>
            );
          })(i),
          m = Object(r.useContext)(hs.context),
          d = Object(r.useState)([]),
          f = Object(s.a)(d, 2),
          h = f[0],
          g = f[1],
          p = Object(r.useState)(""),
          E = Object(s.a)(p, 2),
          v = E[0],
          b = E[1],
          w = Object(r.useState)(""),
          y = Object(s.a)(w, 2),
          B = y[0],
          O = y[1];
        Object(r.useEffect)(
          function () {
            var e = JSON.parse(n.damageResults);
            if (void 0 !== e) {
              g(e);
              for (
                var t = -1,
                  a = -1,
                  r = function (e) {
                    return e > 2e3 ? 2 : e > 500 ? 1 : 0;
                  },
                  l = function (e) {
                    return 2 === e
                      ? " BossFightWidget-ScoreName-Shake-Large"
                      : 1 === e
                      ? " BossFightWidget-ScoreName-Shake-Medium"
                      : 0 === e
                      ? " BossFightWidget-ScoreName-Shake-Small"
                      : "";
                  },
                  i = e.length - 1;
                i >= 0;
                i--
              )
                n.awayTeam === e[i].teamTarget && (t = Math.max(t, r(e[i].dmg))),
                  n.homeTeam === e[i].teamTarget && (a = Math.max(a, r(e[i].dmg)));
              O(l(t)), b(l(a));
            }
          },
          [n.damageResults]
        );
        var I = n.topOfInning ? n.awayTeamColor : n.homeTeamColor,
          S = n.topOfInning ? n.homeTeamColor : n.awayTeamColor,
          C = (function (e) {
            return e.homeScore;
          })(n),
          k = (function (e) {
            return e.awayScore;
          })(n);
        function N() {
          return n.homeScore > n.awayScore ? n.awayTeam : n.homeTeam;
        }
        function T() {
          return n.homeScore > n.awayScore ? n.homeTeamNickname : n.awayTeamNickname;
        }
        C > k && n.gameComplete, k > C && n.gameComplete;
        var x = (function (e) {
            for (
              var t = {
                  onFirst: !1,
                  onSecond: !1,
                  onThird: !1,
                  onFourth: !1,
                  playerOnFirst: void 0,
                  playerOnSecond: void 0,
                  playerOnThird: void 0,
                  playerOnFourth: void 0,
                  modOnFirst: "",
                  modOnSecond: "",
                  modOnThird: "",
                  modOnFourth: "",
                },
                a = 0;
              a < e.baserunnerCount;
              a++
            ) {
              var n = e.baseRunnerNames[a];
              switch (e.basesOccupied[a]) {
                case 0:
                  (t.onFirst = !0), (t.playerOnFirst = n);
                  break;
                case 1:
                  (t.onSecond = !0), (t.playerOnSecond = n);
                  break;
                case 2:
                  (t.onThird = !0), (t.playerOnThird = n);
                  break;
                case 3:
                  (t.onFourth = !0), (t.playerOnFourth = n);
              }
            }
            return t;
          })(n),
          P = "";
        x.onFirst && (P += " first"), x.onSecond && (P += " second"), x.onThird && (P += " third");
        var L,
          R,
          D,
          F,
          Q = <div className="BossFightWidget-Outs">{u}</div>,
          j = Object(c.g)(),
          V =
            i.complete || !i.started ? (
              <div />
            ) : (
              <div className="BossFightWidget-AtBat">
                <div className="BossFightWidget-PlayerLine">
                  <div className="BossFightWidget-PlayerStatusIcon BossFightWidget-PlayerStatusIcon--Pitching" />
                  <div className="BossFightWidget-PlayerStatusLabel">Pitching</div>
                  <div className="BossFightWidget-PlayerLineNameWrapper" style={{ background: kA(S, 0.5) }}>
                    <A
                      background={j}
                      path={"/player/".concat(n.topOfInning ? n.homePitcher : n.awayPitcher)}
                      className="BossFightWidget-PlayerLineName"
                    >
                      {n.topOfInning ? n.homePitcherName : n.awayPitcherName}
                    </A>
                  </div>
                </div>
                <div className="BossFightWidget-PlayerLine">
                  <div className="BossFightWidget-PlayerStatusIcon BossFightWidget-PlayerStatusIcon--Batting" />
                  <div className="BossFightWidget-PlayerStatusLabel">Batting</div>
                  <div className="BossFightWidget-PlayerLineNameWrapper" style={{ background: kA(I, 0.5) }}>
                    {n.homeBatterName || n.awayBatterName ? (
                      <A
                        background={j}
                        path={"/player/".concat(n.topOfInning ? n.awayBatter : n.homeBatter)}
                        className="BossFightWidget-PlayerLineName"
                      >
                        {n.topOfInning ? n.awayBatterName : n.homeBatterName}
                      </A>
                    ) : (
                      <div className="BossFightWidget-PlayerLineName">-</div>
                    )}
                  </div>
                </div>
              </div>
            ),
          W = null,
          U = i.started ? "BossFightWidget-Full-Live" : "BossFightWidget-Full-Upcoming",
          G = n.isPostseason
            ? "Game ".concat(n.seriesIndex, " - Best of ").concat(n.seriesLength)
            : "Game ".concat(n.seriesIndex, " of ").concat(n.seriesLength);
        if (i.complete) {
          var H =
            (n.homeScore > n.awayScore ? n.homeTeam : n.awayTeam) === n.homeTeam
              ? n.homeOdds - n.awayOdds
              : n.awayOdds - n.homeOdds;
          W = (
            <div className="BossFightWidget-Outcome">
              <div className="BossFightWidget-Outcome-Blurb">
                The{" "}
                {
                  ((D = T()),
                  (F = H) > 0.25
                    ? (function (e) {
                        switch (e) {
                          case "Wild Wings":
                            return "heavily flavored";
                          case "Mild Wings":
                            return "heavily but mildly flavored";
                        }
                        return "heavily favored";
                      })(D)
                    : F > 0
                    ? (function (e) {
                        switch (e) {
                          case "Wild Wings":
                            return "flavored";
                          case "Mild Wings":
                            return "mildly flavored";
                        }
                        return "favored";
                      })(D)
                    : F < -0.25
                    ? "heavy underdog"
                    : F < 0
                    ? "underdog"
                    : "")
                }
                 
                <span
                  className="BossFightWidget-Outcome-Callout"
                  style={{ color: n.homeScore > n.awayScore ? n.homeTeamSecondaryColor : n.awayTeamSecondaryColor }}
                >
                  {T()}
                </span>
                 won the game.
              </div>
              {n.shame ? (
                <div className="BossFightWidget-Outcome-Blurb">
                  The  
                  <span
                    className="BossFightWidget-Outcome-Callout"
                    style={{
                      color:
                        ((R = N()),
                        R === n.homeTeam
                          ? n.homeTeamSecondaryColor
                          : R === n.awayTeam
                          ? n.awayTeamSecondaryColor
                          : "Null Color"),
                    }}
                  >
                    {(function (e) {
                      return e === n.homeTeam
                        ? n.homeTeamNickname
                        : e === n.awayTeam
                        ? n.awayTeamNickname
                        : "Null Team";
                    })(N())}
                  </span>
                   were <span className="BossFightWidget-Outcome-Callout"> shamed!</span>
                </div>
              ) : null}
              {void 0 !== n.outcomes && n.outcomes.length > 0
                ? n.outcomes.map(function (e, t) {
                    return (
                      <div key={t} className="BossFightWidget-Outcome-Blurb">
                        {e}
                      </div>
                    );
                  })
                : null}
            </div>
          );
        } else
          W = (
            <div className="BossFightWidget-Display-Visual">
              <div className="BossFightWidget-Display-Body">
                {!i.complete && i.started && (
                  <l.a.Fragment>
                    {
                      ((L = x),
                      (
                        <div className={"BossFightWidget-Bases" + P}>
                          <div id="tooltip" style={{ display: "none", position: "absolute" }} />
                          <svg viewBox="0 0 255 197" version="1.1">
                            <Ct.a
                              key="bottom-1"
                              placement="bottom"
                              overlay={
                                <St.a id="tooltip-bottom">
                                  <strong>{L.playerOnFirst}</strong>
                                </St.a>
                              }
                            >
                              <g
                                id="base1"
                                className="st0"
                                transform="matrix(0.7071,-0.7071,0.7071,0.7071,-40.4706,152.625)"
                              >
                                <rect x="141.95" y="105.74" width="70.31" height="70.31" />
                              </g>
                            </Ct.a>
                            <Ct.a
                              key="top"
                              placement="top"
                              overlay={
                                <St.a id="tooltip-bottom">
                                  <strong>{L.playerOnSecond}</strong>
                                </St.a>
                              }
                            >
                              <g
                                id="base2"
                                className="st0"
                                transform="matrix(0.7071,-0.7071,0.7071,0.7071,-16.7558,95.4764)"
                              >
                                <rect x="84.83" y="48.54" width="70.31" height="70.31" />
                              </g>
                            </Ct.a>
                            <Ct.a
                              key="bottom-2"
                              placement="bottom"
                              overlay={
                                <St.a id="tooltip-bottom">
                                  <strong>{L.playerOnThird}</strong>
                                </St.a>
                              }
                            >
                              <g
                                id="base3"
                                className="st0"
                                transform="matrix(0.7071,-0.7071,0.7071,0.7071,-74.0296,71.6061)"
                              >
                                <rect x="27.38" y="105.74" width="70.31" height="70.31" />
                              </g>
                            </Ct.a>
                          </svg>
                        </div>
                      ))
                    }
                    {Q}
                    {V}
                    <div className="BossFightWidget-Log">{n.lastUpdate}</div>
                  </l.a.Fragment>
                )}
              </div>
            </div>
          );
        var z = null;
        i.started &&
          (z = (
            <div className="BossFightWidget-Log">
              <div className="BossFightWidget-Log-Header">Game Log</div>
              <div className="BossFightWidget-Log-Content">{n.lastUpdate}</div>
            </div>
          ));
        var X = Qw(n.homeHp, n.homeMaxHp),
          J = Qw(n.awayHp, n.awayMaxHp),
          Z = (
            <div className={"BossFightWidget-ScoreTeamColorBar" + v} style={{ background: n.homeTeamColor }}>
              {FA(n.homeTeamEmoji)}
            </div>
          ),
          q = (
            <div className={"BossFightWidget-ScoreName" + v} style={{ color: n.homeTeamSecondaryColor }}>
              {n.homeTeamName}
            </div>
          ),
          K = (
            <div className={"BossFightWidget-ScoreTeamColorBar" + B} style={{ background: n.awayTeamColor }}>
              {FA(n.awayTeamEmoji)}
            </div>
          ),
          $ = (
            <div className={"BossFightWidget-ScoreName" + B} style={{ color: n.awayTeamSecondaryColor }}>
              {n.awayTeamName}
            </div>
          ),
          ee = Ju(n.weather);
        ee.includes(" ") && (ee = ee.replace(" ", ""));
        var te,
          ae = " BossFightWidget-Weather-" + ee,
          ne =
            (te = J) < 5
              ? 0.15
              : te < 10
              ? 0.1
              : te < 20
              ? 0.08
              : te < 30
              ? 0.06
              : te < 40
              ? 0.04
              : te < 50
              ? 0.02
              : te < 60
              ? 0.01
              : 0;
        return (
          <div className={"BossFightWidget ".concat(i.complete ? "IsComplete" : "")}>
            <div className={"BossFightWidget-Weather" + ae}>
              {ne > 0 ? <_.wb className="BossFightWidget-UnknownEntity" style={{ opacity: ne }} /> : null}
              <div className="BossFightWidget-Enemy">
                <div className="BossFightWidget-Enemy-Icon">
                  <_.oc />
                </div>
                <div className="BossFightWidget-Enemy-Body">
                  <div className="BossFightWidget-Enemy-RedLine">
                    {null === m || void 0 === m || null === (t = m.doc) || void 0 === t ? void 0 : t.zeta}
                  </div>
                </div>
              </div>
            </div>
            <div className="BossFightWidget-Container">
              <div className="BossFightWidget-Header-Wrapper">
                <div className="BossFightWidget-Header">
                  {o}
                  <div className="BossFightWidget-ScoreLabel BossFightWidget-ScoreLabel--Series">{G}</div>
                </div>
                <div className="BossFightWidget-Names">
                  <A background={j} path={"/team/".concat(n.awayTeam)} className="BossFightWidget-ScoreLine">
                    {K}
                    <div className="BossFightWidget-ScoreTeam">
                      {$}
                      <div className="BossFightWidget-Names-Spirit">
                        <Fw.a now={J} label={ad(n.awayHp)} variant={jw(J)} className="BossFightWidget-SpiritBar" />
                      </div>
                    </div>
                    <div className="BossFightWidget-SpiritDamage">
                      {null !== n.damageResults && "" !== n.damageResults ? Vw(h, n.awayTeam) : null}
                    </div>
                  </A>
                </div>
                <div className="BossFightWidget-Names">
                  <A background={j} path={"/team/".concat(n.homeTeam)} className="BossFightWidget-ScoreLine">
                    {Z}
                    <div className="BossFightWidget-ScoreTeam">
                      {q}
                      <div className="BossFightWidget-Names-Spirit">
                        <Fw.a now={X} label={ad(n.homeHp)} variant={jw(X)} className="BossFightWidget-SpiritBar" />
                      </div>
                    </div>
                    <div className="BossFightWidget-SpiritDamage">
                      {null !== n.damageResults && "" !== n.damageResults ? Vw(h, n.homeTeam) : null}
                    </div>
                  </A>
                </div>
              </div>
              <div className="BossFightWidget-Log-Container">
                {W}
                <div className={U}>{z}</div>
              </div>
            </div>
          </div>
        );
      }
      !(function (e) {
        (e[(e.Live = 0)] = "Live"),
          (e[(e.Upcoming = 1)] = "Upcoming"),
          (e[(e.Standings = 2)] = "Standings"),
          (e[(e.Leaderboard = 3)] = "Leaderboard");
      })(Tw || (Tw = {}));
      var Gw,
        Hw = function (e) {
          e.path;
          var t,
            a = Object(r.useContext)(S.context),
            n = (Object(r.useContext)(M.context).user, Object(r.useContext)(Y.context), void 0 === a.schedule);
          if (!a.sim) return null;
          var i = a.schedule,
            o =
              void 0 == a ? null : (
                <ul>
                  {null === (t = a.schedule) || void 0 === t
                    ? void 0
                    : t.map(function (e) {
                        return <Ww data={e} />;
                      })}
                </ul>
              ),
            s =
              void 0 === i || (void 0 !== i && i.length <= 0) ? (
                <div className="League-Body">There are no season games scheduled for Day X.</div>
              ) : (
                <div>{o}</div>
              ),
            c = void 0 !== a && void 0 !== a.sim ? a.sim.season : -1,
            u = n ? <js /> : s;
          return (
            <l.a.Fragment>
              <h2 className="League-Header">
                Season<span className="League-Number League-Number-Red">{c + 1}</span>Day
                <span className="League-Number League-Number-Red">X</span>
              </h2>
              <Hh />
              {u}
            </l.a.Fragment>
          );
        };
      a(84);
      function Yw() {
        var e = Object(r.useContext)(S.context);
        if (!e || !e.sim) return null;
        var t = e.tournament;
        return t ? (
          <div className="Tournament-List">
            <zw teams={null === t || void 0 === t ? void 0 : t.teams} />
          </div>
        ) : null;
      }
      function zw(e) {
        var t = e.teams.map(function (e, t) {
          return <Xw key={t} team={e} />;
        });
        return (
          <div className="Standings-Division">
            <ul className="Standings-Team-Container">{t}</ul>
          </div>
        );
      }
      function Xw(e) {
        var t = Object(c.g)(),
          a = Object(r.useContext)(xo.context),
          n = Object(r.useContext)(M.context).user,
          i = a.teams.find(function (t) {
            return t.id === e.team;
          });
        return void 0 === i ? null : (
          <A
            background={t}
            path={"/team/".concat(i.id)}
            className={"Standings-Team" + (n.lightMode ? " Standings-Team-LightMode" : "")}
          >
            <div className="Standings-Team-Name-Container">
              <div className="Standings-Team-Color" style={{ background: i.mainColor }}>
                <div className="Standings-Team-Emoji">{DA(i)}</div>
              </div>
              <div
                className={"Standings-Team-Name" + (n.lightMode ? " Standings-Team-Name-LightMode" : "")}
                style={{
                  color: n.lightMode ? "#000000" : i.secondaryColor,
                  background: n.lightMode ? i.secondaryColor : "none",
                  padding: n.lightMode ? "0 8px" : "initial",
                }}
              >
                {i.fullName}
              </div>
            </div>
          </A>
        );
      }
      !(function (e) {
        (e[(e.Live = 0)] = "Live"),
          (e[(e.Upcoming = 1)] = "Upcoming"),
          (e[(e.Tournament = 2)] = "Tournament"),
          (e[(e.Leaderboard = 3)] = "Leaderboard"),
          (e[(e.Bracket = 4)] = "Bracket");
      })(Gw || (Gw = {}));
      var Jw,
        Zw = function (e) {
          var t,
            a = e.path,
            n = Object(r.useContext)(S.context),
            i = Object(r.useContext)(M.context).user,
            o = Object(r.useContext)(Y.context),
            s = void 0 === n.schedule,
            c = n.tournament;
          if (void 0 === c) return null;
          function u() {
            switch (a) {
              case "/upcoming":
                return Gw.Upcoming;
              case "/leaderboard":
                return Gw.Leaderboard;
              case "/tournament":
                return Gw.Tournament;
              case "/bracket":
                return Gw.Bracket;
              default:
                return Gw.Live;
            }
          }
          if (!n.sim) return null;
          var m,
            A = u() === Gw.Upcoming ? n.tomorrowSchedule : n.schedule,
            d = u() === Gw.Live ? n.postseasons[0].matchups : n.postseasons[0].tomorrowMatchups,
            f = u() === Gw.Upcoming ? n.sim.day + 1 : n.sim.day,
            h =
              void 0 === A ? null : (
                <ul>
                  {null ===
                    (t = (function () {
                      var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                      if (!i || !o || void 0 === e) return e;
                      for (var t = [], a = 0; a < e.length; a++) t.push(e[a]);
                      return (
                        t.sort(),
                        (t = t.sort(function (e, t) {
                          var a = e.homeTeam == i.favoriteTeam || e.awayTeam == i.favoriteTeam,
                            n = t.homeTeam == i.favoriteTeam || t.awayTeam == i.favoriteTeam;
                          if (a) return -1;
                          if (n) return 1;
                          if (!e.gameComplete && t.gameComplete) return -1;
                          if (e.gameComplete && !t.gameComplete) return 1;
                          var r = void 0 !== o[e.id] && o[e.id].length > 0,
                            l = void 0 !== o[t.id] && o[t.id].length > 0,
                            s = r ? o[e.id][0] : void 0,
                            c = l ? o[t.id][0] : void 0;
                          if (r && l) {
                            if (s.amount > c.amount) return -1;
                            if (c.amount > s.amount) return 1;
                          } else {
                            if (r) return -1;
                            if (l) return 1;
                          }
                          return Math.max(e.homeOdds, e.awayOdds) > Math.max(t.homeOdds, t.awayOdds) ? -1 : 1;
                        }))
                      );
                    })(A)) || void 0 === t
                    ? void 0
                    : t.map(function (e, t) {
                        return <vh index={t} key={t} data={e} matchups={d} />;
                      })}
                </ul>
              ),
            g =
              void 0 === A || (void 0 !== A && A.length <= 0) ? (
                <div className="League-Body">There are no tournament games scheduled for Day {f + 1}.</div>
              ) : (
                <div>
                  <div className="League-Countdown">
                    {u() === Gw.Upcoming ? <Kh dateString={xA().toString()} /> : null}
                  </div>
                  {h}
                </div>
              );
          void 0 !== n && void 0 !== n.sim && n.sim.season;
          switch (u()) {
            case Gw.Leaderboard:
              m = <tg />;
              break;
            case Gw.Tournament:
              m = <Yw />;
              break;
            case Gw.Bracket:
              for (var p = [], E = 0; E < n.postseasons.length; E++) p.push(<pg playoffIndex={E} />);
              m = <l.a.Fragment>{p}</l.a.Fragment>;
              break;
            case Gw.Live:
            case Gw.Upcoming:
              m = s ? <js /> : g;
          }
          return (
            <div>
              <h2 className="League-Header">{null === c || void 0 === c ? void 0 : c.name}</h2>
              <Jh />
              {m}
            </div>
          );
        },
        qw = function (e) {
          var t,
            a = e.path,
            n = Object(r.useContext)(S.context),
            i = n.tournament;
          if (void 0 === i) return null;
          var o = null;
          switch (a) {
            case "/leaderboard":
              o = <tg />;
              break;
            case "/tournament":
              o = <Yw />;
              break;
            case "/league":
              for (var s = [], c = 0; c < n.postseasons.length; c++) s.push(<pg playoffIndex={c} />);
              o = <l.a.Fragment>{s}</l.a.Fragment>;
          }
          return (
            <l.a.Fragment>
              <Jb
                element={
                  <div className="Stubs-All">
                    <h2 className="League-Header">{null === i || void 0 === i ? void 0 : i.name}</h2>
                    <Kh dateString={null === (t = n.sim) || void 0 === t ? void 0 : t.nextPhaseTime} />
                    <div className="Stubs-Body">
                      {null === i || void 0 === i ? void 0 : i.name} will begin soon. Cool!
                    </div>
                  </div>
                }
                text="Offseason. Check for updates on the Discord!"
              />
              <Gh />
              <Zh />
              {o}
            </l.a.Fragment>
          );
        },
        Kw = function (e) {
          var t,
            a = e.path,
            n = Object(r.useContext)(S.context),
            i = n.tournament;
          if (void 0 === i) return null;
          var o = null;
          switch (a) {
            case "/leaderboard":
              o = <tg />;
              break;
            case "/tournament":
              o = <Yw />;
              break;
            case "/league":
              for (var s = [], c = 0; c < n.postseasons.length; c++) s.push(<pg playoffIndex={c} />);
              o = <l.a.Fragment>{s}</l.a.Fragment>;
          }
          return (
            <l.a.Fragment>
              <Jb
                element={
                  <div className="Stubs-All">
                    <h2 className="League-Header">{null === i || void 0 === i ? void 0 : i.name}</h2>
                    <Kh dateString={null === (t = n.sim) || void 0 === t ? void 0 : t.nextPhaseTime} />
                    <div className="Stubs-Body">
                      Coffee Break! {null === i || void 0 === i ? void 0 : i.name} will continue soon. Cool!
                    </div>
                  </div>
                }
                text="Offseason. Check for updates on the Discord!"
              />
              <Gh />
              <Zh />
              {o}
            </l.a.Fragment>
          );
        },
        _w = function (e) {
          var t = e.path,
            a = Object(r.useContext)(S.context),
            n = a.tournament,
            i = Object(r.useContext)(xo.context);
          if (void 0 === n) return null;
          var o = null;
          switch (t) {
            case "/leaderboard":
              o = <tg />;
              break;
            case "/tournament":
              o = <Yw />;
              break;
            case "/league":
              for (var s = [], c = 0; c < a.postseasons.length; c++) s.push(<pg playoffIndex={c} />);
              o = <l.a.Fragment>{s}</l.a.Fragment>;
          }
          var u = [],
            m = [],
            A = [],
            d = [];
          if (
            (a.postseasons.forEach(function (e) {
              var t;
              if (
                void 0 !== (null === e || void 0 === e || null === (t = e.playoffs) || void 0 === t ? void 0 : t.winner)
              ) {
                var a = i.teams.find(function (t) {
                  var a;
                  return (
                    t.id ===
                    (null === e || void 0 === e || null === (a = e.playoffs) || void 0 === a ? void 0 : a.winner)
                  );
                });
                void 0 !== a && (u.push(a), m.push(a.secondaryColor), A.push(a.fullName), d.push(e.playoffs.name));
              }
            }),
            u.length <= 0)
          )
            return null;
          for (var f = [], h = 0; h < u.length; h++)
            f.push(
              <l.a.Fragment>
                <Jb
                  element={
                    <div className="Stubs-All">
                      <h2 className="League-Header">{null === n || void 0 === n ? void 0 : n.name}</h2>
                      <_.N className="Stubs-Cup" />
                      <div className="League-Info-Body">
                        Congratulations to your {d[h]} Champions{" "}
                        <div className="League-Info-Callout" style={{ color: m[h] }}>
                          {A[h]}
                        </div>
                      </div>
                    </div>
                  }
                  text="Offseason. Check for updates on the Discord!"
                />
                <Zh />
                {o}
              </l.a.Fragment>
            );
          return <l.a.Fragment>{f}</l.a.Fragment>;
        };
      function $w() {
        var e = Object(r.useContext)(xo.context),
          t = Object(r.useContext)(S.context);
        return void 0 === e || void 0 === t ? null : (
          <div>
            <div className="GodsDay">
              <div className="GodsDay-Header">Blaseball Gods' Day</div>
              <div className="GodsDay-Body">
                Internet League Blaseball is taking a Grand Siesta! Please enjoy any other tournaments or other strange
                events that are happening in the meantime.
              </div>
            </div>
            <ig />
          </div>
        );
      }
      var ey = ["title", "titleId"];
      function ty() {
        return (ty =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var a = arguments[t];
              for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
            }
            return e;
          }).apply(this, arguments);
      }
      function ay(e, t) {
        if (null == e) return {};
        var a,
          n,
          r = (function (e, t) {
            if (null == e) return {};
            var a,
              n,
              r = {},
              l = Object.keys(e);
            for (n = 0; n < l.length; n++) (a = l[n]), t.indexOf(a) >= 0 || (r[a] = e[a]);
            return r;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(e);
          for (n = 0; n < l.length; n++)
            (a = l[n]), t.indexOf(a) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, a) && (r[a] = e[a]));
        }
        return r;
      }
      function ny(e, t) {
        var a = e.title,
          n = e.titleId,
          l = ay(e, ey);
        return (
          <svg
            {...ty(
              {
                xmlns: "http://www.w3.org/2000/svg",
                xmlnsXlink: "http://www.w3.org/1999/xlink",
                width: 768,
                height: 768,
                viewBox: "0 0 256 256",
                ref: t,
                "aria-labelledby": n,
              },
              l
            )}
          >
            {a ? <title id={n}>{a}</title> : null}
            {Jw || (Jw = <image id="siesta" x={9.5} y={55} width={237} height={146} xlinkHref="<img/png blob>" />)}
          </svg>
        );
      }
      var ry = r.forwardRef(ny),
        ly =
          (a.p,
          function (e) {
            Object(r.useContext)(M.context).user;
            var t,
              a = Object(r.useContext)(xo.context),
              n = e.event;
            if (0 === n.teamTags.length) return null;
            var i = n.metadata,
              o = a.teams.find(function (e) {
                return e.id === n.teamTags[0];
              });
            if (void 0 === o) return null;
            var s = { team: o, reno: i.renoId, title: i.title, description: n.description, votes: i.votes };
            return (
              <div className="Recap-Decree-Container">
                <div className="Recap-Decree-Info">
                  <div className="Recap-Decree-Header">{s.title}</div>
                  <div className="Recap-Decree-Votes"> - {s.votes} Coins Spent</div>
                </div>
                <div className="Recap-Decree-Content Events-Container">
                  <div className="Recap-Blessing-Team" style={{ background: s.team.mainColor }}>
                    {DA(s.team)}
                  </div>
                  <div className="Recap-Decree-Description">
                    {s.description.split("\n").map(function (e) {
                      return <div className="Recap-Blessing-Description-Line">{e}</div>;
                    })}
                  </div>
                  {sm(n)}
                  <Ts
                    event={n}
                    upnut={null === n || void 0 === n || null === (t = n.metadata) || void 0 === t ? void 0 : t.upnut}
                    nuts={+n.nuts}
                  />
                </div>
              </div>
            );
          }),
        iy = function (e) {
          Object(r.useContext)(M.context).user;
          var t = Object(r.useContext)(xo.context),
            a = e.event;
          if (0 === a.teamTags.length) return null;
          var n = t.teams.find(function (e) {
            return e.id === a.teamTags[0];
          });
          return void 0 === n ? null : (
            <div className="Recap-Decree-Container Events-Container">
              <div className="Recap-Decree-Info">
                <div className="Recap-Decree-Header">{Em(a)}</div>
              </div>
              <div className="Recap-Decree-Content">
                <div className="Recap-Blessing-Team" style={{ background: n.mainColor }}>
                  {DA(n)}
                </div>
                <div className="Recap-Decree-Description">
                  {a.description.split("\n").map(function (e) {
                    return <div className="Recap-Blessing-Description-Line">{e}</div>;
                  })}
                </div>
              </div>
              {sm(a)}
            </div>
          );
        },
        oy = function (e) {
          Object(r.useContext)(M.context).user;
          var t = Object(r.useContext)(xo.context),
            a = e.event;
          if (0 === a.teamTags.length) return null;
          var n = t.teams.find(function (e) {
            return e.id === a.teamTags[0];
          });
          return void 0 === n ? null : (
            <div className="Recap-Decree-Container Events-Container">
              <div className="Recap-Decree-Info">
                <div className="Recap-Decree-Header">{Em(a)}</div>
              </div>
              <div className="Events-Solo-Content">
                <div className="Recap-Blessing-Team" style={{ background: n.mainColor }}>
                  {DA(n)}
                </div>
                <Co entity="" event={a} source={cm.ParentEvent} />
              </div>
              {sm(a)}
            </div>
          );
        },
        sy = function (e) {
          var t = Object(r.useContext)(M.context).user,
            a = Object(r.useContext)(xo.context),
            n = e.event;
          return (
            <div
              className={
                "Recap-Decree-Container Recap-Earlsiesta-Container" +
                (t.lightMode ? " Recap-Decree-Container-LightMode" : "")
              }
            >
              <div className="Recap-Decree-Header">{n.description}</div>
              <div className="Recap-Decree-Content">
                <div className="Recap-Decree-Description">
                  <div className="Account-Spread-Inner">
                    {n.metadata.spread.map(function (e, t) {
                      return (
                        <div className="Account-Spread-Card Recap-Earlsiesta-Card" key={t}>
                          <div className="Account-Spread-Card-Number Recap-Earlsiesta-Card-Number">
                            {zA(Number(e))[0]}
                          </div>
                          <div className="Recap-Earlsiesta-Card-Icon">
                            {DA(
                              a.teams.filter(function (t) {
                                return t.card === Number(e);
                              })[0]
                            )}
                          </div>
                          <div className="Account-Spread-Card-Name Recap-Earlsiesta-Card-Text">{zA(Number(e))[1]}</div>
                        </div>
                      );
                    })}
                  </div>
                </div>
              </div>
              {sm(n)}
            </div>
          );
        },
        cy = function (e) {
          var t = e.event,
            a = Object(r.useContext)(xo.context),
            n = void 0;
          return (
            null !== t.teamTags &&
              t.teamTags.length > 0 &&
              (n = a.teams.find(function (e) {
                return e.id === t.teamTags[0];
              })),
            (
              <div className="Recap-Decree-Container">
                <div className="Recap-Decree-Content">
                  {n ? (
                    <div className="Recap-Blessing-Team" style={{ background: n.mainColor }}>
                      {DA(n)}
                    </div>
                  ) : null}
                  <div className="Recap-Decree-Description">
                    <pm events={[t]} source={cm.ParentEvent} entity="" />
                  </div>
                </div>
              </div>
            )
          );
        },
        uy = function (e) {
          var t = e.event;
          switch (t.type) {
            case 56:
            case 57:
              return <ly event={t} />;
            case 81:
              return <sy event={t} />;
            case 106:
            case 107:
            case 146:
            case 147:
              return <oy event={t} />;
            case 109:
            case 135:
              return <iy event={t} />;
          }
          return <cy event={t} />;
        },
        my = function (e) {
          var t,
            a = e.path,
            n = Object(r.useContext)(S.context),
            i = void 0 !== n.sim && void 0 !== n.sim.season ? n.sim.season : -1,
            o = Object(r.useState)([]),
            c = Object(s.a)(o, 2),
            u = c[0],
            m = c[1];
          Object(r.useContext)(M.context).user, Object(r.useContext)(xo.context);
          Object(r.useEffect)(function () {
            A();
          }, []);
          var A = (function () {
              var e = Object(h.a)(
                f.a.mark(function e() {
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (e.t0 = m), (e.next = 3), cA(i, 3);
                        case 3:
                          (e.t1 = e.sent), (0, e.t0)(e.t1);
                        case 5:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function () {
                return e.apply(this, arguments);
              };
            })(),
            d = null;
          switch (a) {
            case "/leaderboard":
              d = <tg />;
              break;
            case "/standings":
              d = <ig />;
              break;
            case "/league":
              d = (
                <div className="Recap">
                  <div className="Recap-Results">
                    {u.length > 0 ? (
                      u.map(function (e) {
                        return <uy event={e} />;
                      })
                    ) : (
                      <div className="Stubs-All">
                        <div className="Stubs-Body">No Events.</div>
                      </div>
                    )}
                  </div>
                </div>
              );
          }
          return (
            <div>
              <Jb
                element={
                  <div className="Stubs-All">
                    <ry style={{ width: "250px", height: "250px" }} />
                    <div className="Stubs-Header">Earlsiesta</div>
                    <Gh />
                    <Kh dateString={null === (t = n.sim) || void 0 === t ? void 0 : t.nextPhaseTime} />
                    <div className="Stubs-Body">Midseason {i + 1} will begin soon.</div>
                  </div>
                }
                text=""
              />
              <qh />
              {d}
            </div>
          );
        },
        Ay = function (e) {
          Object(r.useContext)(M.context).user;
          var t = Object(r.useContext)(xo.context),
            a = e.event;
          if (0 === a.teamTags.length) return null;
          var n = t.teams.find(function (e) {
            return e.id === a.teamTags[0];
          });
          if (void 0 === n) return null;
          var i = a.metadata;
          return (
            <div className="Recap-Decree-Container">
              <div className="Recap-Blessing-Info">
                <div className="Recap-Decree-Header">{a.metadata.title}</div>
                <div className="Recap-Blessing-Votes"> - Wishlist #{i.wishListIndex + 1}</div>
              </div>
              <div className="Recap-Decree-Content">
                <div className="Recap-Blessing-Team" style={{ background: n.mainColor }}>
                  {DA(n)}
                </div>
                <div className="Recap-Decree-Description">{gm(e)}</div>
              </div>
            </div>
          );
        },
        dy = function (e) {
          var t,
            a,
            n = e.path,
            i = Object(r.useContext)(S.context),
            o = void 0 !== i.sim && void 0 !== i.sim.season ? i.sim.season : -1,
            c = Object(r.useState)([]),
            u = Object(s.a)(c, 2),
            m = u[0],
            A = u[1],
            d = Object(r.useState)(!0),
            g = Object(s.a)(d, 2),
            p = g[0],
            E = g[1],
            v = Object(r.useState)(!0),
            b = Object(s.a)(v, 2),
            w = b[0],
            y = b[1],
            B = Object(r.useState)(!0),
            O = Object(s.a)(B, 2),
            I = O[0],
            C = O[1],
            k = Object(r.useContext)(xo.context),
            N = Object(r.useContext)(M.context).user;
          Object(r.useEffect)(function () {
            T();
          }, []);
          var T = (function () {
              var e = Object(h.a)(
                f.a.mark(function e() {
                  var t;
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          return (e.next = 2), cA(o, 5);
                        case 2:
                          (t = e.sent),
                            A(
                              t.filter(function (e) {
                                return 29 !== e.type;
                              })
                            );
                        case 4:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function () {
                return e.apply(this, arguments);
              };
            })(),
            x = null !== (t = N.favoriteTeam) && void 0 !== t ? t : "",
            P = m.filter(function (e) {
              return [56, 57, 58, 163, 164].includes(e.type);
            }),
            L = m.filter(function (e) {
              return 194 === e.type;
            }),
            R = m.filter(function (e) {
              return (
                !P.includes(e) &&
                !L.includes(e) &&
                60 !== e.type &&
                -1 !== e.type &&
                (void 0 === e.metadata || void 0 === e.metadata.parent) &&
                (!I || e.teamTags.includes(x))
              );
            }),
            D = !0,
            F = !0,
            Q = (
              <div className="Recap">
                <div className="Recap-Results">
                  <h2 className="Recap-ResultsHeader">Renovations</h2>
                  <q.a className="Recap-Filters">
                    <q.a.Check
                      className="ModalForm-Switch Recap-Filters-Switch"
                      type="switch"
                      id="renofavteam"
                      label="Favorite Team's Results Only"
                      checked={p}
                      onChange={function () {
                        return E(!p);
                      }}
                    />
                  </q.a>
                  {P.map(function (e) {
                    return p && !e.teamTags.includes(x) ? null : (D && (D = !1), (<uy event={e} />));
                  })}
                  {D ? <div className="Recap-NoneFound">No events found...</div> : null}
                </div>
                <div className="Recap-Results">
                  <h2 className="Recap-ResultsHeader">Gifts</h2>
                  <q.a className="Recap-Filters">
                    <q.a.Check
                      className="ModalForm-Switch Recap-Filters-Switch"
                      type="switch"
                      id="giftfavteam"
                      label="Favorite Team's Results Only"
                      checked={w}
                      onChange={function () {
                        return y(!w);
                      }}
                    />
                  </q.a>
                  {L.map(function (e) {
                    var t,
                      a = e.metadata;
                    if (w && a.recipient != x) return null;
                    var n = k.teams.find(function (e) {
                      return e.id === a.recipient;
                    });
                    if (void 0 === n) return null;
                    for (
                      var r = [],
                        i = function (e) {
                          var t = k.teams.find(function (t) {
                              return t.id === a.top3Benefactors[e];
                            }),
                            n = a.top3BenefactorCoins[e];
                          r.push({ team: t, coins: n });
                        },
                        o = 0;
                      o < a.top3Benefactors.length;
                      o++
                    )
                      i(o);
                    return (
                      <div className="Recap-Results">
                        <div className="Recap-Decree-Container">
                          <div className="Recap-Blessing-Info">
                            <div className="Recap-Decree-Header">
                              {n.nickname} received {a.totalGifts} Gifts!
                            </div>
                            <div className="Recap-Blessing-Votes">
                               - {a.totalBenefactorCoins.toLocaleString()} coins contributed.{" "}
                            </div>
                          </div>
                          <div className="Recap-Decree-Content">
                            <div className="Recap-Blessing-Team" style={{ background: n.mainColor }}>
                              {DA(n)}
                            </div>
                            <div className="Recap-Decree-Description">
                              Top Contributers:
                              <ul className="Events-List">
                                {r.map(function (e) {
                                  return (
                                    <li className="Events-List-Item Recap-Gift-Contributer-Wrapper">
                                      <div className="Recap-Gift-Contributer" style={{ background: e.team.mainColor }}>
                                        {DA(e.team)}
                                      </div>
                                      <div className="Recap-Gift-Description">
                                        {e.team.nickname} - {Math.round((e.coins / a.totalBenefactorCoins) * 100)}%.
                                      </div>
                                    </li>
                                  );
                                })}
                              </ul>
                            </div>
                          </div>
                          {null ===
                            (t = m.filter(function (e) {
                              var t;
                              return null === e || void 0 === e || null === (t = e.teamTags) || void 0 === t
                                ? void 0
                                : t.includes(a.recipient);
                            })) || void 0 === t
                            ? void 0
                            : t.map(function (e) {
                                if (60 !== e.type) return null;
                                F && (F = !1);
                                var t = e.metadata.children,
                                  a = t
                                    ? m.filter(function (e) {
                                        return t.includes(e.id);
                                      })
                                    : [];
                                return <Ay event={e} subEvents={a} />;
                              })}
                        </div>
                      </div>
                    );
                  })}
                  {F ? <div className="Recap-NoneFound">No Gifts found...</div> : null}
                </div>
                {R.length > 0 ? (
                  <div className="Recap-Results">
                    <h2 className="Recap-ResultsHeader">Post Earlsiesta</h2>
                    <q.a.Check
                      className="ModalForm-Switch Recap-Filters-Switch"
                      type="switch"
                      id="otherFaveTeam"
                      label="Favorite Team's Results Only"
                      checked={I}
                      onChange={function () {
                        return C(!I);
                      }}
                    />
                    <kb subEvents={R} />
                  </div>
                ) : null}
              </div>
            ),
            j = null;
          switch (n) {
            case "/leaderboard":
              j = <tg />;
              break;
            case "/standings":
              j = <ig />;
              break;
            case "/league":
              j = Q;
          }
          return (
            <div>
              <Jb
                element={
                  <div className="Stubs-All">
                    <ry style={{ width: "250px", height: "250px" }} />
                    <div className="Stubs-Header">Latesiesta</div>
                    <Gh />
                    <Kh dateString={null === (a = i.sim) || void 0 === a ? void 0 : a.nextPhaseTime} />
                    <div className="Stubs-Body">Lateseason {o + 1} will begin soon.</div>
                  </div>
                }
                text=""
              />
              <qh />
              {j}
              <Lh />
            </div>
          );
        },
        fy = a(157),
        hy = function (e) {
          var t = Object(ks.useToasts)().addToast,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(c.f)(),
            u = Object(c.h)(),
            m = u.stadiumId,
            A = u.renovationId,
            d = Object(r.useState)(25),
            g = Object(s.a)(d, 2),
            p = g[0],
            E = g[1],
            v = Object(r.useState)(!1),
            b = Object(s.a)(v, 2),
            w = b[0],
            y = b[1],
            B = function (e) {
              var t = e.target.value;
              E(t);
            },
            O = n.coins,
            I = <js />;
          return (
            w ||
              (I = (
                <Vs.a className="ModalForm-Submit" type="submit" variant="success">
                  Submit
                </Vs.a>
              )),
            (
              <Fs {...Object.assign({}, e, { className: "Vote" })}>
                <div className="ModalForm-Header">Contribute to Renovation</div>
                <q.a
                  className="ModalForm-Form"
                  onSubmit={function (e) {
                    if ((e.preventDefault(), p < 25))
                      t("The minimum Ballpark contribution is 25 Coins.", { appearance: "error" });
                    else if (p > O) t("Max contribution is ".concat(O, "!"), { appearance: "error" });
                    else {
                      y(!0);
                      var a = { amount: p, stadiumId: m, renovationId: A };
                      km("/api/renovate", JSON.stringify(a))
                        .then(function (e) {
                          e.status && 200 === e.status && e.ok
                            ? ((n.coins = n.coins - p),
                              i(Object(C.a)({}, n)),
                              t("Contribution Made", { appearance: "success" }),
                              o.goBack())
                            : e.json().then(function (e) {
                                t(e.error || "Error", { appearance: "error" });
                              });
                        })
                        .finally(
                          Object(h.a)(
                            f.a.mark(function e() {
                              return f.a.wrap(function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      y(!1);
                                    case 1:
                                    case "end":
                                      return e.stop();
                                  }
                              }, e);
                            })
                          )
                        );
                    }
                  }}
                >
                  <q.a.Group className="ModalForm-Form-Amount" controlId="amount">
                    <q.a.Label>How many coins do you want to contribute?</q.a.Label>
                    <div
                      className={
                        "ModalForm-Form-Inputs-Amount" + (n.lightMode ? " ModalForm-Form-Inputs-Amount-LightMode" : "")
                      }
                    >
                      <div className="ModalForm-Ticket-Wrapper">
                        <tc className="ModalForm-Ticket-Icon" />
                        {n.coins}
                      </div>
                      <q.a.Control type="number" value={p} onChange={B} />
                      <q.a.Control
                        type="range"
                        className="ModalForm-Range"
                        min={25}
                        max={Math.min(n.coins, O)}
                        value={p}
                        onChange={B}
                        step="1"
                      />
                      <a
                        className={
                          "ModalForm-Form-Inputs-Amount-Max" +
                          (n.lightMode ? " ModalForm-Form-Inputs-Amount-Max-LightMode" : "")
                        }
                        onClick={function (e) {
                          e.preventDefault(), E(Math.min(n.coins, O));
                        }}
                      >
                        Max: {O}
                      </a>
                    </div>
                  </q.a.Group>
                  <div className="ModalForm-Submit-Wrapper">{I}</div>
                </q.a>
              </Fs>
            )
          );
        },
        gy = function (e) {
          var t = e.stadium,
            a =
              (Object(r.useContext)(M.context).user,
              null !== t.model ? (
                <div className="Team-Stadium-Header-Line">
                  <div className="Player-Info-Line-Header">
                    <sh stadium={t} style={ah.TeamModal} />
                  </div>
                  <div className="Team-Stadium-Header">{t.name}</div>
                </div>
              ) : null),
            n = null !== t.model ? "Renovation" : "Plant Your Flag",
            i = [];
          i.push("Spend coins to Contribute to the building & renovation of your Team's Ballpark."),
            null === t.model
              ? (i.push("To break ground on your Ballpark, choose a Ballpark Prefab as a starting point."),
                i.push("The Ballpark Prefab with the most coins will be chosen for each Team."))
              : (i.push("The top chosen Renovation(s) will be implemented for your Team's Ballpark."),
                i.push("The more Coins contributed to your Ballpark, the more Renovations will be built.")),
            i.push("All Ballpark construction goes into effect in the Latesiesta, after Day 72.");
          var o = <Mg header={n} lines={i} noMargin={!0} />;
          return (
            <div className="Offseason-Info">
              <div className="Offseason-Header">
                {n} {o}
              </div>
              <div role="text" style={{ textAlign: "center" }}>
                <div className="Offseason-Description">{i[0]}</div>
              </div>
              {a}
            </div>
          );
        },
        py = function (e) {
          var t = e.loading,
            a = e.progress,
            n = e.stadium;
          Object(r.useContext)(M.context).user;
          if (t || !a) return null;
          var i = 0;
          return (
            a && (i = Math.floor(100 * a.toNext)),
            null === n.model ? (
              <div className="Team-Construction-Progress">
                <div className="Team-Construction-Progress-Bar-Wrapper">
                  <div className="Team-Construction-Progress-Bar progress">
                    <div
                      className="progress-bar"
                      role="progressbar"
                      aria-valuenow={i}
                      aria-valuemin={0}
                      aria-valuemax={100}
                      style={{
                        color: NA(n.mainColor),
                        backgroundColor: n.mainColor,
                        width: "".concat(Math.floor(100 * (null === a || void 0 === a ? void 0 : a.toNext)), "%"),
                      }}
                    >
                      {i}%
                    </div>
                  </div>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    className="Team-Construction-Progress-Flag"
                    viewBox="120 0 300 300"
                  >
                    <path fill={n.secondaryColor} d="M151 32L151 279L169 279L169 32L151 32Z" />
                    <path
                      d="M398 41.574L384.572 49.164C352.946 67.04 323.08 61.431 291.434 53.52C259.787 45.608 226.604 34.68 193.488 48.713L188 51.039L188 166.588L200.512 161.288C226.395 150.32 254.713 158.892 287.066 166.98C319.42 175.069 356.054 181.96 393.428 160.836L398 158.252L398 41.574Z"
                      fill={n.secondaryColor}
                    />
                  </svg>
                </div>
              </div>
            ) : (
              <div className="Team-Construction-Progress">
                <div className="Team-Construction-Progress-Total">
                  Renovations Funded: {null === a || void 0 === a ? void 0 : a.total}
                </div>
                <div className="Team-Construction-Progress-Bar progress">
                  <div
                    className="progress-bar"
                    role="progressbar"
                    aria-valuenow={Math.floor(100 * (null === a || void 0 === a ? void 0 : a.toNext))}
                    aria-valuemin={0}
                    aria-valuemax={100}
                    style={{
                      backgroundColor: n.mainColor,
                      width: "".concat(Math.floor(100 * (null === a || void 0 === a ? void 0 : a.toNext)), "%"),
                    }}
                  >
                    {Math.floor(100 * (null === a || void 0 === a ? void 0 : a.toNext))}%
                  </div>
                </div>
              </div>
            )
          );
        },
        Ey = function (e) {
          var t = e.loading,
            a = e.renovations,
            n = e.user,
            r = e.stadium,
            i = e.selected,
            o = e.setSelected,
            s = e.renoStats;
          return t || !a ? null : null === r.model ? (
            <div className="Team-Construction-Options">
              {fy.collection.map(function (e, t) {
                return <by prefab={e} stadium={r} index={t} selected={i} setSelected={o} user={n} />;
              })}
            </div>
          ) : (
            <div className="Team-Construction-Options">
              {null === a || void 0 === a
                ? void 0
                : a.map(function (e) {
                    var t;
                    return (
                      <vy
                        reno={e}
                        selected={i}
                        setSelected={o}
                        user={n}
                        percent={
                          null ===
                            (t = s.find(function (t) {
                              return t.id === e.id;
                            })) || void 0 === t
                            ? void 0
                            : t.percent
                        }
                      />
                    );
                  })}
            </div>
          );
        },
        vy = function (e) {
          var t = e.reno,
            a = e.selected,
            n = e.setSelected,
            r = e.user,
            i = e.percent,
            o = "Team-Construction-Renovation GiftShop-Wishlist-Item";
          return (
            (o += a === t.id ? " Team-Construction-Renovation-Selected" : " Team-Construction-Renovation-Unselected"),
            (
              <div
                className={o}
                onClick={function () {
                  n(t.id);
                }}
              >
                <div className="Team-Construction-Renovation-Title">{t.title}</div>
                <div className="Team-Construction-Renovation-Description">{t.description}</div>
                <div className="Team-Construction-Renovation-Effects">
                  {t.effects.map(function (e) {
                    return (
                      <div className={"Team-Construction-Renovation-Effects-Title" + (a === t.id ? "-Selected" : "")}>
                        {e}
                      </div>
                    );
                  })}
                </div>
                {void 0 !== r.snacks.Forbidden_Knowledge_Access ? (
                  <l.a.Fragment>
                    <div className="Team-Construction-Renovation-Percent-Line">
                      <div
                        className="Team-Construction-Renovation-Percent-Line-Fill"
                        style={{ width: "".concat(i, "%") }}
                      />
                    </div>
                    <div className="Team-Construction-Renovation-Percent">{i}% of Votes</div>
                  </l.a.Fragment>
                ) : null}
              </div>
            )
          );
        },
        by = function (e) {
          var t = e.index,
            a = e.stadium,
            n = e.prefab,
            r = e.selected,
            i = e.setSelected,
            o = (e.user, "Team-Construction-Prefab");
          return (
            (o +=
              r === t.toString()
                ? " Team-Construction-Renovation-Selected"
                : " Team-Construction-Renovation-Unselected"),
            (
              <div
                className={o}
                onClick={function () {
                  i(t.toString());
                }}
              >
                <div className="Team-Construction-Prefab-Icon">
                  <rh index={t} stadium={a} style={ah.TeamModal} />
                </div>
                <div className="Team-Construction-Prefab-Title">{n.name}</div>
                <div className="Team-Construction-Renovation-Description">{n.description}</div>
              </div>
            )
          );
        },
        wy = function (e) {
          var t = e.stadiumId,
            a = e.selected,
            n = e.setSelected,
            r = e.user,
            i = Object(c.g)(),
            o = <yy />;
          if (
            (r.isFetching || !r.isSignedIn || r.favoriteTeam || (o = <By />),
            !r.isFetching && r.isSignedIn && (r.coins <= 0 || !r.coins) && (o = <Oy />),
            !r.isFetching && r.isSignedIn && r.favoriteTeam && r.coins > 0)
          ) {
            var s = r.coins >= 25;
            o = s ? (
              <Vs.a
                className="Offseason-Button"
                variant="success"
                disabled={!a || !s}
                onClick={function () {
                  return n(void 0);
                }}
              >
                {a ? (
                  <A background={i} path={"/contribute/".concat(t, "/").concat(a)}>
                    Contribute
                  </A>
                ) : (
                  <l.a.Fragment>Select an Option</l.a.Fragment>
                )}
              </Vs.a>
            ) : (
              <Ct.a
                placement="top"
                overlay={
                  <St.a id="minimum-contribution">
                    <strong>The minimum Ballpark contribution is 25 Coins.</strong>
                  </St.a>
                }
              >
                <div>
                  <Vs.a
                    aria-label="The minimum Ballpark contribution is 25 Coins."
                    className="Offseason-Button"
                    variant="secondary"
                    disabled={!0}
                  >
                    Need Coins
                  </Vs.a>
                </div>
              </Ct.a>
            );
          }
          return o;
        },
        yy = function () {
          return (
            <a href="/login">
              <Vs.a className="Blessings-Submit-Button">Login to Vote</Vs.a>
            </a>
          );
        },
        By = function () {
          return (
            <a href="/welcome">
              <Vs.a className="Blessings-Submit-Button">Pick a Favorite Team to Vote</Vs.a>
            </a>
          );
        },
        Oy = function () {
          return (
            <a href={"/shop/".concat(ne.BEG)}>
              <Vs.a className="Blessings-Submit-Button">No Coins</Vs.a>
            </a>
          );
        },
        Iy = function (e) {
          var t = Object(r.useContext)(S.context),
            a = Object(r.useContext)(xo.context),
            n = Object(r.useState)(void 0),
            i = Object(s.a)(n, 2),
            o = i[0],
            c = i[1],
            u = Object(r.useState)(void 0),
            A = Object(s.a)(u, 2),
            d = A[0],
            g = A[1],
            p = Object(r.useState)([]),
            E = Object(s.a)(p, 2),
            v = E[0],
            b = E[1],
            w = Object(r.useState)(!1),
            y = Object(s.a)(w, 2),
            B = y[0],
            O = y[1],
            I = Object(r.useState)(void 0),
            C = Object(s.a)(I, 2),
            k = C[0],
            N = C[1],
            T = Object(r.useContext)(M.context).user,
            x = RA(t.sim),
            P = a.teams.find(function (e) {
              return e.id === T.favoriteTeam;
            });
          Object(r.useEffect)(
            function () {
              void 0 === o && L();
            },
            [a]
          );
          var L = (function () {
            var e = Object(h.a)(
              f.a.mark(function e() {
                var t, n, r, l;
                return f.a.wrap(function (e) {
                  for (;;)
                    switch ((e.prev = e.next)) {
                      case 0:
                        if ((O(!0), void 0 !== P)) {
                          e.next = 4;
                          break;
                        }
                        return O(!1), e.abrupt("return");
                      case 4:
                        if (null !== (t = P.stadium)) {
                          e.next = 8;
                          break;
                        }
                        return O(!1), e.abrupt("return");
                      case 8:
                        if (
                          void 0 !==
                          (n = a.stadiums.find(function (e) {
                            return e.id === t;
                          }))
                        ) {
                          e.next = 12;
                          break;
                        }
                        return O(!1), e.abrupt("return");
                      case 12:
                        return (e.t0 = po), (e.next = 15), mA(n.renoHand);
                      case 15:
                        return (e.t1 = e.sent), (r = (0, e.t0)(e.t1)), (e.next = 19), hA(n.id);
                      case 19:
                        (l = e.sent), c(r), g(l.progress), b(l.stats), O(!1);
                      case 24:
                      case "end":
                        return e.stop();
                    }
                }, e);
              })
            );
            return function () {
              return e.apply(this, arguments);
            };
          })();
          if (void 0 === t) return null;
          if (void 0 === a || void 0 === a.teams) return null;
          if (void 0 === P) return null;
          var R,
            D = a.stadiums.find(function (e) {
              return e.id === P.stadium;
            });
          if (void 0 === D) return null;
          R = B ? (
            <js />
          ) : d ? (
            <div className="Renovation-Body">
              <py loading={B} progress={d} stadium={D} />
              <Ey loading={B} renovations={o} renoStats={v} user={T} stadium={D} selected={k} setSelected={N} />
              <div className="Team-Construction-Bottom">
                <wy stadiumId={D.id} selected={k} setSelected={N} user={T} />
              </div>
            </div>
          ) : (
            <div className="Team-Stadium-Help">Something went wrong...</div>
          );
          var F = null;
          return (
            x ||
              (F = (
                <l.a.Fragment>
                  <gy stadium={D} />
                  <div className="Renovation-Body">
                    <div className="Offseason-Info">
                      <div className="Offseason-Description">
                        Construction is unavailable. Contribute to your Ballpark's Renovation between Days 27
                        (Earlsiesta) & 72 (Latesiesta).
                      </div>
                    </div>
                  </div>
                </l.a.Fragment>
              )),
            x &&
              void 0 === T.snacks.Stadium_Access &&
              (F = (
                <l.a.Fragment>
                  <gy stadium={D} />
                  <div className="Renovation-Body">
                    <div className="Offseason-Info">
                      <div className="Offseason-Description">
                        Construction is now available for {D.nickname}. To gain access to stadium construction, you must
                        own a Pizza Snack. Head to the shop to buy access.
                      </div>
                      <Vs.a className="Decrees-Submit-Button">
                        <m.b to={"/shop/".concat(ne.STADIUM)}>Go To Shop</m.b>
                      </Vs.a>
                    </div>
                  </div>
                </l.a.Fragment>
              )),
            x &&
              void 0 !== T.snacks.Stadium_Access &&
              (F = (
                <l.a.Fragment>
                  <gy stadium={D} />
                  {R}
                </l.a.Fragment>
              )),
            (<div className="Renovation">{F}</div>)
          );
        },
        Sy = function (e) {
          var t = e.percent,
            a = e.color;
          return (
            <div className="Team-Stadium-Progress-Bar GiftShop-Progress-Bar progress">
              <div
                className="progress-bar"
                role="progressbar"
                aria-valuenow={t}
                aria-valuemin={0}
                aria-valuemax={100}
                style={{ backgroundColor: a, color: NA(a), width: "".concat(t, "%") }}
              >
                {t}%
              </div>
            </div>
          );
        },
        Cy = function (e) {
          var t = Object(r.useContext)(Op.context),
            a = Object(r.useContext)(S.context),
            n = Object(r.useContext)(xo.context),
            i = Object(r.useContext)(M.context),
            o = i.user,
            u = (i.setUser, Object(ks.useToasts)().addToast, Object(c.g)()),
            d = Object(r.useState)(void 0),
            g = Object(s.a)(d, 2),
            p = g[0],
            E = g[1],
            v = Object(r.useState)(!1),
            b = Object(s.a)(v, 2),
            w = b[0],
            y = b[1],
            B = Object(r.useState)([]),
            O = Object(s.a)(B, 2),
            I = O[0],
            C = O[1],
            k = Object(r.useState)([]),
            N = Object(s.a)(k, 2),
            T = N[0],
            x = N[1];
          Object(r.useEffect)(
            function () {
              if ((void 0 === p && P(), T.length < 1)) {
                var e,
                  t = QA(n, { filters: {} }, null !== (e = o.favoriteTeam) && void 0 !== e ? e : "", !1);
                x(t);
              }
            },
            [n]
          ),
            Object(r.useEffect)(
              function () {
                C(po(t.gifts));
              },
              [t]
            );
          var P = (function () {
              var e = Object(h.a)(
                f.a.mark(function e() {
                  var t;
                  return f.a.wrap(function (e) {
                    for (;;)
                      switch ((e.prev = e.next)) {
                        case 0:
                          if ((y(!0), void 0 !== U)) {
                            e.next = 4;
                            break;
                          }
                          return y(!1), e.abrupt("return");
                        case 4:
                          return (e.next = 6), dA();
                        case 6:
                          void 0 !== (t = e.sent) && E(t), y(!1);
                        case 9:
                        case "end":
                          return e.stop();
                      }
                  }, e);
                })
              );
              return function () {
                return e.apply(this, arguments);
              };
            })(),
            L = Object(r.useState)(0),
            R = Object(s.a)(L, 2),
            D = R[0],
            F = R[1],
            Q = Object(r.useState)(void 0),
            j = Object(s.a)(Q, 2),
            V = j[0],
            W = j[1],
            U = n.teams.find(function (e) {
              return e.id === o.favoriteTeam;
            }),
            G = RA(a.sim),
            H = (
              <l.a.Fragment>
                <div className="Offseason-Header">Gift Shop</div>
                <div className="Team-Stadium-Header-Line">
                  <div className="Team-LogoLine">
                    <div
                      style={{ backgroundColor: void 0 !== U ? U.mainColor : "#ffffff" }}
                      className="Player-Team-Logo"
                    >
                      {DA(U)}
                    </div>
                  </div>
                  <div className="Team-Stadium-Header">{void 0 !== U ? U.fullName : "Null Team"}</div>
                </div>
                <div role="text" style={{ textAlign: "center", marginBottom: 24 }}>
                  <div className="Offseason-Description">
                    Every Latesiesta, Teams will help one another by giving Gifts.
                  </div>
                  {G ? null : (
                    <div className="Offseason-Description">
                      The Gift Shop will open next Earlsiesta. Gift Shop participation opens between Days 27
                      (Earlsiesta) & 72 (Latesiesta).
                    </div>
                  )}
                </div>
              </l.a.Fragment>
            );
          if (void 0 === U || w || void 0 === n)
            return (
              <div className="Renovation">
                <div className="Offseason-Info">
                  {H}
                  <js />
                </div>
              </div>
            );
          function Y(e) {
            switch (e.page) {
              case 0:
                return <q />;
              case 1:
                return <Z />;
            }
            return null;
          }
          function z(e) {
            var t, a;
            if (void 0 === U) return 0;
            var n = null === p || void 0 === p ? void 0 : p.teamWishLists[U.id];
            return void 0 === n
              ? 0
              : Math.round(
                  100 *
                    (null !==
                      (t =
                        null ===
                          (a = n.find(function (t) {
                            return t.bonus === e;
                          })) || void 0 === a
                          ? void 0
                          : a.percent) && void 0 !== t
                      ? t
                      : 0)
                );
          }
          function X(e) {
            var t, a;
            return Math.round(
              100 *
                (null !==
                  (t =
                    null === p || void 0 === p || null === (a = p.teamProgress[e]) || void 0 === a
                      ? void 0
                      : a.toNext) && void 0 !== t
                  ? t
                  : 0)
            );
          }
          function J(e) {
            var t, a;
            return Math.round(
              null !==
                (t =
                  null === p || void 0 === p || null === (a = p.teamProgress[e]) || void 0 === a ? void 0 : a.total) &&
                void 0 !== t
                ? t
                : 0
            );
          }
          function Z() {
            return void 0 === o.snacks.Stadium_Access ? (
              <div className="Renovation-Body">
                <div className="Offseason-Info">
                  <div className="Offseason-Description">
                    Wishlisting is now available. To gain access to the Wishlist, you must own a Pizza Snack. Head to
                    the shop to buy access.
                  </div>
                  <Vs.a className="Decrees-Submit-Button">
                    <m.b to={"/shop/".concat(ne.STADIUM)}>Go To Shop</m.b>
                  </Vs.a>
                </div>
              </div>
            ) : (
              <div className="Renovation-Body">
                <div role="text" style={{ textAlign: "center", marginBottom: 24 }}>
                  <div className="Offseason-Description">
                    Contribute to your Team's Wishlist to determine what Gifts you'll receive. Gifts will be rewarded in
                    order of total contributions.
                  </div>
                </div>
                <div className="Team-Construction-Options">
                  {I.map(function (e, t) {
                    return (
                      <div
                        className={
                          "Team-Construction-Renovation GiftShop-Wishlist-Item " +
                          (e === V
                            ? "Team-Construction-Renovation-Selected"
                            : " Team-Construction-Renovation-Unselected")
                        }
                        onClick={function () {
                          W(e);
                        }}
                        key={t}
                      >
                        <div className="Team-Construction-Renovation-Title">{e.title}</div>
                        <div className="Team-Construction-Renovation-Description">{e.description}</div>
                        {void 0 !== o.snacks.Forbidden_Knowledge_Access ? (
                          <l.a.Fragment>
                            <div className="Team-Construction-Renovation-Percent-Line">
                              <div
                                className="Team-Construction-Renovation-Percent-Line-Fill"
                                style={{ width: "".concat(z(e.id), "%") }}
                              />
                            </div>
                            <div className="Team-Construction-Renovation-Percent">{z(e.id)}% of Coins</div>
                          </l.a.Fragment>
                        ) : null}
                      </div>
                    );
                  })}
                </div>
                <div className="Team-Construction-Bottom" style={{ justifyContent: "center", paddingTop: "20px" }}>
                  <Vs.a
                    className="Offseason-Button"
                    variant="success"
                    disabled={!V}
                    onClick={function () {
                      return W(void 0);
                    }}
                  >
                    {V ? (
                      <A background={u} path={"/wish/".concat(V.id)}>
                        Contribute
                      </A>
                    ) : (
                      <l.a.Fragment>Select an Option</l.a.Fragment>
                    )}
                  </Vs.a>
                </div>
              </div>
            );
          }
          function q() {
            return (
              <div className="GiftShop-Body">
                <div role="text" style={{ textAlign: "center", marginBottom: 24 }}>
                  <div className="Offseason-Description">
                    Contribute to a Team to give them Gifts. The more Coins contributed, the more Gifts a Team will
                    receive from their Wishlist.
                  </div>
                </div>
                <div className="Team-Section">
                  {T.sort(function (e, t) {
                    var a = J(t.id),
                      n = J(e.id),
                      r = X(t.id),
                      l = X(e.id);
                    return n === a && r === l
                      ? e.nickname < t.nickname
                        ? -1
                        : e.nickname > t.nickname
                        ? 1
                        : 0
                      : n === a
                      ? r - l
                      : a - n;
                  }).map(function (e, t) {
                    return (
                      <li className="Player-Info-Line GiftShop-Gifts-Item" key={e.id}>
                        <div className="Player-Info-Line-Header GiftShop-Gifts-Item-Header">
                          <div className="GiftShop-Gifts-TeamLogo" style={{ background: e.mainColor }}>
                            {DA(e)}
                          </div>
                          {e.nickname}
                        </div>
                        <div className="Player-Info-Line-Body GiftShop-Gifts-Item-Body">
                          {FA("0x1F381")} {J(e.id)}
                          <span className="GiftShop-Gifts-Item-Bonus">
                            {(function (e, t) {
                              return (
                                void 0 !== e &&
                                (e.permAttr.includes(t) ||
                                  e.seasAttr.includes(t) ||
                                  e.weekAttr.includes(t) ||
                                  e.gameAttr.includes(t))
                              );
                            })(e, "FREE_GIFT")
                              ? "(+1)"
                              : ""}
                          </span>
                          <Sy percent={X(e.id)} color={e.mainColor} />
                        </div>
                        <button
                          className={
                            e.id === o.favoriteTeam ? "GiftShop-Gifts-Item-View" : "GiftShop-Gifts-Item-Button"
                          }
                        >
                          <A background={u} path={"/gift/".concat(e.id)} params={p}>
                            {e.id === o.favoriteTeam ? "View" : "Gift"}
                          </A>
                        </button>
                      </li>
                    );
                  })}
                </div>
              </div>
            );
          }
          var K = null;
          return (
            G &&
              (K = (
                <l.a.Fragment>
                  {(function () {
                    var e = [
                      <button
                        role="link"
                        aria-selected={0 === D}
                        className={
                          0 === D
                            ? "TheBook-Navigation-Button TheBook-Navigation-Button-Current"
                            : "TheBook-Navigation-Button"
                        }
                        onClick={function () {
                          F(0);
                        }}
                        key="gifting"
                      >
                        Gifting
                      </button>,
                      <button
                        role="link"
                        aria-selected={1 === D}
                        className={
                          1 === D
                            ? "TheBook-Navigation-Button TheBook-Navigation-Button-Current"
                            : "TheBook-Navigation-Button"
                        }
                        onClick={function () {
                          F(1);
                        }}
                        key="wishlist"
                      >
                        Wishlist
                      </button>,
                    ];
                    return <nav className="TheBook-Navigation GiftShop-Navigation">{e}</nav>;
                  })()}
                  <Y page={D} />
                </l.a.Fragment>
              )),
            G || (K = null),
            (
              <div className="Renovation">
                <div className="Offseason-Info">{H}</div>
                {K}
              </div>
            )
          );
        },
        ky = function (e) {
          var t = Object(r.useContext)(M.context),
            a = t.user,
            n = (t.setUser, Object(r.useContext)(Op.context)),
            i = e.color,
            o =
              (e.index,
              n.gifts.find(function (t) {
                return t.id === e.id;
              }));
          return void 0 === o ? (
            <l.a.Fragment />
          ) : (
            <Ct.a
              key="bottom-1"
              placement="bottom"
              overlay={
                <St.a id="tooltip-bottom" className="AttributeTooltip">
                  <div className="AttributeTooltip-Container">
                    <div className="AttributeTooltip-Header" style={{ color: a.lightMode ? "#000000" : i }}>
                      {o.title}
                    </div>
                    <div className="AttributeTooltip-Description">{o.description}</div>
                  </div>
                </St.a>
              }
            >
              <span className="Gift-List-Item">{o.title}</span>
            </Ct.a>
          );
        },
        Ny = function (e) {
          var t = Object(r.useContext)(M.context),
            a = (t.user, t.setUser, Object(r.useContext)(Op.context)),
            n = (e.color, e.index);
          return void 0 ===
            a.gifts.find(function (t) {
              return t.id === e.id;
            }) ? (
            <l.a.Fragment />
          ) : (
            <div className="Gift-List-Item">
              <strong>{n}.</strong> <span className="Gift-List-Item-Emoji">{FA("0x1F381")}</span>
            </div>
          );
        },
        Ty = function (e) {
          var t,
            a,
            n = Object(c.h)().teamId,
            i = Object(ks.useToasts)().addToast,
            o = Object(r.useContext)(M.context),
            u = o.user,
            m = o.setUser,
            A = Object(c.f)(),
            d = Object(r.useContext)(xo.context),
            g = (Object(r.useContext)(Op.context), Object(r.useState)(0)),
            p = Object(s.a)(g, 2),
            E = p[0],
            v = p[1],
            b = Object(r.useState)(!1),
            w = Object(s.a)(b, 2),
            y = w[0],
            B = w[1],
            O = Object(r.useState)(void 0),
            I = Object(s.a)(O, 2),
            S =
              (I[0],
              I[1],
              d.teams.find(function (e) {
                return e.id === n;
              }));
          Object(r.useEffect)(function () {
            B(!0);
          }, []),
            Object(r.useEffect)(
              function () {
                B(!1);
              },
              [d]
            ),
            Object(r.useEffect)(
              function () {
                B(!1);
              },
              [S]
            );
          var k = function (e) {
            var t = e.target.value;
            v(t);
          };
          function N(t) {
            var a;
            if (void 0 === t) return [];
            var n =
              null === e || void 0 === e || null === (a = e.progress) || void 0 === a ? void 0 : a.teamWishLists[t];
            if (void 0 === n) return [];
            var r = n.slice(0, 3);
            return void 0 === r
              ? []
              : r.map(function (e) {
                  return e.bonus;
                });
          }
          var T = <js />,
            x = u.coins;
          return (
            y ||
              (T = (
                <Vs.a className="ModalForm-Submit" type="submit" variant="success">
                  Submit
                </Vs.a>
              )),
            (
              <Fs {...Object.assign({}, e, { className: "Vote" })}>
                {(null === S || void 0 === S ? void 0 : S.id) === u.favoriteTeam ? (
                  <h1 className="ModalForm-Header">{void 0 !== S ? S.nickname : "Null Team"} Wishlist</h1>
                ) : (
                  <h1 className="ModalForm-Header">Gift to the {void 0 !== S ? S.nickname : "Null Team"}</h1>
                )}
                <div className="Gift-List">
                  <div className="Player-Team-Line" style={{ justifyContent: "center" }}>
                    <div className="Player-Team-Logo" style={{ background: void 0 !== S ? S.mainColor : "#999999" }}>
                      <div className="Player-Team-Emoji">{DA(S)}</div>
                    </div>
                    <div className="Player-Team-Name">{void 0 !== S ? S.fullName : "Null Team"}'s Wishlist</div>
                  </div>
                  <div className="Gift-List-Items">
                    {null === (t = N(null === S || void 0 === S ? void 0 : S.id)) || void 0 === t
                      ? void 0
                      : t.map(function (e, t) {
                          var a;
                          return (
                            <Ny
                              index={t + 1}
                              id={e}
                              color={
                                null !== (a = null === S || void 0 === S ? void 0 : S.secondaryColor) && void 0 !== a
                                  ? a
                                  : "#ffffff"
                              }
                            />
                          );
                        })}
                    {null === (a = N(null === S || void 0 === S ? void 0 : S.id)) || void 0 === a
                      ? void 0
                      : a.map(function (e, t) {
                          var a;
                          return (
                            <ky
                              index={t + 1}
                              id={e}
                              color={
                                null !== (a = null === S || void 0 === S ? void 0 : S.secondaryColor) && void 0 !== a
                                  ? a
                                  : "#ffffff"
                              }
                            />
                          );
                        })}
                  </div>
                </div>
                {(null === S || void 0 === S ? void 0 : S.id) === u.favoriteTeam ? null : (
                  <q.a
                    className="ModalForm-Form"
                    onSubmit={function (e) {
                      if (
                        (e.preventDefault(),
                        B(!0),
                        LA(n, d) || (i("Team not accepting gifts", { appearance: "error" }), A.goBack()),
                        E < 25)
                      )
                        i("The minimum Gift contribution is 25 Coins.", { appearance: "error" });
                      else if (E > x) i("Max contribution is ".concat(x, "!"), { appearance: "error" });
                      else {
                        var t = { amount: E, entityId: n, data: { team1: u.favoriteTeam } };
                        km("/api/gift", JSON.stringify(t))
                          .then(function (e) {
                            e.status && 200 === e.status && e.ok
                              ? ((u.coins = u.coins - E),
                                m(Object(C.a)({}, u)),
                                m(Object(C.a)({}, u)),
                                i("Coins Gifted", { appearance: "success" }),
                                A.goBack())
                              : e.json().then(function (e) {
                                  i(e.error || "Error", { appearance: "error" });
                                });
                          })
                          .finally(
                            Object(h.a)(
                              f.a.mark(function e() {
                                return f.a.wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        B(!1);
                                      case 1:
                                      case "end":
                                        return e.stop();
                                    }
                                }, e);
                              })
                            )
                          );
                      }
                    }}
                  >
                    <q.a.Group className="ModalForm-Form-Amount" controlId="amount">
                      <q.a.Label>How many Coins do you want to contribute?</q.a.Label>
                      <div className="ModalForm-Form-Inputs-Amount">
                        <div className="ModalForm-Ticket-Wrapper">
                          <tc className="ModalForm-Ticket-Icon" />
                          {u.coins}
                        </div>
                        <q.a.Control type="number" value={E} onChange={k} />
                        <q.a.Control
                          type="range"
                          className="ModalForm-Range"
                          min={25}
                          max={u.coins}
                          value={E}
                          onChange={k}
                          step="1"
                        />
                        <a
                          className="ModalForm-Form-Inputs-Amount-Max"
                          onClick={function (e) {
                            e.preventDefault(), v(u.coins);
                          }}
                        >
                          Max: {u.coins}
                        </a>
                      </div>
                    </q.a.Group>
                    <div className="ModalForm-Submit-Wrapper">{T}</div>
                  </q.a>
                )}
              </Fs>
            )
          );
        },
        xy = function (e) {
          var t = Object(ks.useToasts)().addToast,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(c.f)(),
            u = Object(r.useContext)(Op.context),
            m = (Object(c.h)().id, Object(r.useState)(25)),
            A = Object(s.a)(m, 2),
            d = A[0],
            g = A[1],
            p = Object(r.useState)(!1),
            E = Object(s.a)(p, 2),
            v = E[0],
            b = E[1],
            w = Object(c.h)().entityId,
            y = function (e) {
              var t = e.target.value;
              g(t);
            },
            B = n.coins,
            O = <js />;
          v ||
            (O = (
              <Vs.a className="ModalForm-Submit" type="submit" variant="success">
                Submit
              </Vs.a>
            ));
          var I = u.gifts.find(function (e) {
            return e.id === w;
          });
          return (
            <Fs {...Object.assign({}, e, { className: "Vote" })}>
              <div className="ModalForm-Header">Contribute to Wishlist</div>
              <div className="Gift-List">
                <div className="Player-Team-Line" style={{ justifyContent: "center" }}>
                  <div className="Player-Team-Name">
                    <strong>{I.title}</strong>
                  </div>
                </div>
                {I.description}
              </div>
              <q.a
                className="ModalForm-Form"
                onSubmit={function (e) {
                  if ((e.preventDefault(), void 0 !== n.snacks.Stadium_Access))
                    if (d < 25) t("The minimum Wishlist contribution is 25 Coins.", { appearance: "error" });
                    else if (d > B) t("Max contribution is ".concat(B, "!"), { appearance: "error" });
                    else {
                      b(!0);
                      var a = { amount: d, entityId: w, data: { team1: n.favoriteTeam } };
                      km("/api/wishlist", JSON.stringify(a))
                        .then(function (e) {
                          e.status && 200 === e.status && e.ok
                            ? ((n.coins = n.coins - d),
                              i(Object(C.a)({}, n)),
                              t("Contribution Made", { appearance: "success" }),
                              o.goBack())
                            : e.json().then(function (e) {
                                t(e.error || "Error", { appearance: "error" });
                              });
                        })
                        .finally(
                          Object(h.a)(
                            f.a.mark(function e() {
                              return f.a.wrap(function (e) {
                                for (;;)
                                  switch ((e.prev = e.next)) {
                                    case 0:
                                      b(!1);
                                    case 1:
                                    case "end":
                                      return e.stop();
                                  }
                              }, e);
                            })
                          )
                        );
                    }
                  else t("You need a pizza to contribute to the Wishlist!", { appearance: "error" });
                }}
              >
                <q.a.Group className="ModalForm-Form-Amount" controlId="amount">
                  <q.a.Label>How many coins do you want to contribute?</q.a.Label>
                  <div
                    className={
                      "ModalForm-Form-Inputs-Amount" + (n.lightMode ? " ModalForm-Form-Inputs-Amount-LightMode" : "")
                    }
                  >
                    <div className="ModalForm-Ticket-Wrapper">
                      <tc className="ModalForm-Ticket-Icon" />
                      {n.coins}
                    </div>
                    <q.a.Control type="number" value={d} onChange={y} />
                    <q.a.Control
                      type="range"
                      className="ModalForm-Range"
                      min={25}
                      max={Math.min(n.coins, B)}
                      value={d}
                      onChange={y}
                      step="1"
                    />
                    <a
                      className={
                        "ModalForm-Form-Inputs-Amount-Max" +
                        (n.lightMode ? " ModalForm-Form-Inputs-Amount-Max-LightMode" : "")
                      }
                      onClick={function (e) {
                        e.preventDefault(), g(Math.min(n.coins, B));
                      }}
                    >
                      Max: {B}
                    </a>
                  </div>
                </q.a.Group>
                <div className="ModalForm-Submit-Wrapper">{O}</div>
              </q.a>
            </Fs>
          );
        };
      a(254);
      function Py() {
        var e,
          t = Object(r.useContext)(M.context),
          a = t.user,
          n = (t.setUser, Object(r.useContext)(xo.context)),
          i = Object(r.useState)([]),
          o = Object(s.a)(i, 2),
          u = o[0],
          m = o[1],
          d = Object(c.g)(),
          f = Object(r.useState)(null !== (e = a.motion) && void 0 !== e && e),
          h = Object(s.a)(f, 2),
          g = h[0],
          p = h[1],
          E = Object(r.useState)(!1),
          v = Object(s.a)(E, 2),
          b = v[0],
          w = v[1];
        Object(r.useEffect)(function () {
          var e = window.matchMedia("(max-width: 1080px)");
          e.addListener(y), y(e);
          var t = window.matchMedia("(prefers-reduced-motion: reduce)");
          return (
            t.addListener(B),
            B(t),
            function () {
              e.removeListener(y), t.removeListener(B);
            }
          );
        }, []);
        var y = function (e) {
            e.matches ? w(!0) : w(!1);
          },
          B = function (e) {
            e.matches ? p(!0) : a.motion || p(!1);
          };
        Object(r.useEffect)(
          function () {
            if (u.length < 1) {
              var e,
                t = QA(n, { filters: {} }, null !== (e = a.favoriteTeam) && void 0 !== e ? e : "", !1);
              m(t);
            }
          },
          [n]
        );
        for (
          var O = [],
            I = [],
            S = b ? 11 : 21,
            C = 0,
            k = u
              .map(function (e, t) {
                return {
                  team: e,
                  x:
                    e.imPosition[0] <= 0
                      ? Math.floor(Math.abs(e.imPosition[0]) * Math.floor(12.5)) + Math.ceil(12.5)
                      : Math.ceil(12.5) - Math.floor(e.imPosition[0] * Math.floor(12.5)),
                  y:
                    e.imPosition[1] <= 0
                      ? Math.max(
                          Math.ceil(19) + Math.floor(Math.abs(e.imPosition[1]) * Math.floor(19)),
                          Math.ceil(19) + 1
                        )
                      : Math.ceil(19) - Math.floor(e.imPosition[1] * Math.floor(19)),
                };
              })
              .sort(function (e, t) {
                return t.x - e.x || t.y - e.y;
              }),
            N = [],
            T = 0;
          T < 24;
          T++
        )
          I.push(
            <div
              className="DepthChart-Line DepthChart-Line-Vertical"
              style={{ left: "".concat(T * S + S, "px"), animation: g ? "none" : "" }}
            />
          );
        for (var x = 0; x < 37; x++) {
          x + 1 === Math.ceil(19) &&
            ((C = Math.ceil(19) * S - S / 4),
            O.push(
              <svg
                xmlns="http://www.w3.org/2000/svg"
                role="img"
                aria-label="MVP Line. This is a wavy gold line."
                className="MVPLine"
                viewBox="0 0 650 20"
                style={{ position: "absolute", top: "".concat(C, "px"), zIndex: 2, margin: 0 }}
              >
                <g>
                  <title>MVP Line</title>
                  <desc>This is a wavy gold line.</desc>
                  <path
                    strokeWidth="3"
                    d="M 0 10 Q 10 0, 20 10 Q 30 20, 40 10 Q 50 0, 60 10 Q 70 20, 80 10 Q 90 0, 100 10 Q 110 20, 120 10 Q 130 0, 140 10 Q 150 20, 160 10 Q 170 0, 180 10 Q 190 20, 200 10 Q 210 0, 220 10 Q 230 20, 240 10 Q 250 0, 260 10 Q 270 20, 280 10 Q 290 0, 300 10 Q 310 20, 320 10 Q 330 0, 340 10 Q 350 20, 360 10 Q 370 0, 380 10 Q 390 20, 400 10 Q 410 0, 420 10 Q 430 20, 440 10 Q 450 0, 460 10 Q 470 20, 480 10 Q 490 0, 500 10 Q 510 20, 520 10 Q 530 0, 540 10 Q 550 20, 560 10 Q 570 0, 580 10 Q 590 20, 600 10 Q 610 0, 620 10 Q 630 20, 640 10 Q 650 0, 660 10"
                  />
                </g>
              </svg>
            ));
          var P = !1;
          [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33].includes(x) && (P = !0),
            O.push(
              <div
                className={
                  "DepthChart-Line DepthChart-Line-Horizontal" + (P ? " DepthChart-Line-Horizontal-Thick" : "")
                }
                style={{ top: "".concat((x + 1) * S, "px"), animation: g ? "none" : "" }}
              />
            );
        }
        var L = [5, -5, 5, -5, 5, -5].map(function (e) {
            return (
              <svg
                className="DepthChart-Header-Cactus"
                style={{ marginTop: e }}
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 512 512"
              >
                <path d="M0 0h512v512H0z" fill="#000000" fill-opacity="0.01" />
                <g transform="translate(0,0)">
                  <path
                    d="M348.77 14.06l-5.854 17.163C332.126 22.93 318.623 18.01 304 18c-15.35.016-29.457 5.454-40.496 14.512l-15.602-13.567-11.81 13.584 15.228 13.238c-5.303 7.707-8.958 16.64-10.465 26.306h-23.263v18H240V192h-16.023c-24.42 0-31.977-5.767-31.977-31.857v-26.127h9.064v-18h-10.59c-1.455-5.342-3.874-9.798-6.947-13.358l-7.373 13.358h-3.334l-13.203-7.286 8.63-15.636c-9.775-2.624-20.645-.482-28.624 6.412l-13.264-11.53-11.81 13.583 15.31 13.31c-1.187 3.886-1.86 8.254-1.86 13.13v21.71h-19.46v18H128V192c0 31.09 6.727 48.742 24.484 57.33L141.5 267.068l15.303 9.477 13.62-21.99c6.328.98 13.464 1.445 21.522 1.445 21.323-.077 42.648.162 63.97 0l.17 18s-8.49.07-16.085.137v75.052h-25.68v18H240v60.587h-15.488v18H240v49.368h128v-12.057h13.7v-18H368v-26.48h23.572v-18H368V316.62h-25.99v-18H368v-15.71h14.97v-18H368v-28.89h25.504v-18H368V137h16v-18h-16V88.008h-23.488v-18h22.314c-1.662-8.766-5.116-16.88-9.945-23.975l8.927-26.16-17.036-5.812zM309.35 43.093l.875 31.986-17.994.492-.876-31.988 17.994-.49zm-46.627 61.306h32v18h-32v-18zm53.852 69.182h32v18h-32v-18zm-169.717 11.035h32v18h-32v-18zm88.553 30.184h32v18h-32v-18zm230.022 12.733l-9.116 20.48c-.105 0-.21-.013-.314-.013-6.622 0-13.238 2.44-17.844 7.313l-12.76-11.094-11.81 13.583L432 273.813v46.275c0 12.18-7.97 15.912-16.395 15.912H386v48h32.994l.12 19.742 18-.11-.12-19.786C465.712 382.176 480 366.232 480 336v-18.223h16.512v-18H480V272c0-7.636-2.736-13.446-6.898-17.438l8.773-19.71-16.445-7.32zm-19.61 83.985l18 .113-.2 32-18-.112.2-32zm-152.472 19.574l.875 31.986-17.994.492-.876-31.988 17.994-.49zm26.312 49.496h32v18h-32v-18zm-62.574 32.453h32v18h-32v-18z"
                    fill="#fff"
                    fill-opacity="1"
                  />
                </g>
              </svg>
            );
          }),
          R = (
            <svg xmlns="http://www.w3.org/2000/svg" className="DepthChart-BottomFeeders" viewBox="100 0 312 440">
              <path
                className="DepthChart-BottomFeeders-Image"
                d="M257.97 20.22C150.394 88.557 72.1 275.18 69.874 494.374h375.188c-2.2-219.194-79.52-405.817-187.094-474.156zm-18.845 163.06l18.344 36.282 18.342-36.28c9.99 2.326 19.72 6.537 29.063 12.437l4.156 48.56 20.095-28.624c7.938 8.123 15.48 17.558 22.594 28.156L345.436 279l18.375-15.344c24.39 44.295 42.05 103.6 49.532 170.78-10.036-32.144-26.553-60.393-47.625-82.342l4-35.813L344.093 333c-6.098-4.53-12.452-8.595-19.03-12.156l-3.345-40.97-26.314 28.876c-7.31-2.074-14.792-3.58-22.437-4.438l-15.5-33.25-15.5 33.282c-8.14.916-16.12 2.522-23.876 4.812l-24.875-27.28-3.157 38.874c-6.645 3.585-13.065 7.68-19.22 12.25l-25.624-16.72 4.03 35.814c-21.08 21.95-37.618 50.19-47.656 82.344 7.482-67.188 25.17-126.485 49.562-170.782L169.5 279l-6.28-35.188c7.37-10.983 15.213-20.71 23.468-29.03l19.25 27.374 3.937-46.312c9.4-5.963 19.193-10.22 29.25-12.563z"
                fill-opacity="1"
              />
            </svg>
          );
        return (
          <div className="DepthChart" id="Main-Body">
            <div className="DepthChart-Body-Wrapper">
              <q.a className="DepthChart-Settings">
                <q.a.Check
                  className="ModalForm-Switch"
                  type="switch"
                  id="motion"
                  label="Turn Chart Motion Off"
                  checked={g}
                  onChange={function () {
                    return p(!g);
                  }}
                />
              </q.a>
              <div className="DepthChart-Body-Wrapper-Inner">
                <div className="DepthChart-Labels">
                  <div className="DepthChart-DepthMarker" style={{ gridRow: "4/6" }}>
                    0
                  </div>
                  <div className="DepthChart-DepthMarker" style={{ gridRow: "".concat(7, "/").concat(9) }}>
                    0.2
                  </div>
                  <div className="DepthChart-DepthMarker" style={{ gridRow: "".concat(10, "/").concat(12) }}>
                    0.4
                  </div>
                  <div
                    className="DepthChart-DepthMarker"
                    style={{ gridRow: "".concat(Math.ceil(19) - 1 - 5, "/").concat(Math.ceil(19) + 1 - 5) }}
                  >
                    0.6
                  </div>
                  <div
                    className="DepthChart-DepthMarker"
                    style={{ gridRow: "".concat(Math.ceil(19) - 1 - 2, "/").concat(Math.ceil(19) + 1 - 2) }}
                  >
                    0.8
                  </div>
                  <div
                    className="DepthChart-DepthMarker"
                    style={{ gridRow: "".concat(Math.ceil(19), "/").concat(Math.ceil(19) + 2) }}
                  >
                    1
                  </div>
                  <div
                    className="DepthChart-DepthMarker"
                    style={{ gridRow: "".concat(Math.ceil(19) - 1 + 4, "/").concat(Math.ceil(19) + 1 + 4) }}
                  >
                    1.2
                  </div>
                  <div
                    className="DepthChart-DepthMarker"
                    style={{ gridRow: "".concat(Math.ceil(19) - 1 + 7, "/").concat(Math.ceil(19) + 1 + 7) }}
                  >
                    1.4
                  </div>
                  <div className="DepthChart-DepthMarker" style={{ gridRow: "".concat(28, "/").concat(30) }}>
                    1.6
                  </div>
                  <div className="DepthChart-DepthMarker" style={{ gridRow: "".concat(31, "/").concat(33) }}>
                    1.8
                  </div>
                  <div className="DepthChart-DepthMarker" style={{ gridRow: "".concat(34, "/").concat(36) }}>
                    2
                  </div>
                </div>
                <div className="DepthChart-Body">
                  <div className="DepthChart-EndZone-Top">{L}</div>
                  {O}
                  {I}
                  {k.map(function (e, t) {
                    var a = e.team.imPosition[0].toFixed(3),
                      n =
                        e.team.imPosition[1] > 0
                          ? (1 - e.team.imPosition[1]).toFixed(3)
                          : (1 + Math.abs(e.team.imPosition[1])).toFixed(3);
                    return (
                      0 !== t && k[t - 1].x === e.x && k[t - 1].y === e.y
                        ? (!0,
                          N.push({
                            nickname: k[t - 1].team.nickname,
                            mainColor: k[t - 1].team.mainColor,
                            xValue: k[t - 1].team.imPosition[0].toFixed(3),
                            yValue: (1 - k[t - 1].team.imPosition[1]).toFixed(3),
                          }))
                        : (N = []),
                      (
                        <Ct.a
                          key={t}
                          placement="top"
                          overlay={
                            <St.a id={"tooltip-" + t.toString()} className="AttributeTooltip">
                              <div className="AttributeTooltip-Container">
                                <div
                                  className="AttributeTooltip-Header"
                                  style={{
                                    color: NA(e.team.mainColor),
                                    backgroundColor: e.team.mainColor,
                                    padding: "0 5px",
                                  }}
                                >
                                  {e.team.nickname}
                                </div>
                                <div className="AttributeTooltip-Description">X: {a}</div>
                                <div className="AttributeTooltip-Description">Y: {n}</div>
                                {N.reverse().map(function (e) {
                                  return (
                                    <l.a.Fragment>
                                      <div style={{ height: "5px" }} />
                                      <div
                                        className="AttributeTooltip-Header"
                                        style={{
                                          color: NA(e.mainColor),
                                          backgroundColor: e.mainColor,
                                          padding: "0 8px",
                                        }}
                                      >
                                        {e.nickname}
                                      </div>
                                      <div className="AttributeTooltip-Description">X: {e.xValue}</div>
                                      <div className="AttributeTooltip-Description">Y: {e.yValue}</div>
                                    </l.a.Fragment>
                                  );
                                })}
                              </div>
                            </St.a>
                          }
                        >
                          <div
                            className={"Dale" === e.team.nickname ? "DepthChart-Team-Boat" : ""}
                            style={{
                              gridColumn: e.x,
                              gridRow: e.y,
                              height: "100%",
                              width: "100%",
                              animation: g ? "none" : "",
                            }}
                          >
                            <A background={d} path={"/team/".concat(e.team.id)} className="DepthChart-Team-Wrapper">
                              <div className="DepthChart-Team">{DA(e.team)}</div>
                            </A>
                          </div>
                        </Ct.a>
                      )
                    );
                  })}
                  <div
                    className="DepthChart-BottomFeeders-Wrapper"
                    style={{ height: "".concat(b ? 380 - C - 10 : 760 - C - 60, "px") }}
                  >
                    {R}
                  </div>
                  <div className="DepthChart-EndZone-Bottom">
                    {[15, -10, 5, 0, -5, 10, -15].map(function (e) {
                      return 0 === e ? (
                        <svg xmlns="http://www.w3.org/2000/svg" className="DepthChart-Footer" viewBox="50 15 400 512">
                          <path d="M0 0h512v512H0z" fill="#000000" fill-opacity="0.01" />
                          <g transform="translate(0,0)">
                            <g>
                              <path
                                d="M208.7 22.36L231.1 99.59C240 97.93 249.2 97.1 258.7 97.1C267.2 97.1 275.5 97.78 283.6 99.12L305.8 22.36Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path
                                d="M311.8 68.62L301.8 103.4C317 108.2 330.9 115.7 342.6 126.1L368.1 102.3C352.1 87.51 333 75.95 311.8 68.62Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path
                                d="M202.9 69.48C181.9 77.15 163 89.09 147.3 104.2L172.8 128C172.9 127.9 173 127.7 173.2 127.6C184.6 117 198.1 109.3 213 104.2Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path
                                d="M97.56 83.35L59.71 139L145.8 169.1C149.5 159.1 154.4 150 160.3 142Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path
                                d="M415.8 83.35L355.5 139.7C361.9 147.9 367.2 157.3 371.2 167.8L453.6 139Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path
                                d="M412.4 173.3L376.6 185.8C378.8 196 380 206.9 380 218.6L380 227.9L418.9 227.9L418.9 218.6C418.9 202.8 416.6 187.6 412.4 173.3Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path
                                d="M105 174.7C101.1 188.6 98.95 203.3 98.95 218.6L98.95 227.9L137.5 227.9L137.5 218.6C137.5 207.4 138.6 196.9 140.6 187.2Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path d="M65.7 246.5L65.7 302.7L137.5 302.7L137.5 246.5Z" fill="#fff" fill-opacity="1" />
                              <path d="M380 246.5L380 302.7L446 302.7L446 246.5Z" fill="#fff" fill-opacity="1" />
                              <path
                                d="M98.95 321.3L98.95 358.8L137.5 358.8L137.5 321.3Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path d="M380 321.3L380 358.8L418.9 358.8L418.9 321.3Z" fill="#fff" fill-opacity="1" />
                              <path
                                d="M56.16 377.4L56.16 433.5L137.5 433.5L137.5 377.4Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path d="M380 377.4L380 433.5L455.8 433.5L455.8 377.4Z" fill="#fff" fill-opacity="1" />
                              <path
                                d="M146.7 452.1L107.1 489.6L404.5 489.6L371.5 452.1Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                            </g>
                          </g>
                        </svg>
                      ) : (
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          style={{ marginTop: e }}
                          viewBox="0 0 512 512"
                          className="DepthChart-Footer-Cloud"
                        >
                          <g transform="translate(-1,-31)">
                            <g>
                              <path
                                d="M256 106C222.19 106 194.113 128.69 184.75 159.438C174.532 154.22 163.258 151 151 151C109.58 151 76 184.58 76 226C76 227.784 76.346 229.405 76.468 231.157C41.284 243.387 16 276.65 16 316C16 365.706 56.294 406 106 406L406 406C455.706 406 496 365.706 496 316C496 276.65 470.716 243.386 435.532 231.157C435.655 229.405 436 227.783 436 226C436 184.58 402.42 151 361 151C348.742 151 337.468 154.222 327.25 159.437C317.887 128.69 289.81 106 256 106Z"
                                fill="#fff"
                                fill-opacity="1"
                              />
                              <path
                                d="M196 196L256 256L316 196L346 226L286 286L346 346L316 376L256 316L196 376L166 346L226 286L166 226Z"
                                fill="#ffffff"
                                fill-opacity="0"
                              />
                            </g>
                          </g>
                        </svg>
                      );
                    })}
                  </div>
                </div>
              </div>
            </div>
            <div className="DepthChart-Lists">
              <div className="DepthChart-List">
                <h3 className="DepthChart-Lists-Header">Top 5</h3>
                <div className="DepthChart-Lists-Container">
                  {u
                    .sort(function (e, t) {
                      return t.imPosition[1] - e.imPosition[1];
                    })
                    .slice(0, 5)
                    .map(function (e) {
                      return (
                        <A background={d} path={"/team/".concat(e.id)} className="DepthChart-Lists-Item">
                          <div className="DepthChart-Lists-Name">
                            <div
                              className="DepthChart-Lists-Color"
                              aria-hidden="true"
                              style={{ background: e.mainColor }}
                            >
                              <div className="DepthChart-Lists-Emoji">{DA(e)}</div>
                            </div>
                            {e.fullName}
                          </div>
                          <div className="DepthChart-Lists-Number">
                            {e.imPosition[1] > 0
                              ? (1 - e.imPosition[1]).toFixed(4)
                              : (1 + Math.abs(e.imPosition[1])).toFixed(4)}
                          </div>
                        </A>
                      );
                    })}
                </div>
              </div>
              <div className="DepthChart-List">
                <h3 className="DepthChart-Lists-Header">Middle 5</h3>
                <div className="DepthChart-Lists-Container">
                  {u
                    .sort(function (e, t) {
                      return t.imPosition[1] - e.imPosition[1];
                    })
                    .slice(u.length / 2 - 2, u.length / 2 + 3)
                    .map(function (e) {
                      return (
                        <A background={d} path={"/team/".concat(e.id)} className="DepthChart-Lists-Item">
                          <div className="DepthChart-Lists-Name">
                            <div
                              className="DepthChart-Lists-Color"
                              aria-hidden="true"
                              style={{ background: e.mainColor }}
                            >
                              <div className="DepthChart-Lists-Emoji">{DA(e)}</div>
                            </div>
                            {e.fullName}
                          </div>
                          <div className="DepthChart-Lists-Number">
                            {e.imPosition[1] > 0
                              ? (1 - e.imPosition[1]).toFixed(4)
                              : (1 + Math.abs(e.imPosition[1])).toFixed(4)}
                          </div>
                        </A>
                      );
                    })}
                </div>
              </div>
              <div className="DepthChart-List">
                <h3 className="DepthChart-Lists-Header">Bottom 5</h3>
                <div className="DepthChart-Lists-Container">
                  {u
                    .sort(function (e, t) {
                      return e.imPosition[1] - t.imPosition[1];
                    })
                    .slice(0, 5)
                    .map(function (e) {
                      return (
                        <A background={d} path={"/team/".concat(e.id)} className="DepthChart-Lists-Item">
                          <div className="DepthChart-Lists-Name">
                            <div
                              className="DepthChart-Lists-Color"
                              aria-hidden="true"
                              style={{ background: e.mainColor }}
                            >
                              <div className="DepthChart-Lists-Emoji">{DA(e)}</div>
                            </div>
                            {e.fullName}
                          </div>
                          <div className="DepthChart-Lists-Number">
                            {e.imPosition[1] > 0
                              ? (1 - e.imPosition[1]).toFixed(4)
                              : (1 + Math.abs(e.imPosition[1])).toFixed(4)}
                          </div>
                        </A>
                      );
                    })}
                </div>
              </div>
            </div>
            <Lh />
          </div>
        );
      }
      var My = function (e) {
          var t = Object(r.useContext)(S.context),
            a = Object(r.useContext)(xo.context),
            n = (Object(c.g)(), Object(r.useContext)(M.context)),
            i = (n.user, n.setUser, Object(r.useState)(0)),
            o = Object(s.a)(i, 2),
            u = o[0],
            m = o[1],
            A = Object(r.useState)(0),
            d = Object(s.a)(A, 2),
            g = d[0],
            p = d[1],
            E = Object(r.useState)(),
            v = Object(s.a)(E, 2),
            b = v[0],
            w = v[1],
            y = <js />,
            B = a.leagues.find(function (e) {
              var a;
              return e.id === (null === (a = t.season) || void 0 === a ? void 0 : a.league);
            });
          return (
            Object(r.useEffect)(
              function () {
                var e = (function () {
                    var e = Object(h.a)(
                      f.a.mark(function e() {
                        var t, n;
                        return f.a.wrap(function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                void 0 !==
                                  (n =
                                    null === a || void 0 === a || null === (t = a.stats) || void 0 === t
                                      ? void 0
                                      : t.communityChest) && p(n.runs);
                              case 2:
                              case "end":
                                return e.stop();
                            }
                        }, e);
                      })
                    );
                    return function () {
                      return e.apply(this, arguments);
                    };
                  })(),
                  n = (function () {
                    var e = Object(h.a)(
                      f.a.mark(function e() {
                        var a, n, r;
                        return f.a.wrap(function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                return (
                                  (e.next = 2),
                                  vA(
                                    null !== (a = null === (n = t.sim) || void 0 === n ? void 0 : n.season) &&
                                      void 0 !== a
                                      ? a
                                      : 0
                                  )
                                );
                              case 2:
                                void 0 !== (r = e.sent) && w(r);
                              case 4:
                              case "end":
                                return e.stop();
                            }
                        }, e);
                      })
                    );
                    return function () {
                      return e.apply(this, arguments);
                    };
                  })();
                e(), n();
                var r = 0;
                a.teams.forEach(function (e) {
                  LA(e.id, a) && (r += e.eDensity);
                }),
                  m(Number(r.toFixed(5)));
              },
              [a]
            ),
            t &&
              t.sim &&
              B &&
              (y = (
                <l.a.Fragment>
                  <div className="ModalItem-Info">
                    <div className="Team-Header">
                      <div className="Team-LogoLine-Wrapper" style={{ alignItems: "center" }}>
                        <div className="Team-LogoLine">
                          <Ow className="LeagueInfo-Header-Icon" />
                        </div>
                        <div className="ModalItem-Name-Wrapper">
                          <h2 className="ModalItem-Name">{B.name}</h2>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="tab-content">
                    <div className="ModalItem-Content">
                      <div className="Team-Section LeagueInfo-Section">
                        <li className="LeagueInfo-Line-Box">
                          <div className="Player-Info-Line-Header LeagueInfo-Line-Header">CEO</div>
                          <div className="LeagueInfo-Icon">{bs(2)}</div>
                        </li>
                        <li className="LeagueInfo-Line-Box">
                          <div className="Player-Info-Line-Header LeagueInfo-Line-Header">Historian</div>
                          <div className="LeagueInfo-Icon">{bs(5)}</div>
                        </li>
                        <li className="LeagueInfo-Line-Box">
                          <div className="Player-Info-Line-Header LeagueInfo-Line-Header">
                            Food, Beverage, Tourism, and Gift Shop Director
                          </div>
                          <div className="LeagueInfo-Icon">{bs(1)}</div>
                        </li>
                      </div>
                      <div className="Team-Section">
                        <div className="ModalItem-Subheader">Active Rules</div>
                        <div className="ModalItem-Attributes LeagueInfo-Attributes">
                          {t.sim.attr.map(function (e, t) {
                            return <Tt id={e} type={Ot.League} key={t} context={It.League} />;
                          })}
                        </div>
                      </div>
                      <div className="Team-Section">
                        <div className="ModalItem-Subheader">Stats</div>
                        <ul className="Player-Info-Stats">
                          <li className="Player-Info-Line LeagueInfo-Line">
                            <div className="Player-Info-Line-Header LeagueInfo-Line-Header">Seasons</div>
                            {t.sim.season + 1}
                          </li>
                          <li className="Player-Info-Line LeagueInfo-Line">
                            <div className="Player-Info-Line-Header LeagueInfo-Line-Header">Reigning Champion</div>
                            <div className="Player-Info-Line-Body">
                              <div
                                style={{ backgroundColor: null === b || void 0 === b ? void 0 : b.mainColor }}
                                className="Team-Logo LeagueInfo-Team-Icon"
                              >
                                {DA(b)}
                              </div>{" "}
                              {null === b || void 0 === b ? void 0 : b.fullName}
                            </div>
                          </li>
                          <li className="Player-Info-Line LeagueInfo-Line">
                            <div className="Player-Info-Line-Header LeagueInfo-Line-Header">Total eDensity</div>
                            {u} bl/m³
                          </li>
                        </ul>
                      </div>
                      <div className="Team-Section">
                        {PA(t.sim, "SIM_COMMUNITY_CHEST") ? (
                          <l.a.Fragment>
                            <div className="ModalItem-Subheader">Next Crate</div>
                            <ul className="Player-Info-Stats">
                              <li className="Player-Info-Line LeagueInfo-Line-Bar">
                                {wo(<Re />, "LeagueInfo-Bar", g, 3e3)}
                              </li>
                            </ul>
                          </l.a.Fragment>
                        ) : null}
                      </div>
                    </div>
                  </div>
                </l.a.Fragment>
              )),
            (<Fs {...Object.assign({}, e, { className: "ModalItem" })}>{y}</Fs>)
          );
        },
        Ly = function (e) {
          var t = Object(r.useContext)(M.context),
            a = (t.user, t.setUser, Object(c.f)()),
            n = Object(ks.useToasts)().addToast,
            i = Object(r.useState)(!1),
            o = Object(s.a)(i, 2),
            u = o[0],
            m = o[1],
            A = Object(r.useState)(!1),
            d = Object(s.a)(A, 2),
            f = d[0],
            h = d[1];
          Object(c.g)(), e.isModal, Object(r.useRef)(null);
          return (
            <Fs {...Object.assign({}, e, { className: "Auth" })}>
              <header className="Auth-Header Auth-Header-Reset">Verify Account</header>
              {f ? (
                <div className="Auth-Instructions">
                  Email sent. Please open it and follow the instructions. <br />
                  <br /> Check your spam folder.
                </div>
              ) : (
                <div className="Auth-Instructions">
                  To contribute to the league you will first need to verify your email address. <br />
                  <br /> Click below to send a verification email.
                </div>
              )}
              {f ? (
                <l.a.Fragment>
                  <div className="Auth-Forgot">
                    {u ? (
                      <js />
                    ) : (
                      <button
                        className="Auth-Submit"
                        onClick={function () {
                          return a.goBack();
                        }}
                      >
                        Okay
                      </button>
                    )}
                  </div>
                </l.a.Fragment>
              ) : (
                <form
                  onSubmit={function (t) {
                    t.preventDefault(),
                      m(!0),
                      km("/auth/verify-account").then(function (e) {
                        m(!1),
                          h(!0),
                          e.ok && e.status && 200 === e.status
                            ? n("Email sent", { appearance: "success" })
                            : e.json().then(function (e) {
                                n(e.error || "Error", { appearance: "error" });
                              });
                      }),
                      e.dismiss && e.dismiss();
                  }}
                >
                  <div>{u ? <js /> : <input className="Auth-Submit" type="submit" value="Verify Email" />}</div>
                </form>
              )}
            </Fs>
          );
        },
        Ry = function (e) {
          var t = Object(c.h)().token,
            a = Object(r.useContext)(M.context),
            n = a.user,
            i = a.setUser,
            o = Object(c.f)(),
            u = Object(ks.useToasts)().addToast,
            m = Object(r.useState)(!1),
            A = Object(s.a)(m, 2),
            d = A[0],
            g = A[1],
            p = Object(r.useState)(!1),
            E = Object(s.a)(p, 2);
          E[0], E[1], Object(c.g)(), e.isModal, Object(r.useRef)(null), Object(r.useRef)(null);
          return (
            Object(r.useEffect)(function () {
              n.verified
                ? o.push("/")
                : d ||
                  (g(!0),
                  (function () {
                    var e = Object(h.a)(
                      f.a.mark(function e() {
                        return f.a.wrap(function (e) {
                          for (;;)
                            switch ((e.prev = e.next)) {
                              case 0:
                                km("/auth/verify-account/".concat(t)).then(function (e) {
                                  g(!1),
                                    e.ok && e.status && 200 === e.status
                                      ? (u("Account Verified", { appearance: "success" }),
                                        (n.verified = !0),
                                        i(Object(C.a)({}, n)))
                                      : e.json().then(function (e) {
                                          u("Token is invalid or expired.", { appearance: "error" });
                                        }),
                                    o.push("/");
                                });
                              case 1:
                              case "end":
                                return e.stop();
                            }
                        }, e);
                      })
                    );
                    return function () {
                      return e.apply(this, arguments);
                    };
                  })()());
            }, []),
            (<div>{d ? <js /> : <l.a.Fragment />}</div>)
          );
        };
      var Dy = function (e) {
          Object(r.useContext)(M.context).initUser;
          var t = Object(c.f)(),
            a = Object(ks.useToasts)().addToast,
            n = Object(r.useState)(!1),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1],
            m = Object(r.useState)(!1),
            A = Object(s.a)(m, 2),
            d = A[0],
            f = A[1],
            h = (Object(c.g)(), e.isModal, Object(r.useRef)(null));
          return (
            <Fs {...Object.assign({}, e, { className: "Auth" })}>
              <header className="Auth-Header Auth-Header-Reset">Change Email</header>
              {d ? (
                <div className="Auth-Instructions">
                  <br />
                  Email sent. Please open it and follow the instructions. <br />
                  <br /> Check your spam folder.
                </div>
              ) : (
                <div className="Auth-Instructions">
                  <br />
                  You will need to verify the new address.
                </div>
              )}
              {d ? (
                <l.a.Fragment>
                  <div className="Auth-Forgot">
                    {o ? (
                      <js />
                    ) : (
                      <button
                        className="Auth-Submit"
                        onClick={function () {
                          return t.goBack();
                        }}
                      >
                        Okay
                      </button>
                    )}
                  </div>
                </l.a.Fragment>
              ) : (
                <form
                  onSubmit={function (e) {
                    if (
                      (e.preventDefault(),
                      (t = h.current.value),
                      /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(
                        String(t).toLowerCase()
                      ))
                    ) {
                      var t;
                      u(!0);
                      var n = { newEmail: h.current.value.toLowerCase() };
                      km("/auth/change-email", JSON.stringify(n)).then(function (e) {
                        u(!1),
                          f(!0),
                          e.ok && e.status && 200 === e.status
                            ? a("Email sent", { appearance: "success" })
                            : e.json().then(function (e) {
                                a(e.error || "Error", { appearance: "error" });
                              });
                      });
                    } else a("Please enter a valid email.", { appearance: "error" });
                  }}
                >
                  <div className="Auth-Forgot">
                    <input ref={h} className="Auth-Input" placeholder="New Email" type="email" name="username" />
                  </div>
                  <div>{o ? <js /> : <input className="Auth-Submit" type="submit" value="Verify Email" />}</div>
                </form>
              )}
            </Fs>
          );
        },
        Fy = function (e) {
          var t = Object(c.h)().token,
            a = Object(r.useContext)(M.context),
            n = (a.user, a.initUser),
            i = Object(c.f)(),
            o = Object(ks.useToasts)().addToast,
            u = Object(r.useState)(!1),
            m = Object(s.a)(u, 2),
            A = m[0],
            d = m[1],
            g = Object(r.useState)(!1),
            p = Object(s.a)(g, 2);
          p[0], p[1], Object(c.g)(), e.isModal, Object(r.useRef)(null), Object(r.useRef)(null);
          return (
            Object(r.useEffect)(function () {
              A ||
                (d(!0),
                (function () {
                  var e = Object(h.a)(
                    f.a.mark(function e() {
                      return f.a.wrap(function (e) {
                        for (;;)
                          switch ((e.prev = e.next)) {
                            case 0:
                              km("/auth/change-email/".concat(t)).then(function (e) {
                                d(!1),
                                  e.ok && e.status && 200 === e.status
                                    ? (o("Email Changed", { appearance: "success" }), n())
                                    : e.json().then(function (e) {
                                        o("Token is invalid or expired.", { appearance: "error" });
                                      }),
                                  i.push("/");
                              });
                            case 1:
                            case "end":
                              return e.stop();
                          }
                      }, e);
                    })
                  );
                  return function () {
                    return e.apply(this, arguments);
                  };
                })()());
            }, []),
            (<div>{A ? <js /> : <l.a.Fragment />}</div>)
          );
        },
        Qy = function (e) {
          Object(r.useContext)(M.context).initUser;
          var t = Object(c.f)(),
            a = Object(ks.useToasts)().addToast,
            n = Object(r.useState)(!1),
            i = Object(s.a)(n, 2),
            o = i[0],
            u = i[1],
            m = Object(r.useState)(!1),
            A = Object(s.a)(m, 2),
            d = A[0],
            f = A[1],
            h = Object(r.useState)(!1),
            g = Object(s.a)(h, 2),
            p = g[0],
            E = g[1];
          Object(c.g)(), e.isModal, Object(r.useRef)(null);
          return (
            <Fs {...Object.assign({}, e, { className: "Auth" })}>
              <header className="Auth-Header Auth-Header-Reset">Delete Account</header>
              {d ? (
                p ? (
                  <div className="Auth-Instructions">
                    Email sent. Please open it and follow the instructions. <br />
                    <br /> Check your spam folder.
                  </div>
                ) : (
                  <div className="Auth-Instructions">
                    <br />
                    To confirm, send a deletion request to the email associated with this account.
                  </div>
                )
              ) : (
                <div className="Auth-Instructions">
                  <br />
                  Are you sure you want to delete your account?
                  <br />
                  <br />
                  This cannot be undone.
                </div>
              )}
              {d ? (
                p ? (
                  <l.a.Fragment>
                    <div className="Auth-Forgot">
                      {o ? (
                        <js />
                      ) : (
                        <button
                          className="Auth-Submit"
                          onClick={function () {
                            return t.goBack();
                          }}
                        >
                          Okay
                        </button>
                      )}
                    </div>
                  </l.a.Fragment>
                ) : (
                  <form
                    onSubmit={function (e) {
                      e.preventDefault(),
                        u(!0),
                        km("/auth/delete-account", JSON.stringify({})).then(function (e) {
                          u(!1),
                            E(!0),
                            e.ok && e.status && 200 === e.status
                              ? a("Email sent", { appearance: "success" })
                              : e.json().then(function (e) {
                                  a(e.error || "Error", { appearance: "error" });
                                });
                        });
                    }}
                  >
                    <div>{o ? <js /> : <input className="Auth-Submit" type="submit" value="Send Request" />}</div>
                  </form>
                )
              ) : (
                <l.a.Fragment>
                  <div className="Auth-Forgot">
                    <button
                      className="Auth-Submit"
                      onClick={function () {
                        return f(!0);
                      }}
                    >
                      Yes
                    </button>
                  </div>
                </l.a.Fragment>
              )}
            </Fs>
          );
        },
        jy = function (e) {
          var t = Object(c.h)().token,
            a = Object(r.useContext)(M.context),
            n = (a.user, a.setUser),
            i = (a.initUser, Object(c.f)()),
            o = Object(ks.useToasts)().addToast,
            u = Object(r.useState)(!1),
            m = Object(s.a)(u, 2),
            A = m[0],
            d = m[1],
            g = Object(r.useState)(!1),
            p = Object(s.a)(g, 2);
          p[0], p[1], Object(c.g)(), e.isModal, Object(r.useRef)(null), Object(r.useRef)(null);
          return (
            Object(r.useEffect)(function () {
              A ||
                (d(!0),
                (function () {
                  var e = Object(h.a)(
                    f.a.mark(function e() {
                      return f.a.wrap(function (e) {
                        for (;;)
                          switch ((e.prev = e.next)) {
                            case 0:
                              km("/auth/delete-account/".concat(t)).then(function (e) {
                                d(!1),
                                  e.ok && e.status && 200 === e.status
                                    ? (o("Account Deleted", { appearance: "success" }), n({}), i.push("/auth/logout"))
                                    : e.json().then(function (e) {
                                        o("Token is invalid or expired.", { appearance: "error" }), i.push("/");
                                      });
                              });
                            case 1:
                            case "end":
                              return e.stop();
                          }
                      }, e);
                    })
                  );
                  return function () {
                    return e.apply(this, arguments);
                  };
                })()());
            }, []),
            (<div>{A ? <js /> : <l.a.Fragment />}</div>)
          );
        };
      function Vy() {
        var e = Object(r.useContext)(hs.context);
        return (
          <div className={"Main" + (e && e.doc && e.doc.epsilon ? " Main-BigDeal" : "")}>
            <wg />
            <Wy />
          </div>
        );
      }
      function Wy() {
        var e = Object(r.useContext)(M.context).user,
          t = Object(r.useState)(!1),
          a = Object(s.a)(t, 2),
          n = a[0],
          i = a[1];
        return (
          Object(r.useEffect)(function () {
            document.body.classList.add("theme-dark");
          }, []),
          Object(r.useEffect)(
            function () {
              void 0 !== e && !e.isFetching && e.isSignedIn
                ? (i(!0),
                  e.lightMode
                    ? (document.body.classList.add("theme-light"),
                      document.body.classList.contains("theme-dark") && document.body.classList.remove("theme-dark"))
                    : (document.body.classList.add("theme-dark"),
                      document.body.classList.contains("theme-light") && document.body.classList.remove("theme-light")))
                : i(!1);
            },
            [e]
          ),
          void 0 !== e && e.isFetching ? <Gy /> : n ? <Yy /> : <Uy />
        );
      }
      function Uy() {
        var e = Object(c.g)(),
          t = e.state && e.state.background;
        return (
          <div>
            <jh />
            <div className="Main-Body-Intro">
              <c.c location={t || e}>
                <c.a path="/tos">
                  <Ub />
                </c.a>
                <c.a path="/privacy">
                  <Wb />
                </c.a>
                <c.a path="/login">
                  <Ep isLogin={!0} />
                </c.a>
                <c.a path="/reset-password/:token">
                  <vp />
                </c.a>
                <c.a path="/signup/:code?">
                  <Ep />
                </c.a>
                <c.a path="/faq">
                  <Rw />
                </c.a>
                <c.a path="/">
                  <xg />
                </c.a>
              </c.c>
              {t && (
                <l.a.Fragment>
                  <c.a path="/signup" children={<Ep isModal={!0} />} />
                  <c.a path="/login" children={<Ep isModal={!0} isLogin={!0} />} />
                  <c.a path="/reset/:token" children={<vp isModal={!0} />} />
                  <c.a path="/forgot" children={<bp isModal={!0} />} />
                  <c.a path="/team/:nickname" children={<Yg isModal={!0} />} />
                  <c.a path="/bet/:gameId" children={<zg isModal={!0} />} />
                  <c.a path="/vote/:voteType/:entityId" children={<Qb isModal={!0} />} />
                  <c.a path="/tribute/:entityId" children={<Fb isModal={!0} />} />
                  <c.a path="/buy/:itemName" children={<$g isModal={!0} />} />
                  <c.a path="/sell/:id" children={<ep isModal={!0} />} />
                </l.a.Fragment>
              )}
              <pp isModal={!0} dismissable={!1} />
            </div>
            <footer className="Main-Footer">
              <div className="Main-Footer-Links">
                <a className="Main-Footer-Link" href="/tos">
                  Terms of Service
                </a>
                <a className="Main-Footer-Link" href="/privacy">
                  Privacy Policy
                </a>
                <a className="Main-Footer-Link" href="mailto:press@thegameband.com">
                  Press
                </a>
              </div>
              <div className="Main-Footer-Advertise">
                <div className="Main-Footer-Advertise-Inner">
                  <a className="Main-Footer-Advertise-Icon" href={zy()}>
                    Become a Sponsor
                  </a>
                </div>
              </div>
              <a href="https://twitter.com/thegameband" target="_blank" className="Main-Footer-Logo">
                <Xb />
              </a>
            </footer>
          </div>
        );
      }
      function Gy() {
        return (
          <div>
            <div className="Main-Body" />
          </div>
        );
      }
      function Hy() {
        return (
          <div>
            <div className="Main-Body">
              <gs />
            </div>
          </div>
        );
      }
      function Yy() {
        var e,
          t,
          a,
          n,
          i,
          o,
          s,
          u,
          m,
          A,
          d = Object(r.useContext)(S.context),
          f = Object(r.useContext)(M.context).user,
          h = Object(c.g)(),
          g = h.state && h.state.background,
          p = Object(r.useContext)(hs.context);
        if (p && p.doc && p.doc.epsilon) return <Hy />;
        var E,
          v = function (e, t) {
            switch (e) {
              case 0:
                return <jb path={t} />;
              case 1:
                return <Mw path={t} />;
              case 2:
              case 4:
              case 6:
                return <ug path={t} />;
              case 3:
                return <my path={t} />;
              case 5:
                return <dy path={t} />;
              case 8:
                return <Lw path={t} />;
              case 7:
                return <Zb path={t} />;
              case 9:
              case 11:
                return <Eg path={t} />;
              case 10:
                return <Dw path={t} />;
              case 12:
              case 13:
                return <vg path={t} />;
              case 14:
                return <Hw />;
              case 15:
                return <qw path={t} />;
              case 16:
                return <Zw path={t} />;
              case 17:
                return <Kw path={t} />;
              case 18:
                return <_w path={t} />;
            }
            return <div />;
          };
        return (
          <em value={[]}>
            <$b>
              <Y>
                <Fh state={d} />
                <div className="Main-Body">
                  <c.c location={g || h}>
                    <c.a path="/tos">
                      <Ub />
                    </c.a>
                    <c.a path="/privacy">
                      <Wb />
                    </c.a>
                    <c.a path="/about">
                      <Tg />
                    </c.a>
                    <c.a path="/account">
                      <hp />
                    </c.a>
                    <c.a path="/faq">
                      <Rw />
                    </c.a>
                    <c.a path="/shop/:id?">
                      <Zg />
                    </c.a>
                    <c.a path="/library/:book?/:chapter?">
                      <cw />
                    </c.a>
                    <c.a path="/thebook">
                      <aw />
                    </c.a>
                    <c.a path="/offseason">
                      <Tb />
                    </c.a>
                    <c.a path="/login">
                      <Ep isLogin={!0} />
                    </c.a>
                    <c.a path="/reset/:token">
                      <vp />
                    </c.a>
                    <c.a path="/verify-account/:token">
                      <Ry />
                    </c.a>
                    <c.a path="/send-verification-email">
                      <Ly isModal={!0} />
                    </c.a>
                    <c.a path="/change-email/:token">
                      <Fy />
                    </c.a>
                    <c.a path="/delete-account/:token">
                      <jy />
                    </c.a>
                    <c.a path="/signup">
                      <Ep />
                    </c.a>
                    <c.a path="/team/:nickname">
                      <Yg />
                    </c.a>
                    <c.a path="/player/:id">
                      <ic />
                    </c.a>
                    <c.a path="/item/:id">
                      <xw
                        item={
                          null === (e = h.state) || void 0 === e || null === (t = e.params) || void 0 === t
                            ? void 0
                            : t.item
                        }
                        player={
                          null === (a = h.state) || void 0 === a || null === (n = a.params) || void 0 === n
                            ? void 0
                            : n.player
                        }
                      />
                    </c.a>
                    <c.a path="/game/:id">
                      <Pw />
                    </c.a>
                    {PA(d.sim, "UNLOCKED_HALL") ? (
                      <c.a path="/thehall">
                        <Og>
                          <Ig />
                        </Og>
                      </c.a>
                    ) : null}
                    <c.a path="/standings">{d.sim && v(d.sim.phase, "/standings")}</c.a>
                    <c.a path="/tournament">{d.sim && v(d.sim.phase, "/tournament")}</c.a>
                    <c.a path="/leaderboard">
                      <eg>{d.sim && v(d.sim.phase, "/leaderboard")}</eg>
                    </c.a>
                    <c.a path="/upcoming">{d.sim && v(d.sim.phase, "/upcoming")}</c.a>
                    <c.a path="/bracket">{d.sim && v(d.sim.phase, "/bracket")}</c.a>
                    {void 0 !== (E = d.sim) && E.phase >= 15 && E.phase <= 18 ? (
                      <c.a path="/league">
                        <$w />
                      </c.a>
                    ) : null}
                    <c.a path="/league">{d.sim && v(d.sim.phase, "/league")}</c.a>
                    <c.a path="/leagueinfo">
                      <My />
                    </c.a>
                    <c.a path="/giftshop">
                      <Cy />
                    </c.a>
                    <c.a path="/gift/:teamid">
                      <Ty progress={null === (i = h.state) || void 0 === i ? void 0 : i.params} />
                    </c.a>
                    <c.a path="/renovation">
                      <Iy />
                    </c.a>
                    {PA(d.sim, "SIM_DEPTH_CHART") ? (
                      <c.a path="/depth">
                        <eg>
                          <Py />
                        </eg>
                      </c.a>
                    ) : null}
                    <c.a path="/">
                      <Iw />
                    </c.a>
                  </c.c>
                  {g && (
                    <l.a.Fragment>
                      <c.a path="/signup" children={<Ep isModal={!0} />} />
                      <c.a path="/login" children={<Ep isModal={!0} isLogin={!0} />} />
                      <c.a path="/forgot" children={<vp isModal={!0} />} />
                      <c.a path="/send-verification-email" children={<Ly isModal={!0} />} />
                      <c.a path="/send-email-change" children={<Dy isModal={!0} />} />
                      <c.a path="/send-delete-account" children={<Qy isModal={!0} />} />
                      <c.a path="/reset/:token" children={<vp isModal={!0} />} />
                      <c.a path="/team/:nickname" children={<Yg isModal={!0} />} />
                      <c.a path="/player/:id" children={<ic isModal={!0} />} />
                      <c.a
                        path="/item/:id"
                        children={
                          <xw
                            isModal={!0}
                            item={
                              null === (o = h.state) || void 0 === o || null === (s = o.params) || void 0 === s
                                ? void 0
                                : s.item
                            }
                            player={
                              null === (u = h.state) || void 0 === u || null === (m = u.params) || void 0 === m
                                ? void 0
                                : m.player
                            }
                          />
                        }
                      />
                      <c.a path="/game/:id" children={<Pw isModal={!0} />} />
                      {void 0 !== f.snacks.Max_Bet ? <c.a path="/bet/:gameId" children={<zg isModal={!0} />} /> : null}
                      <c.a
                        path="/vote/:voteType/:entityId"
                        children={
                          <eg>
                            <Qb isModal={!0} />
                          </eg>
                        }
                      />
                      <c.a path="/reorder/:type" children={<Jg isModal={!0} />} />
                      <c.a path="/tribute/:entityId" children={<Fb isModal={!0} />} />
                      <c.a path="/buy/:itemName" children={<$g isModal={!0} />} />
                      <c.a path="/sell/:id" children={<ep isModal={!0} />} />
                      <c.a path="/pack/:ver" children={<tp isModal={!0} />} />
                      <c.a path="/settings" children={<hp isModal={!0} />} />
                      {void 0 !== f.snacks.Stadium_Access ? (
                        <c.a path="/contribute/:stadiumId/:renovationId" children={<hy isModal={!0} />} />
                      ) : null}
                      <c.a path="/account" children={<hp isModal={!0} />} />
                      <c.a path="/leagueinfo" children={<My isModal={!0} />} />
                      <c.a
                        path="/gift/:teamId"
                        children={
                          <Ty isModal={!0} progress={null === (A = h.state) || void 0 === A ? void 0 : A.params} />
                        }
                      />
                      <c.a path="/wish/:entityId" children={<xy isModal={!0} />} />
                      <c.a path="/search" children={<Vh isModal={!0} />} />
                    </l.a.Fragment>
                  )}
                  <pp isModal={!0} dismissable={!1} />
                </div>
                <footer className="Main-Footer">
                  <div className="Main-Footer-Links">
                    <a className="Main-Footer-Link" href="/tos">
                      Terms of Service
                    </a>
                    <a className="Main-Footer-Link" href="/privacy">
                      Privacy Policy
                    </a>
                    <a className="Main-Footer-Link" href="mailto:press@thegameband.com">
                      Press
                    </a>
                  </div>
                  <div className="Main-Footer-Advertise">
                    <div className="Main-Footer-Advertise-Inner">
                      <a className="Main-Footer-Advertise-Icon" href={zy()}>
                        Become a Sponsor
                      </a>
                    </div>
                  </div>
                  <a
                    href="https://twitter.com/thegameband"
                    target="_blank"
                    className={"Main-Footer-Logo" + (f.lightMode ? " Main-Footer-Logo-LightMode" : "")}
                  >
                    <Xb role="img" aria-label="The Game Band Logo" />
                  </a>
                </footer>
              </Y>
            </$b>
          </em>
        );
      }
      function zy() {
        return "mailto:sponsors@thegameband.com?subject=".concat(
          encodeURIComponent("I\u2019d like to sponsor a season of Blaseball")
        );
      }
      var Xy = function () {
        return (
          <M>
            <Vy />
          </M>
        );
      };
      Boolean(
        "localhost" === window.location.hostname ||
          "[::1]" === window.location.hostname ||
          window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)
      );
      var Jy = { sim: void 0, standings: void 0, season: void 0 },
        Zy = l.a.createContext({ menu: [], snackData: {} });
      "serviceWorker" in navigator &&
        navigator.serviceWorker.ready
          .then(function (e) {
            e.unregister();
          })
          .catch(function (e) {
            console.error(e.message);
          }),
        o.a.render(
          <l.a.StrictMode>
            <ks.ToastProvider autoDismiss={!0} autoDismissTimeout={3e3} placement="bottom-right">
              <B value={{}}>
                <S value={Jy}>
                  <xo value={{}}>
                    <hs value={{}}>
                      <Op
                        value={{ blessings: [], decrees: [], wills: [], gifts: [], willsToPass: 0, decreesToPass: 0 }}
                      >
                        <CA value={Zy}>
                          <m.a>
                            <Xy />
                          </m.a>
                        </CA>
                      </Op>
                    </hs>
                  </xo>
                </S>
              </B>
            </ks.ToastProvider>
          </l.a.StrictMode>,
          document.getElementById("root")
        );
    },
    27: function (e, t, a) {},
    33: function (e, t, a) {},
    35: function (e, t, a) {},
    36: function (e) {
      e.exports = {
        collection: [
          {
            id: "EXTRA_STRIKE",
            color: "#f77c9f",
            textColor: "#f77c9f",
            background: "#8c1839",
            title: "The Fourth Strike",
            description: "Those with the Fourth Strike will get an extra strike in each at bat.",
            descriptions: {
              player: "This Player will get an extra strike in each at-bat.",
              team: "This Team will get an extra strike in each at-bat.",
            },
          },
          {
            id: "SHAME_PIT",
            color: "#b96dbd",
            textColor: "#b96dbd",
            background: "#3d1539",
            title: "Targeted Shame",
            description: "Teams with Targeted Shame will start with negative runs the game after being shamed.",
          },
          {
            id: "HOME_FIELD",
            color: "#f9ff54",
            textColor: "#f9ff54",
            background: "#4f9c30",
            title: "Home Field Advantage",
            description: "Teams with Home Field Advantage will start each home game with one run.",
          },
          {
            id: "FIREPROOF",
            color: "#a5c5f0",
            textColor: "#a5c5f0",
            background: "#4c77b0",
            title: "Fireproof",
            description: "A Fireproof Player can not be incinerated.",
            descriptions: {
              player: "This Player cannot be incinerated.",
              team: "This Team and the Players on it cannot be incinerated.",
            },
          },
          {
            id: "ALTERNATE",
            color: "#fffd85",
            textColor: "#fffd85",
            background: "#404040",
            title: "Alternate",
            description: "This Player is an Alternate...",
            descriptions: { player: "This Player is an Alternate...", team: "This Team is an Alternate..." },
          },
          {
            id: "SOUNDPROOF",
            color: "#c92080",
            textColor: "#c92080",
            background: "#000000",
            title: "Soundproof",
            description: "A Soundproof Player can not be caught in Feedback's reality flickers.",
            descriptions: {
              player: "This Player cannot be caught in Feedback's reality flickers.",
              team: "Players on this Team cannot be caught in Feedback's reality flickers.",
            },
          },
          {
            id: "SHELLED",
            color: "#fffd85",
            textColor: "#fffd85",
            background: "#404040",
            title: "Shelled",
            description: "A Shelled player is trapped in a big Peanut and is unable to bat or pitch.",
          },
          {
            id: "REVERBERATING",
            color: "#61b3ff",
            textColor: "#61b3ff",
            background: "#756773",
            title: "Reverberating",
            description: "A Reverberating Player has a small chance of batting again after each of their At-Bats end.",
          },
          {
            id: "RETURNED",
            color: "#fbff8a",
            textColor: "#fbff8a",
            background: "#1b1c80",
            title: "Returned",
            description: "At the end of each season, this Player has a chance of being called back to the Void.",
          },
          {
            id: "INVERTED",
            color: "#d3d8de",
            textColor: "#d3d8de",
            background: "#38080d",
            title: "Inverted",
            description: "This Player has Inverted.",
          },
          {
            id: "MARKED",
            color: "#eaabff",
            textColor: "#eaabff",
            background: "#1b1c80",
            title: "Unstable",
            description: "Unstable players have a much higher chance of being incinerated in a Solar Eclipse.",
            descriptions: {
              player: "Unstable Players have a much higher chance of being incinerated in a Solar Eclipse.",
              team: "Unstable Teams have a chance of being incinerated in a Solar Eclipse.",
            },
          },
          {
            id: "PARTY_TIME",
            color: "#ff66f9",
            textColor: "#ff66f9",
            background: "#fff947",
            title: "Party Time",
            description:
              "This Team is mathematically eliminated from the Postseason, and will occasionally receive permanent stats boost in their games.",
          },
          {
            id: "LIFE_OF_PARTY",
            color: "#fff45e",
            textColor: "#fff45e",
            background: "#9141ba",
            title: "Life of the Party",
            description: "This Team gets 10% more from their Party Time stat boosts.",
          },
          {
            id: "DEBT_ZERO",
            color: "#ff1f3c",
            textColor: "#ff1f3c",
            background: "#1b1c80",
            title: "Debt",
            description: "This Player must fulfill a debt.",
          },
          {
            id: "DEBT",
            color: "#ff1f3c",
            textColor: "#ff1f3c",
            background: "#363738",
            title: "Refinanced Debt",
            description: "This Player must fulfill a debt.",
          },
          {
            id: "DEBT_TWO",
            color: "#ff1f3c",
            textColor: "#ff1f3c",
            background: "#612273",
            title: "Consolidated Debt",
            description: "This Player must fulfill a debt.",
          },
          {
            id: "SPICY",
            color: "#9e0022",
            textColor: "#9e0022",
            background: "#d15700",
            title: "Spicy",
            description: "Spicy batters will be Red Hot when they get three consecutive hits.",
          },
          {
            id: "HEATING_UP",
            color: "#9e0022",
            textColor: "#9e0022",
            background: "#d15700",
            title: "Heating Up...",
            description:
              "This batter needs one more consecutive hit to enter Fire mode. This mod will disappear if the batter gets out.",
          },
          {
            id: "ON_FIRE",
            color: "#fff982",
            textColor: "#fff982",
            background: "#e32600",
            title: "Red Hot!",
            description:
              "Red Hot! This player's batting is greatly boosted. This mod will disappear if the batter gets out.",
          },
          {
            id: "HONEY_ROASTED",
            color: "#ffda75",
            textColor: "#ffda75",
            background: "#b5831f",
            title: "Honey Roasted",
            description: "This Player has been Honey-Roasted.",
          },
          {
            id: "FIRST_BORN",
            color: "#fffea8",
            textColor: "#fffea8",
            background: "#517063",
            title: "First Born",
            description: "This Player was the first born from the New Field of Eggs.",
          },
          {
            id: "SUPERALLERGIC",
            color: "#bd224e",
            textColor: "#bd224e",
            background: "#45003d",
            title: "Superallergic",
            description: "This Player is Superallergic",
          },
          {
            id: "SUPERYUMMY",
            color: "#ffdb59",
            textColor: "#ffdb59",
            background: "#c96faa",
            title: "Superyummy",
            description: "This Player seriously loves peanuts",
          },
          {
            id: "EXTRA_BASE",
            color: "#d9d9d9",
            textColor: "#d9d9d9",
            background: "#4a001a",
            title: "The Fifth Base",
            description: "Teams playing in this Ballpark must run five bases instead of four.",
            descriptions: {
              ballpark: "Teams playing in this Ballpark must run five bases instead of four.",
              team: "This Team must run five bases instead of four.",
            },
          },
          {
            id: "BLESS_OFF",
            color: "#e0cafa",
            textColor: "#e0cafa",
            background: "#7d58a8",
            title: "Bless Off",
            description: "This Team cannot win any Blessings in the upcoming Election.",
          },
          {
            id: "NON_IDOLIZED",
            color: "#fffaba",
            textColor: "#fffaba",
            background: "#540e43",
            title: "Idol Immune",
            description: "Idol Immune Players cannot be Idolized by Fans.",
          },
          {
            id: "GRAVITY",
            color: "#759bc9",
            textColor: "#759bc9",
            background: "#4c5052",
            title: "Gravity",
            description: "This Player cannot be affected by Reverb.",
            descriptions: {
              player: "This Player cannot be affected by Reverb.",
              team: "This Team cannot be affected by Reverb.",
            },
          },
          {
            id: "ELECTRIC",
            color: "#fff199",
            textColor: "#fff199",
            background: "#04144a",
            title: "Electric",
            description: "Electric Teams have a chance of zapping away Strikes.",
            descriptions: {
              player: "When this Player is batting, they have a chance of zapping away Strikes.",
              team: "When this Team is batting, they have a chance of zapping away Strikes.",
            },
          },
          {
            id: "DOUBLE_PAYOUTS",
            color: "#fffaba",
            textColor: "#fffaba",
            background: "#786600",
            title: "Super Idol",
            description: "This player will earn Fans double the rewards from all Idol Snacks.",
          },
          {
            id: "FIRE_PROTECTOR",
            color: "#c4ff85",
            textColor: "#c4ff85",
            background: "#1f474f",
            title: "Fire Protector",
            description: "This Player will protect their teammates from incinerations.",
          },
          {
            id: "RECEIVER",
            color: "#ff007b",
            textColor: "#ff007b",
            background: "#383838",
            title: "Receiver",
            description: "This Player is a Receiver.",
          },
          {
            id: "FLICKERING",
            color: "#ff007b",
            textColor: "#ff007b",
            background: "#383838",
            title: "Flickering",
            description: "Flickering Players have a much higher chance of being Feedbacked to their opponent.",
          },
          {
            id: "GROWTH",
            color: "#52a17b",
            textColor: "#52a17b",
            background: "#13422b",
            title: "Growth",
            description:
              "Growth teams will play better as the season goes on, up to a 5% global boost by season's end.",
            descriptions: {
              player: "Players with Growth play better as the season goes on, up to a 5% boost by Season's end.",
              team: "Teams with Growth play better as the season goes on, up to a 5% boost by Season's end.",
            },
          },
          {
            id: "BASE_INSTINCTS",
            color: "#dedede",
            textColor: "#dedede",
            background: "#329c98",
            title: "Base Instincts",
            description:
              "Batters with Base Instincts will have a chance of heading past first base when getting walked.",
            descriptions: {
              player: "This Player has a chance of heading past first base when getting walked.",
              team: "Players batting for this Team have a chance of heading past first base when getting walked.",
            },
          },
          {
            id: "STABLE",
            color: "#91b5a3",
            textColor: "#91b5a3",
            background: "#335980",
            title: "Stable",
            description: "Stable players cannot be made Unstable.",
            descriptions: {
              player: "This Player cannot be made Unstable.",
              team: "This Team and the Players on it cannot be made Unstable.",
            },
          },
          {
            id: "AFFINITY_FOR_CROWS",
            color: "#cb80d9",
            textColor: "#cb80d9",
            background: "#240c36",
            title: "Affinity for Crows",
            description: "Players with Affinity for Crows will hit and pitch 50% better during Birds weather.",
          },
          {
            id: "CURSE_OF_CROWS",
            color: "#915387",
            textColor: "#915387",
            background: "#3d2830",
            title: "Curse of Crows",
            description: "This team or player will be occasionally attacked by Birds.",
            descriptions: {
              player: "This Player will be occasionally attacked by Birds.",
              team: "Players playing for this Team will be occasionally attacked by Birds.",
            },
          },
          {
            id: "SQUIDDISH",
            color: "#5988ff",
            textColor: "#5988ff",
            background: "#163073",
            title: "Squiddish",
            description:
              "When a Squiddish player is incinerated, they'll be replaced by a random Hall of Flame player.",
          },
          {
            id: "CRUNCHY",
            color: "#f5eb5d",
            textColor: "#f5eb5d",
            background: "#de8123",
            title: "Crunchy",
            description: "The Honey-Roasted players on a Crunchy team will hit 100% better and with +200% Power.",
          },
          {
            id: "PITY",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Pity",
            description: "This team is holding back, out of Pity.",
          },
          {
            id: "GOD",
            color: "#ff4d90",
            textColor: "#ff4d90",
            background: "#fffc57",
            title: "God",
            description: "This team will start with 1,000x the amount of Team Spirit",
          },
          {
            id: "REPEATING",
            color: "#61b3ff",
            textColor: "#61b3ff",
            background: "#3d5982",
            title: "Repeating",
            description: "In Reverb Weather, this Player will Repeat.",
          },
          {
            id: "SUBJECTION",
            color: "#d16f6f",
            textColor: "#d16f6f",
            background: "#2e2f33",
            title: "Subjection",
            description: "Players leaving a team with Subjection will gain the Liberated modification.",
          },
          {
            id: "LIBERATED",
            color: "#90eb07",
            textColor: "#90eb07",
            background: "#07a1a3",
            title: "Liberated",
            description: "Liberated players will be guaranteed extra bases when they get a hit.",
          },
          {
            id: "FIRE_EATER",
            color: "#f50a31",
            textColor: "#f50a31",
            background: "#e3d514",
            title: "Fire Eater",
            description: "Fire Eaters swallow fire instead of being incinerated.",
          },
          {
            id: "MAGMATIC",
            color: "#e63200",
            textColor: "#e63200",
            background: "#6b0004",
            title: "Magmatic",
            description: "Magmatic players are guaranteed to hit a home run in their next At Bat.",
          },
          {
            id: "LOYALTY",
            color: "#ff61a5",
            textColor: "#ff61a5",
            background: "#2c1240",
            title: "Loyalty",
            description: "Players leaving a team with Loyalty will gain the Saboteur modification.",
          },
          {
            id: "SABOTEUR",
            color: "#6b6a6a",
            textColor: "#6b6a6a",
            background: "#240c36",
            title: "Saboteur",
            description: "A Saboteur has a chance of intentionally failing.",
          },
          {
            id: "CREDIT_TO_THE_TEAM",
            color: "#fffaba",
            textColor: "#fffaba",
            background: "#786600",
            title: "Credit to the Team",
            description: "This player will earn Fans 5x the rewards from all Idol Snacks.",
          },
          {
            id: "LOVE",
            color: "#ff2b6b",
            textColor: "#ff2b6b",
            background: "#732652",
            title: "Charm",
            description: "Players with Charm have a chance of convincing their opponents to fail.",
          },
          {
            id: "PEANUT_RAIN",
            color: "#fff199",
            textColor: "#fff199",
            background: "#04144a",
            title: "Peanut Rain",
            description: "This Team weaponizes Peanut weather against their enemies.",
          },
          {
            id: "FLINCH",
            color: "#219ccc",
            textColor: "#219ccc",
            background: "#5e5e5e",
            title: "Flinch",
            description: "Hitters with Flinch cannot swing until a strike has been thrown in the At Bat.",
          },
          {
            id: "WILD",
            color: "#219ccc",
            textColor: "#219ccc",
            background: "#361a57",
            title: "Mild",
            description: "Pitchers with Mild have a chance of throwing a Mild Pitch.",
          },
          {
            id: "DESTRUCTION",
            color: "#ff8a24",
            textColor: "#ff8a24",
            background: "#802d00",
            title: "Destruction",
            description:
              "Teams with Destruction will add a bunch of Curses to their Opponent when defeating them in battle.",
          },
          {
            id: "SIPHON",
            color: "#e30000",
            textColor: "#e30000",
            background: "#2b0000",
            title: "Siphon",
            description: "Siphons will steal blood more often in Blooddrain and use it in more ways.",
          },
          {
            id: "FLIICKERRRIIING",
            color: "#80fffb",
            textColor: "#80fffb",
            background: "#383838",
            title: "Fliickerrriiing",
            description: "Fliickerrriiing players are Flickering a lot.",
          },
          {
            id: "FRIEND_OF_CROWS",
            color: "#ff7ae7",
            textColor: "#ff7ae7",
            background: "#570026",
            title: "Friend of Crows",
            description: "In Birds weather, pitchers with Friend of Crows will encourage the Birds to attack hitters.",
          },
          {
            id: "BLASERUNNING",
            color: "#fffaa3",
            textColor: "#fffaa3",
            background: "#570026",
            title: "Blaserunning",
            description: "Blaserunners will score .2 Runs for their Team whenever they steal a base.",
          },
          {
            id: "WALK_IN_THE_PARK",
            color: "#faff9c",
            textColor: "#faff9c",
            background: "#275c2a",
            title: "Walk in the Park",
            description: "Those with Walk in the Park will walk to first base on one less Ball.",
          },
          {
            id: "BIRD_SEED",
            color: "#1e0036",
            textColor: "#dca8f7",
            background: "#dca8f7",
            title: "Bird Seed",
            description:
              "Birds like to eat Bird Seed. They'll peck those with Bird Seed out of peanut shells more often. Because they like to eat Bird Seed.",
          },
          {
            id: "HAUNTED",
            color: "#b59c9c",
            textColor: "#b59c9c",
            background: "#1c1c1c",
            title: "Haunted",
            description: "Haunted players will occasionally be Inhabited.",
          },
          {
            id: "TRAVELING",
            color: "#cfebff",
            textColor: "#cfebff",
            background: "#1c1c1c",
            title: "Traveling",
            description: "Traveling teams will play 5% better in Away games.",
          },
          {
            id: "SEALANT",
            color: "#eded91",
            textColor: "#eded91",
            background: "#571f26",
            title: "Sealant",
            description: "Players with Sealant cannot have blood drained in Blooddrain.",
          },
          {
            id: "O_NO",
            color: "#cffff0",
            textColor: "#cffff0",
            background: "#485099",
            title: "0 No",
            description: "Players with 0 No cannot be struck out when there are 0 Balls in the Count.",
            descriptions: {
              player: "This Player cannot be struck out when there are 0 Balls in the Count.",
              team: "Players batting for this Team cannot be struck out when there are 0 Balls in the Count.",
            },
          },
          {
            id: "FAIRNESS",
            color: "#12b300",
            textColor: "#12b300",
            background: "#ffdb0f",
            title: "Total Fairness",
            description: "This Season, each team will win only one Blessing, and will be Happy with what they get.",
          },
          {
            id: "ESCAPE",
            color: "#ffe521",
            textColor: "#ffe521",
            background: "#0d0d0d",
            title: "Pending",
            description: "The players on this Team are Pending...",
          },
          {
            id: "UNFLAMED",
            color: "#eaabff",
            textColor: "#eaabff",
            background: "#1b1c80",
            title: "Chaotic",
            description: "The Unstable players on a Chaotic team will hit 100% better.",
          },
          {
            id: "TRIBUTE",
            color: "#dbce6e",
            textColor: "#dbce6e",
            background: "#362803",
            title: "Tribute",
            description: "When Hall of Flame Players join this team, they'll add their Tribute as Team Spirit.",
          },
          {
            id: "SQUIDDEST",
            color: "#e6eaeb",
            textColor: "#e6eaeb",
            background: "#163073",
            title: "Squiddest",
            description: "This Team is the Squiddest. When a Player joins the Team, they'll become Squiddish.",
          },
          {
            id: "CONTAINMENT",
            color: "#91ab91",
            textColor: "#91ab91",
            background: "#023802",
            title: "Containment",
            description: "This Player cannot spread Instability.",
          },
          {
            id: "RETIRED",
            color: "#d3ede5",
            textColor: "#d3ede5",
            background: "#000e33",
            title: "Released",
            description: "",
          },
          {
            id: "RESTING",
            color: "#5988ff",
            textColor: "#5988ff",
            background: "#163073",
            title: "Resting",
            description: "",
          },
          {
            id: "INHABITING",
            color: "#b59c9c",
            textColor: "#b59c9c",
            background: "#1c1c1c",
            title: "Inhabiting",
            description: "This Player is temporarily Inhabiting a Haunted Player.",
          },
          {
            id: "WIRED",
            color: "#511c00",
            textColor: "#511c00",
            background: "#ffffff",
            title: "Wired",
            description:
              "When a Run scores, each Wired Player involved in the play (the Scoring Baserunner, Current Batter, or Current Pitcher) will make the Run worth 0.5 more.",
          },
          {
            id: "TIRED",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#511c00",
            title: "Tired",
            description:
              "When a Run scores, each Tired Player involved in the play (the Scoring Baserunner, Current Batter, or Current Pitcher) with make the Run worth 0.5 less.",
          },
          {
            id: "COFFEE_EXIT",
            color: "#e9c4ff",
            textColor: "#e9c4ff",
            background: "#96afd4",
            title: "Percolated",
            description: "This Player has been fully and completely Percolated.",
          },
          {
            id: "COFFEE_SHADOWS",
            color: "#f0efaa",
            textColor: "#f0efaa",
            background: "#031736",
            title: "Well Rested",
            description:
              "Whenever a Player on this Team loses the Tired modification, they'll swap with a Player in the Shadows.",
          },
          {
            id: "HARD_BOILED",
            color: "#9a7b4f",
            textColor: "#9a7b4f",
            background: "#511c00",
            title: "Hard Boiled",
            description: "This Player was boiled a little bit before hatching.",
          },
          {
            id: "COFFEE_PERIL",
            color: "#9a7b4f",
            textColor: "#9a7b4f",
            background: "#000000",
            title: "Observed",
            description: "This Player is being Observed carefully...",
          },
          {
            id: "COFFEE_RALLY",
            color: "#2e1406",
            textColor: "#fffcd9",
            background: "#44c97c",
            title: "Free Refill",
            description: "Good for one Free Refill.",
          },
          {
            id: "TRIPLE_THREAT",
            color: "#cc527a",
            textColor: "#cc527a",
            background: "#5dbcd2",
            title: "Triple Threat",
            description:
              "This pitcher's strikeouts score Unruns when there are 3 runners on base, a runner on 3rd, or 3 Balls in the count. Each condition met is worth .3 Unruns. At the end of the 3rd Inning, there's a 33.33% chance that this mod will disappear.",
          },
          {
            id: "PERK",
            color: "#be4fff",
            textColor: "#be4fff",
            background: "#96afd4",
            title: "Perk",
            description:
              "This Player has been rewarded Percolated energy. They will Overperform in all Coffee weathers.",
          },
          {
            id: "OVERPERFORMING",
            color: "#32b528",
            textColor: "#32b528",
            background: "#000000",
            title: "Overperforming",
            description: "This Team or Player will play 20% better than usual.",
            descriptions: {
              player: "This Player will play 20% better than usual.",
              team: "This Team will play 20% better than usual.",
            },
          },
          {
            id: "SHAME_GIVER",
            color: "#ff005d",
            textColor: "#ff005d",
            background: "#3d1539",
            title: "Shame Donor",
            description: "When this Team shames their opponent, that opponent will begin their next game with Unruns.",
          },
          {
            id: "UNDERPERFORMING",
            color: "#db3616",
            textColor: "#db3616",
            background: "#000000",
            title: "Underperforming",
            description: "This Team or Player will play 20% better than usual.",
            descriptions: {
              player: "This Player will play 20% worse than usual.",
              team: "This Team will play 20% worse than usual.",
            },
          },
          {
            id: "EGO1",
            color: "#d1c252",
            textColor: "#d1c252",
            background: "#383000",
            title: "Ego+",
            description: "This Player has a boosted Ego.",
          },
          {
            id: "EGO2",
            color: "#d6c965",
            textColor: "#d6c965",
            background: "#5e5100",
            title: "Ego++",
            description: "This Player has a boosted boosted Ego.",
          },
          {
            id: "EGO3",
            color: "#e3d77f",
            textColor: "#e3d77f",
            background: "#857300",
            title: "Ego+++",
            description: "This Player has a boosted boosted boosted Ego.",
          },
          {
            id: "EGO4",
            color: "#f5eba2",
            textColor: "#f5eba2",
            background: "#a89200",
            title: "Ego++++",
            description: "This Player has a boosted boosted boosted boosted Ego.",
          },
          {
            id: "LEGENDARY",
            color: "#fff8c7",
            textColor: "#fff8c7",
            background: "#bfa600",
            title: "Legendary",
            description: "This Player is Legendary.",
            descriptions: { player: "This Player is Legendary", team: "This Team is Legendary." },
          },
          {
            id: "ELSEWHERE",
            color: "#bdb3c3",
            textColor: "#bdb3c3",
            background: "#ffffff",
            title: "Elsewhere",
            description: "This Player is Elsewhere.",
            descriptions: { player: "This Player is Elsewhere.", team: "This Team is Elsewhere." },
          },
          {
            id: "BOTTOM_DWELLER",
            color: "#ffd7b0",
            textColor: "#ffd7b0",
            background: "#705336",
            title: "Bottom Dweller",
            description: "If this Team finishes last in their division, they'll be boosted up to 5%.",
          },
          {
            id: "CARCINIZATION",
            color: "#ff4258",
            textColor: "#ff4258",
            background: "#38040a",
            title: "Carcinization",
            description:
              "When this Team activates the Black Hole, they will steal their opponent's best hitter for the remainder of the game.",
          },
          {
            id: "MAINTENANCE_MODE",
            color: "#ffed63",
            textColor: "#ffed63",
            background: "#c25429",
            title: "Maintenance Mode",
            description:
              "Whenever a Player on this Team is Impaired, they'll receive the Fourth Out for the remainder of the game.",
          },
          {
            id: "AMBUSH",
            color: "#ff2160",
            textColor: "#ff2160",
            background: "#0c000f",
            title: "Ambush",
            description:
              "When a Player is incinerated in a game this Team is playing, a random Hall of Flame Player will join their Shadows.",
          },
          {
            id: "UNDERSEA",
            color: "#c2e1ff",
            textColor: "#c2e1ff",
            background: "#34516e",
            title: "Undersea",
            description: "If this Team ever has negative Runs, they'll Overperform for the rest of the game.",
          },
          {
            id: "PENANCE",
            color: "#ca0000",
            textColor: "#ca0000",
            background: "#4a0000",
            title: "Penance",
            description: "This Team will start each game by accepting 3 Unruns of Penance.",
          },
          {
            id: "EXTRA_OUT",
            color: "#5ba3eb",
            textColor: "#5ba3eb",
            background: "#00254a",
            title: "Fourth Out",
            description: "This Team plays with a Fourth Out.",
          },
          {
            id: "STUCK",
            color: "#b5bceb",
            textColor: "#b5bceb",
            background: "#5f1e61",
            title: "Stuck",
            description: "This Player cannot swing.",
          },
          {
            id: "SWIM_BLADDER",
            color: "#fffd6e",
            textColor: "#fffd6e",
            background: "#0a6154",
            title: "Flippers",
            description: "When immateria floods, this Runner will score instead of being cleared from the Bases.",
          },
          {
            id: "DEBT_THREE",
            color: "#ff1f3c",
            textColor: "#ff1f3c",
            background: "#3b3217",
            title: "Debt",
            description: "This Player must fulfill a Debt.",
            descriptions: { player: "This Player must fulfill a Debt.", team: "This Team must fulfill a Debt." },
          },
          {
            id: "ECHO",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#9c2c46",
            title: "Echo",
            description: "Echo Echo Echo Echo Echo Echo Echo Echo Echo Echo Echo Echo",
          },
          {
            id: "STATIC",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#302a2f",
            title: "Static",
            description: ".....",
          },
          {
            id: "EARLBIRDS",
            color: "#ffc2f9",
            textColor: "#ffc2f9",
            background: "#0a8ef5",
            title: "Earlbirds",
            description: "This Team or Player will Overperform in the Earlseason.",
            descriptions: {
              player: "This Player will Overperform in the Earlseason.",
              team: "This Team will Overperform in the Earlseason.",
            },
          },
          {
            id: "LATE_TO_PARTY",
            color: "#addbff",
            textColor: "#addbff",
            background: "#700065",
            title: "Late to the Party",
            description: "This Team or Player will Overperform in the Lateseason.",
            descriptions: {
              player: "This Player will Overperform in the Lateseason.",
              team: "This Team will Overperform in the Lateseason.",
            },
          },
          {
            id: "OVERUNDER",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Over Under",
            description: "Whenever this Player's Team has Over 5 Runs, they'll Underperform.",
          },
          {
            id: "UNDEROVER",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Under Over",
            description: "Whenever this Player's Team has Under 5 Runs, they'll Overperform.",
          },
          {
            id: "WANDERER",
            color: "#fffeeb",
            textColor: "#fffeeb",
            background: "#3f1e57",
            title: "Roamin'",
            description: "This Player has a chance to Roam at the end of each Season.",
          },
          {
            id: "SUPERWANDERER",
            color: "#fcff54",
            textColor: "#fcff54",
            background: "#6b3c8c",
            title: "Super Roamin'",
            description: "This Player will Roam at the end of each Week and each Season.",
          },
          {
            id: "NEWADVENTURE",
            color: "#caffc7",
            textColor: "#caffc7",
            background: "#007da3",
            title: "On an Odyssey",
            description: "This Player is boosted 2% every team they join a Team.",
          },
          {
            id: "SINKING_SHIP",
            color: "#78befb",
            textColor: "#78befb",
            background: "#00250d",
            title: "Sinking Ship",
            description:
              "This Team plays 1% worse for every Player above 14 Players on their roster, and 1% better for every Player below 14 on their roster.",
          },
          {
            id: "PARASITE",
            color: "#e30000",
            textColor: "#e30000",
            background: "#2b0000",
            title: "Parasite",
            description: "When this pitcher strikes out a batter in Blooddrain, they'll drain some blood from them.",
          },
          {
            id: "DEFECTOR",
            color: "#ff2679",
            textColor: "#ff2679",
            background: "#1d1324",
            title: "Defector",
            description: "This Player will switch to the opponent's roster when the game ends.",
          },
          {
            id: "HOMEBODY",
            color: "#8dadb5",
            textColor: "#8dadb5",
            background: "#032b12",
            title: "Homebody",
            description: "This Player will Overperform when playing in their home Ballpark and Underperform otherwise.",
          },
          {
            id: "KILLER_PIES",
            color: "#ace8de",
            textColor: "#ace8de",
            background: "#3b524e",
            title: "Flying Pie",
            description: "Whenever this Team has lost 3 games in a Row, their pitchers will start throwing Pies.",
          },
          {
            id: "FRESH",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Fresh",
            description: "When a Player joins this Team, they'll be boosted by 2%.",
          },
          {
            id: "PARTING_GIFT",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Parting Gift",
            description: "When a Player leaves this Team, they'll be boosted by 2%",
          },
          {
            id: "BLOCKED_BOOST",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Blocked Boost",
            description: "If this Player is protected from a Steal or Swap Will, they'll be boosted by 2%.",
          },
          {
            id: "HALL_EXIT_BOOST",
            color: "#ff943d",
            textColor: "#ff943d",
            background: "#163073",
            title: "Phoenix",
            description: "When this Player exits the Hall of Flame, they'll be boosted 10% to 20%.",
          },
          {
            id: "FLOOD_PUMPS",
            color: "#41feff",
            textColor: "#41feff",
            background: "#465f63",
            title: "Flood Pumps",
            description: "Flood Pumps will prevent Flooding weather from making your Ballpark filthier.",
          },
          {
            id: "POLAR_VORTEX",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Polar Vortex",
            description: "",
          },
          {
            id: "SALMON_CANNONS",
            color: "#ffb0c6",
            textColor: "#ffb0c6",
            background: "#2a292e",
            title: "Salmon Cannons",
            description: "Salmon Cannons have a chance of expelling pests from your Ballpark.",
          },
          {
            id: "EVENT_HORIZON",
            color: "#ec49ff",
            textColor: "#ec49ff",
            background: "#160626",
            title: "Event Horizon",
            description:
              "The Event Horizon will prevent the first Black Hole activation in each game, converting the Overflow to Unruns for your opponent's next game.",
          },
          {
            id: "SOUNDSYSTEM",
            color: "#4be397",
            textColor: "#4be397",
            background: "#330a2a",
            title: "LCD Soundsystem",
            description: "The LCD Soundsystem will boost both Players involved in a Feedback swap by 5%.",
          },
          {
            id: "ECHO_CHAMBER",
            color: "#61b3ff",
            textColor: "#61b3ff",
            background: "#1f061b",
            title: "Echo Chamber",
            description:
              "In Reverb, Echo Chambers will occasionally provide Reverberating and Repeating modifications to Players for game-long use.",
          },
          {
            id: "FIRE_INSURANCE",
            color: "#ff2e2e",
            textColor: "#ff2e2e",
            background: "#020324",
            title: "Heat Magnet",
            description:
              "The Heat Magnet will absorb heat from an incineration and pass it on to the Thermal Converter.",
          },
          {
            id: "PEANUT_MISTER",
            color: "#f3ff54",
            textColor: "#f3ff54",
            background: "#423519",
            title: "Peanut Mister",
            description: "A Peanut Mister will occasionally cure a Player of their peanut allergy.",
            descriptions: {
              ballpark: "A Peanut Mister will occasionally cure a Player in this Ballpark of their peanut allergy.",
              league: "A Peanut Mister will occasionally cure a Player of their peanut allergy.",
            },
          },
          {
            id: "BLOOD_LUSTER",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Blood Luster",
            description: "",
          },
          {
            id: "BIRDHOUSES",
            color: "#d4ecff",
            textColor: "#d4ecff",
            background: "#0a8ef5",
            title: "Birdhouses",
            description: "Birdhouses invite Birds to come live in your Ballpark.",
          },
          {
            id: "SWEETENER",
            color: "#fffcad",
            textColor: "#fffcad",
            background: "#4a2f40",
            title: "Sweetener",
            description:
              "Sweetener makes Beanings & Free Refills more likely in Coffee & Coffee Two weathers, and lowers the chance of losing Triple Threat.",
          },
          {
            id: "SECRET_BASE",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#363335",
            title: "Secret Base",
            description:
              "The Secret Base is a hidden base beyond 2nd that allows a baserunner to hide between innings.",
          },
          {
            id: "HOOPS",
            color: "#fdffd4",
            textColor: "#fdffd4",
            background: "#7a4500",
            title: "Hoops",
            description:
              "When a Player hits a Home Run, the next batter can go up for an alley oop to score an extra Run.",
            descriptions: {
              ballpark:
                "When a Player hits a Home Run in this Ballpark, the next batter can go up for an alley oop to score an extra Run.",
              player:
                "When a Player hits a Home Run, the next batter can go up for an alley oop to score an extra Run.",
            },
          },
          {
            id: "GRIND_RAIL",
            color: "#a8a8a5",
            textColor: "#a8a8a5",
            background: "#43474a",
            title: "Grind Rail",
            description:
              "The Grind Rail allows a chance to steal directly from first base to third base, as long as they have the skills.",
            descriptions: {
              ballpark:
                "Players in this Ballpark can use the Grind Rail to steal directly from first base to third base, as long as they have the skills.",
              league:
                "Players can use the Grind Rail to steal directly from first base to third base, as long as they have the skills.",
            },
          },
          {
            id: "CASINO_ZONE",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Casino Zone",
            description: "777",
          },
          {
            id: "CATAPULTS",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Catapults",
            description: "",
          },
          {
            id: "BIG_BUCKET",
            color: "#fffb82",
            textColor: "#fffb82",
            background: "#083a3b",
            title: "Big Buckets",
            description: "If a home run lands in a Big Bucket, it scores an extra Run.",
            descriptions: {
              ballpark:
                "Home runs in this Ballpark have a chance of landing in a Big Bucket, which scores an extra Run.",
              league: "Home runs have a chance of landing in a Big Bucket, which scores an extra Run.",
            },
          },
          {
            id: "SMALL_BUCKET",
            color: "#ffe76b",
            textColor: "#ffe76b",
            background: "#673e00",
            title: "Small Bucket",
            description: "If a home run lands in a Small Bucket, it score 5 extra Runs.",
          },
          {
            id: "BULLPEN",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Bull Pen",
            description: "",
          },
          {
            id: "SEARCHLIGHTS",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Searchlights",
            description: "",
          },
          {
            id: "SECRET_TUNNELS",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Secret Tunnels",
            description: "A network of tunnels underneath this Ballpark.",
          },
          {
            id: "SOLAR_PANELS",
            color: "#fff896",
            textColor: "#fff896",
            background: "#b58004",
            title: "Solar Panels",
            description:
              "Solar Panels will prevent the first Sun 2 activation in each game, converting the Overflow to Runs for your Team's next game.",
          },
          {
            id: "TEMP_STOLEN",
            color: "#eb9494",
            textColor: "#eb9494",
            background: "#260411",
            title: "Stolen",
            description: "This Player has been temporarily stolen.",
          },
          {
            id: "REDACTED",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Redacted",
            description: "This Player is Redacted.",
          },
          {
            id: "FUGITIVE",
            color: "#ffcc8a",
            textColor: "#ffcc8a",
            background: "#48474d",
            title: "Fugitive",
            description: "This Player is at risk of being caught by Searchlights.",
          },
          {
            id: "BIG_RED_BUTTON",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Supercharged",
            description: "When this Team hits a Grand Slam, reset the number of Outs to zero.",
          },
          {
            id: "BASE_DEALING",
            color: "#d297f9",
            textColor: "#a16dc3",
            background: "#180027",
            title: "Base Dealing",
            description: "This Team's lineup will advance in reverse order.",
          },
          {
            id: "SMOOTH",
            color: "#8ae9ff",
            textColor: "#8ae9ff",
            background: "#423519",
            title: "Smooth",
            description: "This Player will have 100% more Speed in Peanut weather.",
          },
          {
            id: "CHUNKY",
            color: "#ff9e08",
            textColor: "#ff9e08",
            background: "#423519",
            title: "Chunky",
            description: "This Player will have 100% more Power in Peanut weather.",
          },
          {
            id: "SUN_KISSED",
            color: "#ffe100",
            textColor: "#ffe100",
            background: "#5c5d45",
            title: "Sun Dialed",
            description: "When this Team activates Sun 2, a random Player on their Team will be boosted by 1%.",
          },
          {
            id: "UNHOLEY",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#863490",
            title: "Unholey",
            description:
              "When this Team activates the Black Hole, a random Player on their opponent's Team will be impaired by 1%.",
          },
          {
            id: "SUPERCHARGED",
            color: "#e6ff21",
            textColor: "#e6ff21",
            background: "#84072a",
            title: "Supercharged",
            description: "This Team will play 10% better after scoring 10+ Runs the Day before.",
          },
          {
            id: "HIGH_PRESSURE",
            color: "#fff912",
            textColor: "#fff912",
            background: "#465f63",
            title: "High Pressure",
            description: "This Team or Player will play 25% better in Flooding weather when runners are on base.",
            descriptions: {
              player: "This Player will play 25% better in Flooding weather when runners are on base.",
              team: "This Team will play 25% better in Flooding weather when runners are on base.",
            },
          },
          {
            id: "SCATTERED",
            color: "#bdb3c3",
            textColor: "#bdb3c3",
            background: "#ffffff",
            title: "Scattered",
            description: "This Player returned from Elsewhere a bit Scattered.",
          },
          {
            id: "PATIENT",
            color: "#b3ffa6",
            textColor: "#b3ffa6",
            background: "#2b304f",
            title: "Patient",
            description: "This Player will never swing when there are 0 Strikes and are 1 Ball away from a Walk.",
          },
          {
            id: "UNCERTAIN",
            color: "#d285ff",
            textColor: "#d285ff",
            background: "#ffffff",
            title: "Uncertain",
            description: "When this Player returns from Elsewhere, they'll be adjusted by -15% to +20%.",
          },
          {
            id: "MUNCHIES",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Munchies",
            description: "",
          },
          {
            id: "DOUBLE_DOG",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Double-Dog",
            description: "",
          },
          {
            id: "BLACKHOLE_PAYOUTS",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#863490",
            title: "Jam-Packed",
            description:
              "When this Team triggers the Black Hole, they'll earn double payouts for all Wet Pretzel holders.",
          },
          {
            id: "SUN2_PAYOUTS",
            color: "#ffe100",
            textColor: "#ffe100",
            background: "#5c5d45",
            title: "Glazed",
            description: "When this Team activates Sun 2, they'll earn double payouts for all Doughnut holders.",
          },
          {
            id: "POPCORN_PAYOUTS",
            color: "#fff8bd",
            textColor: "#fff8bd",
            background: "#d4223a",
            title: "Buttered Up",
            description: "This Team earns double payouts on Popcorn.",
          },
          {
            id: "STALEPOPCORN_PAYOUTS",
            color: "#bababa",
            textColor: "#bababa",
            background: "#7a0000",
            title: "Over Salted",
            description: "This Team earns double payouts on Stale Popcorn.",
          },
          {
            id: "MAXIMALIST",
            color: "#29ffd1",
            textColor: "#29ffd1",
            background: "#007a87",
            title: "Maximalist",
            description: "This Player plays 250% better at Maximum Blaseball.",
            descriptions: {
              player: "This Player plays 250% better at Maximum Blaseball.",
              team: "This Team plays 250% better at Maximum Blaseball.",
            },
          },
          {
            id: "MINIMALIST",
            color: "#80bfb2",
            textColor: "#80bfb2",
            background: "#2f4e52",
            title: "Minimalist",
            description: "This Player plays 75% worse at Maximum Blaseball.",
            descriptions: {
              player: "This Player plays 75% worse at Maximum Blaseball.",
              team: "This Team plays 75% worse at Maximum Blaseball.",
            },
          },
          {
            id: "FREE_WILL",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#9e0000",
            title: "Free Will",
            description: "This Team will receive an Extra Will in the upcoming Election.",
          },
          {
            id: "FREE_GIFT",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#9e0000",
            title: "Free Gift",
            description: "This Team will receive an Extra Gift from the next Gift Shop.",
          },
          {
            id: "CUSTOM_HATCHED",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Custom Hatched",
            description: "This Player was hatched via Bird Rights.",
          },
          {
            id: "FORCE",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Force",
            description: "This Player is Forced into position. They cannot leave their current Location.",
          },
          {
            id: "PSYCHOACOUSTICS",
            color: "#ff007b",
            textColor: "#ff007b",
            background: "#ffd1f1",
            title: "PsychoAcoustics",
            description:
              "In Feedback or Reverb, PsychoAcoustics will occasionally Echo one of the Away Team's mods to the Home Team, for game-long use.",
          },
          {
            id: "CRIME_SCENE",
            color: "#8a8099",
            textColor: "#8a8099",
            background: "#2a0b40",
            title: "Crime Scene",
            description: "When a Hard-Boiled Player plays at a Crime Scene, they'll Investigate.",
          },
          {
            id: "AFTER_PARTY",
            color: "#aba9a4",
            textColor: "#aba9a4",
            background: "#450043",
            title: "Afterparty",
            description:
              "This Team will occasionally receive permanent stats boost in their games (outside of Party Time), but only while they're losing.",
          },
          {
            id: "MIDDLING",
            color: "#809fff",
            textColor: "#809fff",
            background: "#002b0f",
            title: "Middling",
            description: "This Team or Player will Overperform in the Midseason.",
            descriptions: {
              player: "This Player will Overperform in the Midseason.",
              team: "This Team will Overperform in the Midseason.",
            },
          },
          {
            id: "0",
            color: "#cffff0",
            textColor: "#cffff0",
            background: "#904899",
            title: "0",
            description:
              "Players with 0 will always swing at strikes while there are 0 Balls and 0 Strikes in the At Bat.",
            descriptions: {
              player: "This Player will always swing at strikes while there are 0 Balls and 0 Strikes in the At Bat.",
              team:
                "Players batting for this Team will always swin at strikes while there are 0 Balls and 0 Strikes in the At Bat.",
            },
          },
          {
            id: "H20",
            color: "#cffff0",
            textColor: "#cffff0",
            background: "#489699",
            title: "H20",
            description: "Players with H20 will always swing at strikes while there are 2 Outs.",
            descriptions: {
              player: "This Player will always swing at strikes while there are 2 Outs.",
              team: "Players batting for this Team will always swing at strikes while there are 2 Outs.",
            },
          },
          {
            id: "ATTRACTOR",
            color: "#96fdff",
            textColor: "#96fdff",
            background: "#2e0330",
            title: "Attractor",
            description:
              "When this Player scores a Run, they'll join the Shadows of the Team that scored them, if they're not already on their Roster.",
          },
          {
            id: "SCRAMBLED",
            color: "#9a7b4f",
            textColor: "#9a7b4f",
            background: "#511c00",
            title: "Scrambled",
            description: "This Player is Scrambled.",
          },
          {
            id: "CAREFUL",
            color: "#fff39c",
            textColor: "#fff39c",
            background: "#ad4b00",
            title: "Careful",
            description: "This Player's Items will not be damaged by standard game actions.",
          },
          {
            id: "AMBITIOUS",
            color: "#ffcf0f",
            textColor: "#ffcf0f",
            background: "#247d7a",
            title: "Ambitious",
            description: "This Team or Player will Overperform in the Postseason.",
            descriptions: {
              player: "This Player will Overperform in the Postseason.",
              team: "This Team will Overperform in the Postseason.",
            },
          },
          {
            id: "PRO_SKATER",
            color: "#4dbd8b",
            textColor: "#4dbd8b",
            background: "#1a385c",
            title: "Pro Skater",
            description: "This Player cannot bail when using the Grind Rail.",
          },
          {
            id: "PSYCHIC",
            color: "#ff87ff",
            textColor: "#ff87ff",
            background: "#230747",
            title: "Psychic",
            description: "Psychic players have a chance of reversing a bad outcome with a Mind Trick.",
            descriptions: {
              player: "This Player has a chance of reversing a bad outcome with a Mind Trick.",
              team: "Players playing for this Team have a chance of reversing a bad outcome with a Mind Trick.",
            },
          },
          {
            id: "FIERY",
            color: "#ff995e",
            textColor: "#ff995e",
            background: "#940101",
            title: "Fiery",
            description: "Players with Fiery have a chance of throwing Double Strikes.",
            descriptions: {
              player: "This Player has a chance of throwing Double Strikes.",
              team: "Players pitching for this Team have a chance of throwing Double Strikes.",
            },
          },
          {
            id: "AAA",
            color: "#f1ffa3",
            textColor: "#f1ffa3",
            background: "#192400",
            title: "Power Chaaarge",
            description:
              "When this Player hits a Triple, they'll have a chance of Overperforming for the rest of the game.",
            descriptions: {
              player:
                "When this Player hits a Triple, they'll have a chance of Overperforming for the rest of the game.",
              team:
                "When a Player batting for this Team hits a Triple, they'll have a chance of Overperforming for the rest of the game.",
            },
          },
          {
            id: "UNAMBITIOUS",
            color: "#ada26d",
            textColor: "#ada26d",
            background: "#062e2d",
            title: "Unambitious",
            description: "This Team or Player will Underperform in the Postseason.",
            descriptions: {
              player: "This Player will Underperform in the Postseason.",
              team: "This Team will Underperform in the Postseason.",
            },
          },
          {
            id: "COASTING",
            color: "#809fff",
            textColor: "#809fff",
            background: "#4a152c",
            title: "Coasting",
            description: "This Team or Player will Underperform in the Midseason.",
            descriptions: {
              player: "This Player will Underperform in the Midseason.",
              team: "This Team will Underperform in the Midseason.",
            },
          },
          {
            id: "EAT_THE_RICH",
            color: "#f5d64e",
            textColor: "#f5d64e",
            background: "#911d00",
            title: "Eat The Rich",
            description:
              "At the end of each Season, the Fans with the top 1% of Coins will have their funds redistributed throughout the 99%.",
          },
          {
            id: "WILD_CARDS",
            color: "#dda6ed",
            textColor: "#dda6ed",
            background: "#291633",
            title: "Wild Cards",
            description:
              "At the end of the regular season, 1 Wild Card will be drawn at random from the remaining Teams in each Sub-League to receive a Postseason Birth.",
          },
          {
            id: "SIM_FREE_WILL",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#9e0000",
            title: "Free Wills",
            description:
              "The bottom four finishing Teams in the League will receive an extra Will in that Season's Election.",
          },
          {
            id: "SIM_ALL_YOU_CAN_EAT",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#06293d",
            title: "All You Can Eat",
            description:
              "Fans are free to buy and discard Snack Slots in their Snack Pack. The number of Slots they have will determine their Payout Modifier for all Snacks. The less slots, the higher the Payout Modifier.",
          },
          {
            id: "SIM_BASED_EVOLUTION",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#254027",
            title: "Based Evolution",
            description:
              "Every Third Championship a Team wins will cause the Team and its Players to Evolve. Players that round the phylogenic Bases will get to go Home.",
          },
          {
            id: "SIM_PARTY_TIME",
            color: "#ff66f9",
            textColor: "#ff66f9",
            background: "#fff947",
            title: "Party Time",
            description:
              "A Team will enter Party Time if receiving 1 Win per remaining game would not land them in the Postseason. In Party Time, they'll receive random Stat Boosts from Partying.",
          },
          {
            id: "FLOOD_BATH",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#163073",
            title: "Flood Bath",
            description:
              "When Runners on this Team are cleared via Flooding, they'll become Slippery for the remainder of the game.",
          },
          {
            id: "SLIPPERY",
            color: "#5ed4ff",
            textColor: "#5ed4ff",
            background: "#163073",
            title: "Slippery",
            description:
              "When a Slippery baserunner scores, and first base is available, they'll slide to first after scoring.",
          },
          {
            id: "HOTEL_MOTEL",
            color: "#fd73ff",
            textColor: "#fd73ff",
            background: "#fffd7a",
            title: "Hotel Motel",
            description:
              "The Hotel Motel will occasionally create Holiday Innings during the Earlseason, where you Party instead of Score.",
            descriptions: {
              ballpark:
                "The Hotel Motel will occasionally create Holiday Innings during the Earlseason, where you Party instead of Score.",
              league:
                "Holiday Innings will occasionally happen during the Earlseason, where Teams Party instead of score.",
            },
          },
          {
            id: "FAX_MACHINE",
            color: "#19002b",
            textColor: "#ffffff",
            background: "#8b5cad",
            title: "Fax Machine",
            description:
              "The Fax Machine will swap the Home Team's pitcher for their best Shadows Pitcher whenever they've allowed 10+ Runs in a game.",
          },
          {
            id: "SIM_COMMUNITY_CHEST",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#40223e",
            title: "Community Chest",
            description:
              "Anytime 3000 Runs are accumulated league-wide, every Team will receive an Item Crate for a random active Player on their Team.",
          },
          {
            id: "SIM_FAIRGROUNDS",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Fairgrounds",
            description:
              "All games have a chance of being Prize Matches, in which the winning Team will open an Item Crate.",
          },
          {
            id: "ENTANGLED",
            color: "#4b0f69",
            textColor: "#d285ff",
            background: "#ffffff",
            title: "Entangled",
            description: "Whenever this Player would return from Elsewhere, their Alternate will return instead.",
          },
          {
            id: "OFFWORLD",
            color: "#fffca6",
            textColor: "#fffca6",
            background: "#54216e",
            title: "Offworld",
            description: "When this Player hits a foul ball, it will fly Offworld.",
          },
          {
            id: "ACIDIC",
            color: "#40ff89",
            textColor: "#40ff89",
            background: "#015437",
            title: "Acidic",
            description:
              "Acidic pitchers occasionally throw Acidic pitches, which cause any Runs scored on the play to be worth .1 less.",
            descriptions: {
              player:
                "This Player will occasionally throw Acidic pitches, which cause any Runs scored on the play to be worth .1 less.",
              team:
                "Players pitching for this Team will occasionally throw Acidic pitches, which cause any Runs scored on the play to be worth .1 less.",
            },
          },
          {
            id: "AA",
            color: "#40f9ff",
            textColor: "#40f9ff",
            background: "#001f2e",
            title: "Power Chaarge",
            description:
              "When this Player hits a Double, they'll have a chance of Overperforming for the rest of the game.",
            descriptions: {
              player:
                "When this Player hits a Double, they'll have a chance of Overperforming for the rest of the game.",
              team:
                "When a Player batting for this Team hits a Double, they'll have a chance of Overperforming for the rest of the game.",
            },
          },
          {
            id: "SMITHY",
            color: "#ff6c3b",
            textColor: "#ff6c3b",
            background: "#414445",
            title: "Smithy",
            description: "The Smithy will occasionally repair Items for Players playing in this Ballpark.",
            descriptions: {
              ballpark: "The Smithy will occasionally repair Items for Players playing in this Ballpark.",
              league: "The Smithy will occasionally repair Items during games.",
            },
          },
          {
            id: "COVERUP",
            color: "#9de3de",
            textColor: "#9de3de",
            background: "#2b2a29",
            title: "Cover Up",
            description: "This Player is covering something up.",
          },
          {
            id: "REPLICA",
            color: "#ffb452",
            textColor: "#ffb452",
            background: "#30140d",
            title: "Replica",
            description: "This Player will fade to Dust at the end of the Season.",
          },
          {
            id: "DUST",
            color: "#ffb452",
            textColor: "#ffb452",
            background: "#30140d",
            title: "Dust",
            description: "This Player is waiting to be Dusted off.",
          },
          {
            id: "RALLY",
            color: "#00ff51",
            textColor: "#00ff51",
            background: "#1a0112",
            title: "Rally",
            description: "This Team or Player will play 5% better when losing in the 7th inning or later.",
            descriptions: {
              player: "This Player will play 5% better when losing in the 7th inning or later.",
              team: "This Team will play 5% better when losing in the 7th inning or later.",
            },
          },
          {
            id: "NIGHT_VISION",
            color: "#b2ffa1",
            textColor: "#b2ffa1",
            background: "#1c0a4a",
            title: "Night Vision",
            description: "This Player will play 50% better in Solar Eclipse weather.",
          },
          {
            id: "NEGATIVE",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#000000",
            title: "Negative",
            description: "This Player is a Negative.",
          },
          {
            id: "OPEN_FLOOR_PLAN",
            color: "#bdbdbd",
            textColor: "#bdbdbd",
            background: "#002b00",
            title: "Open Floor Plan",
            description: "This Ballpark's Grandiosity is 5% the eDensity of a standard Ballpark.",
          },
          {
            id: "INTUITIVE",
            color: "#fff373",
            textColor: "#fff373",
            background: "#273300",
            title: "Intuitive",
            description:
              "This Player's pitching will be boosted 10% when switching from Lineup to Rotation, and their hitting will be boosted 10% when switching from Rotation to Lineup.",
          },
          {
            id: "UNDEFINED",
            color: "#b30074",
            textColor: "#b30074",
            background: "#c7c7c7",
            title: "Undefined",
            description: "This Player will play 50-100% better while Scattered.",
          },
          {
            id: "SLOW_BUILD",
            color: "#00c9bc",
            textColor: "#00c9bc",
            background: "#2b2e2e",
            title: "Slow Build",
            description: "This Player will bat 1% better for each subsequent At Bat they have in a game.",
          },
          {
            id: "GRAPHENE",
            color: "#a8ffae",
            textColor: "#a8ffae",
            background: "#1c2b2a",
            title: "Graphene",
            description: "This Ballpark's Fortifications are 5% the eDensity of a standard Ballpark.",
          },
          {
            id: "A",
            color: "#ab0e00",
            textColor: "#ab0e00",
            background: "#260300",
            title: "A Blood Type",
            description: "A Team or Player with A Blood Type will play each game with a random Blood type ability.",
          },
          {
            id: "GOOD_RIDDANCE",
            color: "#ffcffd",
            textColor: "#ffcffd",
            background: "#1a070d",
            title: "Good Riddance",
            description: "This Team will throw a Party when a Roamin' or Super Roamin' player leaves their roster.",
          },
          {
            id: "TURNTABLES",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#a16dc3",
            title: "Turntables",
            description:
              "Any Win earned from a non-loss in this Ballpark during the Regular Season will be converted to an Unwin.",
            descriptions: {
              ballpark:
                "Any Win earned from a non-loss in this Ballpark during the Regular Season will be converted to an Unwin.",
              league: "Any Win earned from a non-loss during the Regular Season will be converted to an Unwin.",
            },
          },
          {
            id: "SIM_RATIFICATION",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#23263d",
            title: "Ratification",
            description:
              "Renovations built by at least 18 Teams will be Ratified into Non-Physical Law for the entire League.",
          },
          {
            id: "SIM_ON_THE_HOUSE",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#163321",
            title: "On the House",
            description: "Teams will build an Additional Renovation at no extra cost each Season.",
          },
          {
            id: "SIM_HYPE_TRAIN",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#163321",
            title: "Hype Train",
            description: "Shaming your opponent will build Hype in your Ballpark.",
          },
          {
            id: "UNDERTAKER",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#163321",
            title: "Undertaker",
            description: "This Player will dive in to Develop a Negative when a teammate goes Elsewhere.",
          },
          {
            id: "SEEKER",
            color: "#ffffff",
            textColor: "#ffffff",
            background: "#163321",
            title: "Seeker",
            description: "The Player has a chance to bring teammates back from Elsewhere.",
          },
          {
            id: "SUBTRACTOR",
            color: "#f70063",
            textColor: "#f70063",
            background: "#420000",
            title: "Subtractor",
            description:
              "When this Player bats in a Run or Unrun, the polarity of the Run or Unrun will be flipped (Runs become Unruns, Unruns become Runs).",
          },
          {
            id: "UNDERACHIEVER",
            color: "#f70063",
            textColor: "#f70063",
            background: "#362236",
            title: "Underachiever",
            description:
              "When this Player hits a Home Run, the polarity of the Runs or Unruns will be flipped (Runs become Unruns, Unruns become Runs).",
          },
          {
            id: "UNDERHANDED",
            color: "#f70063",
            textColor: "#f70063",
            background: "#362236",
            title: "Underhanded",
            description:
              "When this Pitcher allows a Home Run, the polarity of the Runs or Unruns will be flipped (Runs become Unruns, Unruns become Runs).",
          },
          {
            id: "MODERATION",
            color: "#a8fffc",
            textColor: "#a8fffc",
            background: "#00242e",
            title: "Moderation",
            description: "This Team will accept Unruns after each non-loss so that they only non-lose by 1 Run.",
          },
          {
            id: "GAUDY",
            color: "#dede5f",
            textColor: "#dede5f",
            background: "#6d3573",
            title: "Gaudy",
            description: "This Player will play better in Ballparks with more Modifications.",
          },
          {
            id: "GUARDED",
            color: "#c3c6c7",
            textColor: "#c3c6c7",
            background: "#272d30",
            title: "Guarded",
            description:
              "This Player will play better in more Fortified Ballparks, and worse in less Fortified Ballparks.",
          },
          {
            id: "CLUTTERED",
            color: "#e3cfd6",
            textColor: "#e3cfd6",
            background: "#3b342e",
            title: "Cluttered",
            description: "This Player will play better in Filthier Ballparks.",
          },
          {
            id: "OUTDOORSY",
            color: "#edd8a6",
            textColor: "#edd8a6",
            background: "#012e05",
            title: "Outdoorsy",
            description:
              "This Player will play better in more Grandiose Ballparks, and worse in less Grandiose Ballparks.",
          },
          {
            id: "YOLKED",
            color: "#ebdb34",
            textColor: "#ebdb34",
            background: "#00242e",
            title: "Yolked",
            description: "This Player is Yolked!",
          },
          {
            id: "FIREWALKER",
            color: "#a8fffc",
            textColor: "#a8fffc",
            background: "#00242e",
            title: "Firewalker",
            description: "When this Player leaves a Location, they'll leave Instability behind.",
          },
          {
            id: "STRANGE_ATTRACTOR",
            color: "#a8fffc",
            textColor: "#a8fffc",
            background: "#00242e",
            title: "Strange Attractor",
            description:
              "When this player scores a Run, they'll join the Active Roster of a random other Team in the League.",
          },
          {
            id: "SUNSUN",
            color: "#ffca4f",
            textColor: "#ffca4f",
            background: "#994700",
            title: "Sun(Sun)",
            description: "All Wins and Unwins earned will be Squared.",
            descriptions: {
              league: "All Wins and Unwins earned will be Squared.",
              ballpark: "All Wins and Unwins earned in this Ballpark will be Squared.",
              team: "All Wins and Unwins earned by this Team will be Squared.",
            },
          },
          {
            id: "SIM_UNDERBRACKET",
            color: "#e1adff",
            textColor: "#e1adff",
            background: "#592975",
            title: "The Underbracket",
            description:
              "Every Postseason, the bottom finishing Teams will compete in the Underbracket while the top finishing Teams compete in the standard Overbracket.",
          },
          {
            id: "AIR_BALLOONS",
            color: "#e1adff",
            textColor: "#e1adff",
            background: "#592975",
            title: "Air Balloons",
            description:
              "A small, permanent amount of negative eDensity is added for each Run or Win earned in this Ballpark.",
          },
          {
            id: "VERY_FOUL_BALLS",
            color: "#e1adff",
            textColor: "#e1adff",
            background: "#592975",
            title: "Very Foul Balls",
            description: "Every Foul Ball hit in this Ballpark will add 5x the eDensity that it normally would.",
          },
          {
            id: "LIGHT_SWITCH_ON",
            color: "#e1adff",
            textColor: "#e1adff",
            background: "#592975",
            title: "Light Switch ON",
            description:
              "Toggle the polarity of your Stadium's eDensity any time the Light Switch is rebuilt. Currently in the ON position.",
          },
          {
            id: "LIGHT_SWITCH_OFF",
            color: "#e1adff",
            textColor: "#e1adff",
            background: "#592975",
            title: "Light Switch OFF",
            description:
              "Toggle the polarity of your Stadium's eDensity any time the Light Switch is rebuilt. Currently in the OFF position.",
          },
        ],
      };
    },
    39: function (e, t, a) {},
    40: function (e, t, a) {},
    54: function (e, t, a) {},
    55: function (e, t, a) {},
    65: function (e) {
      e.exports = {
        glossary: [
          {
            name: "0 No",
            definition: [
              "A bloodborne ability preventing Players from being struck out when there are 0 Balls in the Count.",
            ],
          },
          {
            name: "Affinity For Crows",
            definition: ["A condition that results in a 50% increase in performance during Birds weather."],
          },
          { name: "Alternate", definition: ["A Player who substitutes for or alternates with another."] },
          { name: "Apple", definition: ["A Snack that accesses forbidden knowledge."] },
          { name: "Art Gallery", definition: ["An exhibition showcasing art created by Fans of the ILB."] },
          {
            name: "Away Team",
            definition: [
              "A Team playing in a Ballpark that is associated with another Team.",
              "The Team that bats during the Top of each Inning.",
            ],
          },
          {
            name: "Ballpark",
            definition: ["A venue where Blaseball is played and the location of a Team's home games."],
          },
          {
            name: "Base Instincts",
            definition: [
              "A bloodborne ability granting a Player the chance to head past first base when getting walked.",
            ],
          },
          {
            name: "Bird Seed",
            definition: [
              "Any seed or blend of seeds used for feeding birds.",
              "A blessing to be used in case of Shelling.",
            ],
          },
          {
            name: "Black Hole",
            definition: [
              "Weather.",
              "A celestial object formed when a ||| runs out of fuel.",
              "A region of Immateria with a gravitational field and |||||||| so strong that nothing can escape it.",
            ],
          },
          { name: "Blaserunning", definition: ["The act of scoring .2 Runs for your Team whenever you steal a base."] },
          { name: "Bless Off", definition: ["A denial of divine favor."] },
          { name: "Blood Bath", definition: ["A canceled event"] },
          {
            name: "Blooddrain",
            definition: [
              "Weather.",
              "The act, process, or mode of transfusing ||||||||| |||| from one or more Players to one or more other Players.",
            ],
          },
          { name: "Boost", definition: ["To add a quantity of stellar Plasma.", "To apply a statistical increase."] },
          {
            name: "Bottom of the Inning",
            definition: [
              "A portion of an Inning during which the Home Team bats and which concludes when the last of the Home Team's Ins becomes an Out.",
            ],
          },
          { name: "Burger", definition: ["A Snack that rewards Coins whenever a Player's Idol pitches a shutout."] },
          {
            name: "Chaotic",
            definition: ["A non-physical concept that results in Unstable players hitting 100% better."],
          },
          {
            name: "Charm",
            definition: ["A bloodborne ability granting a Player the chance to convince an opponent to fail."],
          },
          { name: "Cheese Board", definition: ["A Snack that allows participation in Wills."] },
          {
            name: "Chesapeake Racetrack and Ballpark (or: The Crabitat)",
            definition: ["The home ballpark of the Baltimore Crabs."],
          },
          { name: "Chips", definition: ["A Snack that rewards Coins whenever a Player's Idol pitches a strikeout."] },
          {
            name: "Coffee",
            definition: [
              "Weather.",
              "A beverage made by Percolation, Infusion, or Decoction from the roasted and ground seeds of a coffee plant.",
            ],
          },
          { name: "Coin", definition: ["A form of currency.", "A form of speech."] },
          {
            name: "Commissioner",
            definition: [
              "An official representative of the ILB in charge of resolving disputes, negotiating contracts, handling disciplinary matters, promoting the overall league and maintaining order.",
            ],
          },
          {
            name: "Concessions",
            definition: ["A place to spend Coins.", "Things granted, especially in respond to demands."],
          },
          {
            name: "Consolidated Debt",
            definition: [
              "A form of Debt Refinancing that entails taking out one loan to pay off many others. This commonly refers to a personal finance process of individuals addressing high Consumer Debt.",
            ],
          },
          { name: "Containment", definition: ["The action of keeping Instability from chaining to an opponent."] },
          { name: "Credit to the Team", definition: ["An Idol that earns Fans x5 the rewards for their worship."] },
          {
            name: "Crunchy",
            definition: ["A condition that results in Honey-Roasted Players hitting 100% better and with +200% Power."],
          },
          {
            name: "Curse of Crows",
            definition: [
              "A bird curse making a Team or Player the target of attacks, |||||||||||| || |||| || ||||| ||||||||.",
            ],
          },
          { name: "Debt", definition: ["A curse.", "Something that is owed or due."] },
          {
            name: "Earlpostseason",
            definition: ["The period of the Postseason comprising the Wild Card Round and Round 2."],
          },
          {
            name: "Earlseason",
            definition: [
              "The period of the Regular Season spanning from the First Day to the Earlsiesta.",
              "Days 1-27.",
            ],
          },
          {
            name: "Earlsiesta",
            definition: [
              "A period of Rest bridging the Earlseason and the Midseason.",
              "The time of the Seasonal Reading.",
            ],
          },
          { name: "||||", definition: ["| |||||||||||||| ||||||| |||||||| ||||||| |||||||| ||||||"] },
          { name: "|||||", definition: ["| |||||||||||||| ||||||| |||||||| ||||||| |||||||| ||||||"] },
          { name: "||||||", definition: ["| |||||||||||||| ||||||| |||||||| ||||||| |||||||| |||| |||| ||||||"] },
          {
            name: "||||||||",
            definition: ["| |||||||||||||| ||||||| |||||||| ||||||| |||||||| ||||| ||| |||| ||||||| |||||||| |||||"],
          },
          {
            name: "Election",
            definition: [
              "A formal group decision-making process by which Fans spend Votes in exchange for divine favor.",
            ],
          },
          {
            name: "Electric",
            definition: [
              "Of, relating to, or operated by electricity.",
              "A bloodborne ability capable of zapping away Strikes.",
            ],
          },
          { name: "|||||||||", definition: ["||| ||||."] },
          {
            name: "Endseason",
            definition: [
              "A period of Rest bridging the Lateseason and the Earlpostseason.",
              "The time of Postseason Births and MVP selection.",
            ],
          },
          { name: "Fan", definition: ["An entity who observes and impacts Blaseball."] },
          {
            name: "Feedback",
            definition: [
              "Weather.",
              "The return to the input of a part of the output of a machine, system, or process (as for producing changes in an electronic circuit that improve performance or in an automatic control device that provide self-corrective action).",
              "A possible consequence of Localization Error.",
            ],
          },
          {
            name: "Fielder's Choice",
            definition: [
              "A Play in which the |||||||| |||||| |||||||| || ||| ||| ||||||| |||||| allows the Hitter to reach first base safely.",
            ],
          },
          {
            name: "Fifth Base",
            definition: [
              "A physical concept that can be added to a Team's base path, forcing the Team to run five bases instead of four in order to score.",
            ],
          },
          {
            name: "Fire Eater",
            definition: [
              "A Player that, in the event of attempted incineration, will instead ||||||| ||| ||||| ||| become Magmatic.",
            ],
          },
          { name: "Fireproof", definition: ["Unable to be incinerated."] },
          { name: "First Born", definition: ["The firstborn of the Bloodhouse."] },
          {
            name: "Flickering",
            definition: ["Shining unsteadily; wavering.", "Having a higher chance of being Feedbacked."],
          },
          { name: "Fliickerrriiing", definition: ["Shining unsteadily, but way more; wavering. (See Flickering)."] },
          {
            name: "Flinch",
            definition: ["A curse resulting in the inability to swing until a strike has been thrown in the At Bat."],
          },
          { name: "Flooding", definition: ["Weather.", "A surge of Immateria.", "A Fan-made crisis."] },
          { name: "Flute", definition: ["A Snack that allows a Fan to change their favorite Team."] },
          { name: "Free Refill", definition: ["The replenishment of an In."] },
          {
            name: "Friend of Crows",
            definition: ["A Pitcher who encourages Birds to attack hitters in Bird weather."],
          },
          { name: "Gods' Day", definition: ["A day of Rest and Revision.", "Sunday."] },
          {
            name: "Gravity",
            definition: [
              "A natural phenomenon by which all things with mass or energy are brought toward one another.",
              "A modification that muffles Reverb.",
            ],
          },
          {
            name: "Growth",
            definition: [
              "A bloodborne ability to play better over time, up to a 5% global boost in performance by season's end.",
            ],
          },
          {
            name: "Hall of Flame",
            definition: [
              "A resting place for Players that have been Incinerated. The Hall of Flame is located || ||| |||||| and is guarded by the Being known as ||| |||||||.",
            ],
          },
          { name: "Hard Boiled", definition: ["A Player that was boiled a little bit before hatching."] },
          { name: "Haunted", definition: ["A curse that results in being occassionally Inhabited."] },
          {
            name: "Heating Up...",
            definition: [
              "A transitory state in which a batter needs one or more consecutive hits to enter Fire mode, but which will dissipate should the batter record an Out.",
            ],
          },
          {
            name: "Home Field Advantage",
            definition: ["A physical concept that adds one Run to a Team's pile at the start of each Home Game."],
          },
          {
            name: "Home Team",
            definition: [
              "A team playing in the Ballpark associated with their organization.",
              "The team that bats during the Bottom of each Inning.",
            ],
          },
          { name: "Honey Roasted", definition: ["Graced by the Shelled One."] },
          { name: "Hot Dog", definition: ["A Snack that rewards Coins whenever a Player's Idol hits a home run."] },
          {
            name: "Idol",
            definition: [
              "A Player that has been Idolized by a Fan, and whose performance will in turn reward the Fan with Coins.",
            ],
          },
          { name: "Idol Immune", definition: ["Incapable of being Idolized."] },
          {
            name: "Impair",
            definition: ["To remove a quantity of stellar Plasma.", "To apply a statistical reduction."],
          },
          { name: "In", definition: ["A |||||||| concept comprising the building blocks of an Inning."] },
          {
            name: "Incineration",
            definition: ["The destruction of something, especially waste material, by burning."],
          },
          { name: "Inhabiting", definition: ["The act of living in or occupying another Player."] },
          {
            name: "Inning",
            definition: [
              "A division of a game during which the two teams alternate as offense and defense and during which each team is allowed at least two outs while batting.",
              "A non-zero number of Ins.",
            ],
          },
          {
            name: "Internet Series",
            definition: [
              "The annual championship series of Internet League Blaseball, contested since Season 6 of the Discipline Era, between the champion teams of the Wild League and the Mild League.",
            ],
          },
          {
            name: "Inverted",
            definition: ["| |||||||| ||||||| ||||||||| || |||||||| ||||||| | ||||||| ||||||| |||||||"],
          },
          {
            name: "Latepostseason",
            definition: [
              "The period of the Postseason comprising the Wild League Championship Series, the Mild League Championship Series, and the Internet Series.",
            ],
          },
          { name: "Latesiesta", definition: ["A period of Rest bridging the Midseason and the Lateseason."] },
          {
            name: "Lateseason",
            definition: [
              "The period of the Regular Season beginning at the end of the Latesiesta and ending at the beginning of the Endseason.",
            ],
          },
          {
            name: "|||||||||",
            definition: [
              "| |||||||| ||||||| |||||||| ||||| ||| |||| |||||||| |||||||| ||||| || ||||| ||||| |||||| |||||| |||||||",
            ],
          },
          {
            name: "Liberated",
            definition: [
              "Free from domination, control, or influence.",
              "A guarantee of extra bases when a Player gets a hit.",
            ],
          },
          {
            name: "Life of the Party",
            definition: ["A state of being in which a Team gets 10% more from their Party Time stats boosts."],
          },
          {
            name: "Lineup",
            definition: [
              "The Players on a Team's Roster that have been designated as Hitters.",
              "The sequence in which these Players take their turns batting against the Pitcher.",
            ],
          },
          {
            name: "Losses",
            definition: [
              "A non-physical concept determining the total number of games that a Team lost in a Season, as presented in a Team's Record.",
              "A unit of measurement.",
            ],
          },
          {
            name: "Lots of Birds",
            definition: ["Weather.", "A congregation of feathered friends.", "An infestation of pests."],
          },
          { name: "Loyalty", definition: ["A strong feeling of support or allegiance."] },
          {
            name: "Magmatic",
            definition: ["A condition that guarantees a Player will hit a home run at their next At Bat."],
          },
          {
            name: "Midseason",
            definition: [
              "The period of the Regular Season beginning at the end of the Earlsiesta and ending at the beginning of the Latesiesta.",
              "Days 28-72.",
            ],
          },
          { name: "Mild", definition: ["A curse resulting in the possibility of throwing a Mild Pitch."] },
          {
            name: "Mild League Championship Series",
            definition: ["A postseason series to decide the Mild League representative in the Internet Series."],
          },
          {
            name: "Non-Losses",
            definition: [
              "The non-physical concept determining the number of games that a Team did not lose, as presented in a Team's Record.",
              "A unit of measurement.",
            ],
          },
          { name: "Observed", definition: ["A state of being watched."] },
          { name: "|||||", definition: ["A destroyed non-physical concept."] },
          { name: "Out", definition: ["The absence of an In."] },
          { name: "Outing", definition: ["The absence of Ins."] },
          {
            name: "Party Time",
            definition: [
              "A non-physical concept entered into when a team is mathematically eliminated from the Postseason, during which they may occasionally receive permanent stat boosts during games.",
            ],
          },
          {
            name: "Partying",
            definition: ["A non-physical concept that has the potential of becoming a physical concept."],
          },
          {
            name: "Peanuts",
            definition: [
              "A gift from the Shelled One.",
              "A snack to be consumed during Blaseball games (not to be confused with Snacks).",
              "An offering of tribute in the Hall of Flame.",
              "Weather.",
              "A unit of significance.",
            ],
          },
          { name: "Pending", definition: ["Awaiting decision or settlement."] },
          { name: "Percolated", definition: ["|||| |||||| ||| |||| ||||| ||| |||||||||| |||||||||||"] },
          { name: "Perk", definition: ["A reward of Percolated energy."] },
          { name: "Pity", definition: ["To hold back."] },
          { name: "Pizza", definition: ["A Snack that allows participation in Stadium renovation & flag planting."] },
          {
            name: "Player",
            definition: [
              "An entity governed by the rules of Blaseball who is competing or has previously competed in the ILB.",
            ],
          },
          {
            name: "Popcorn",
            definition: ["A Snack that increases the payout for each win-object forged by your Team."],
          },
          {
            name: "Preseason",
            definition: ["The period of time between Gods' Day and the beginning of the Regular Season."],
          },
          { name: "Receiver", definition: ["A Player that harmonizes with ||||||| ||||| or Player."] },
          {
            name: "Red Hot!",
            definition: [
              "A Modification that greatly boosts a batter's hitting and which disappears if the batter gets out.",
            ],
          },
          {
            name: "Refinanced Debt",
            definition: [
              "A new debt instrument that has better terms than a previous contract and can be used to pay down the previous obligation.",
            ],
          },
          { name: "Released", definition: ["| ||||| || ||||| ||| |||"] },
          { name: "Repeating", definition: ["A tendency to Repeat during Reverb weather."] },
          {
            name: "Returned",
            definition: [
              "The state of having returned from the Void, with the possibility of being called back at the end of each Season.",
            ],
          },
          { name: "Reverb", definition: ["Weather.", "An electronically produced Echo."] },
          { name: "Reverberating", definition: ["Having a small chance of batting again after each At Bat."] },
          { name: "Roamin", definition: ["A state of uncertainty following Revocation and preceding Recruitment."] },
          {
            name: "Rotation",
            definition: [
              "The Players on a Team's Roster that have been designated as Pitchers.",
              "The sequence in which these players pitch.",
            ],
          },
          {
            name: "Run",
            definition: [
              "A physical object forged |||| ||| |||||| || ||| | during a game of blaseball. Often kept in a pile.",
            ],
          },
          {
            name: "Saboteur",
            definition: ["A Player that intentionally fails, usually out of allegiance to another Team."],
          },
          { name: "Sealant", definition: ["Blooddrain prevention."] },
          {
            name: "Shadows",
            definition: [
              "Players on a Team's Roster that have not joined the Lineup or Rotation.",
              "Deep Dark, Static and Smoke.",
            ],
          },
          {
            name: "Shame",
            definition: [
              "A physical concept that manifests when the Home Team takes the lead in Inning 9 or later, excluding ||| |||||| ||||.",
            ],
          },
          { name: "Shame Donor", definition: ["A Team or Player who adds Unruns to a Shamed opponents' future pile."] },
          { name: "|||||||", definition: ["A state of being trapped inside a big Peanut and unable to bat or pitch."] },
          { name: "Shop", definition: ["The act of spending Coins in exchange for products."] },
          { name: "Siesta", definition: ["An Official stoppage of League Play.", "The only time Players may rest."] },
          {
            name: "Siphon",
            definition: ["A Player that steals blood more often in Blooddrain and uses it in more ways."],
          },
          { name: "Snake Oil", definition: ["A Snack that increases the amount Fans are able to bet on games."] },
          {
            name: "Solar Eclipse",
            definition: [
              "Weather.",
              "The total or partial obscuring of one celestial body by another.",
              "The obstruction of ||| | by |||| |.",
            ],
          },
          { name: "Somewhat Better", definition: ["An improvement of 5%."] },
          { name: "Somewhat Worse", definition: ["A deterioration of 5%."] },
          { name: "Soundproof", definition: ["Unable to be caught in Feedback's reality flickers."] },
          {
            name: "Spicy",
            definition: ["A Modification that will make a Player Red Hot if they get three consecutive hits."],
          },
          {
            name: "Squiddest",
            definition: ["A team-wide condition that causes any Player who joins the Team to become Squiddish."],
          },
          {
            name: "Squiddish",
            definition: [
              "Of or relating to a squid or the act of being swallowed and regurgitated by a squid or other large cephalopod.",
              "A condition that, in the event of the Player's Incineration, results in the replacement of the Incinerated Player with another from the Hall of Flame.",
            ],
          },
          { name: "Stable", definition: ["Unable to be made Unstable."] },
          { name: "Stale Popcorn", definition: ["A Snack that rewards Coins whenever your Team loses."] },
          {
            name: "Star",
            definition: [
              "A volumetric unit of congealed care.",
              "A measurement of potentiality.",
              "An object forged by ||| ||||| |||||||||| ||| |||||||||| |||||| consisting of a luminous spheroid of Plasma held together by ||||.",
            ],
          },
          {
            name: "Steal",
            definition: ["An exchange of Players in which only one Player is selected for the transaction."],
          },
          { name: "Subjection", definition: ["A state of domination, control, or influence."] },
          {
            name: "Sub-League",
            definition: [
              "A group of teams comprising half of the ILB and who compete against each other in order to win a Wild or Mild Championship.",
            ],
          },
          {
            name: "Sun 2",
            definition: ["Weather.", "A celestial body forged by ||||||||||.", "The source of |||| and ||||."],
          },
          { name: "Sunflower Seeds", definition: ["A Snack that rewards Coins whenever a Fan's Idol gets a Hit."] },
          { name: "Super Idol", definition: ["An Idol that rewards Fans' double for their worship."] },
          { name: "Superallergic", definition: ["Having an extreme allergy for a specific food, usually peanuts."] },
          { name: "Superyummy", definition: ["Having an extreme love for a specific food, usually peanuts."] },
          {
            name: "Swap",
            definition: [
              "An exchange of Players in which both Players are selected in order to determine the transaction.",
            ],
          },
          {
            name: "Targeted Shame",
            definition: ["A curse that adds Unruns to a Shamed Team's pile for the following game."],
          },
          { name: "||| ||||", definition: ["Is."] },
          {
            name: "The Coffee Cup",
            definition: [
              "A Grand Siesta Tournament in which Players compete under the banner of their preferred coffee style.",
            ],
          },
          {
            name: "The Fourth Strike",
            definition: ["An extra strike in each At Bat that may be rewarded to Teams or Players."],
          },
          {
            name: "Tired",
            definition: [
              "A condition triggered when a Run is scored, resulting in each Tired player involved in the play (the Scoring Baserunner, Current Batter, or Current Pitcher) making the run-object worth 0.5 less.",
            ],
          },
          {
            name: "Top of the Inning",
            definition: [
              "The portion of an Inning during which the Away Team bats and which concludes when the last of the Away Team's Ins becomes an Out.",
            ],
          },
          { name: "Traveling", definition: ["Playing 5% better in Away Games."] },
          {
            name: "Tribute",
            definition: [
              "An act, statement, or gift that is intended to show gratitude, respect, or admiration.",
              "Payment made periodically by one individual to another, especially as a sign of dependence.",
              "| |||||||| ||||| of Team Spirit.",
            ],
          },
          {
            name: "Unstable",
            definition: ["The condition of having a much higher chance of being incinerated during a Solar Eclipse."],
          },
          {
            name: "Vote",
            definition: [
              "A form of currency used in the Election and which may be spent on Decrees, Blessings, and Wills.",
              "A Snack.",
            ],
          },
          { name: "Walk in the Park", definition: ["The ability to walk to first base on one less Ball."] },
          {
            name: "Well Rested",
            definition: ["A state of no longer being Tired and swapping with a Player from the Shadows."],
          },
          {
            name: "Wild League Championship Series",
            definition: ["A postseason series to decide the Wild League representative in the Internet Series."],
          },
          { name: "Will", definition: ["A democratically determined distribution of Benefits."] },
          { name: "Win", definition: ["A valuable object forged |||| ||| |||||| || ||| |.", "A unit of measurement."] },
          {
            name: "Wins",
            definition: ["The gross collected win-objects forged |||| ||| |||||| || ||| | in a Season."],
          },
          {
            name: "Wired",
            definition: [
              "A condition triggered when a Run is scored, resulting in each Wired Player involved in the play (the Scoring Baserunner, Current Batter, or Current Pitcher) making the run-object worth 0.5 more.",
            ],
          },
        ],
      };
    },
    66: function (e, t, a) {},
    76: function (e, t, a) {},
    84: function (e, t, a) {},
    94: function (e, t, a) {},
    97: function (e, t, a) {},
  },
  [[255, 1, 2]],
]);
